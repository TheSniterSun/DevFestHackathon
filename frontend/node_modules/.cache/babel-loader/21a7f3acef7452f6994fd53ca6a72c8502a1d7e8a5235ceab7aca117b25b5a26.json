{"ast":null,"code":"import { RedBlackNode } from \"./RedBlackTree\";\nimport { createCell } from \"./Cell\";\nimport { attachCircle, detachCircle } from \"./Circle\";\nimport { createEdge, setEdgeEnd } from \"./Edge\";\nimport { beaches, epsilon } from \"./Diagram\";\nvar beachPool = [];\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge = this.site = this.circle = null;\n}\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach();\n  beach.site = site;\n  return beach;\n}\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n    x = circle.x,\n    y = circle.cy,\n    vertex = [x, y],\n    previous = beach.P,\n    next = beach.N,\n    disappearing = [beach];\n  detachBeach(beach);\n  var lArc = previous;\n  while (lArc.circle && Math.abs(x - lArc.circle.x) < epsilon && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n  var rArc = next;\n  while (rArc.circle && Math.abs(x - rArc.circle.x) < epsilon && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n  disappearing.push(rArc);\n  detachCircle(rArc);\n  var nArcs = disappearing.length,\n    iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\nexport function addBeach(site) {\n  var x = site[0],\n    directrix = site[1],\n    lArc,\n    rArc,\n    dxl,\n    dxr,\n    node = beaches._;\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L;else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n  if (!lArc && !rArc) return;\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n  if (!rArc) {\n    // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n  var lSite = lArc.site,\n    ax = lSite[0],\n    ay = lSite[1],\n    bx = site[0] - ax,\n    by = site[1] - ay,\n    rSite = rArc.site,\n    cx = rSite[0] - ax,\n    cy = rSite[1] - ay,\n    d = 2 * (bx * cy - by * cx),\n    hb = bx * bx + by * by,\n    hc = cx * cx + cy * cy,\n    vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n    rfocx = site[0],\n    rfocy = site[1],\n    pby2 = rfocy - directrix;\n  if (!pby2) return rfocx;\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n  site = lArc.site;\n  var lfocx = site[0],\n    lfocy = site[1],\n    plby2 = lfocy - directrix;\n  if (!plby2) return lfocx;\n  var hl = lfocx - rfocx,\n    aby2 = 1 / pby2 - 1 / plby2,\n    b = hl / plby2;\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n  return (rfocx + lfocx) / 2;\n}\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}","map":{"version":3,"names":["RedBlackNode","createCell","attachCircle","detachCircle","createEdge","setEdgeEnd","beaches","epsilon","beachPool","Beach","edge","site","circle","createBeach","beach","pop","detachBeach","remove","push","removeBeach","x","y","cy","vertex","previous","P","next","N","disappearing","lArc","Math","abs","unshift","rArc","nArcs","length","iArc","addBeach","directrix","dxl","dxr","node","_","leftBreakPoint","L","rightBreakPoint","R","newArc","insert","lSite","ax","ay","bx","by","rSite","cx","d","hb","hc","arc","rfocx","rfocy","pby2","Infinity","lfocx","lfocy","plby2","hl","aby2","b","sqrt"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/node_modules/d3-voronoi/src/Beach.js"],"sourcesContent":["import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}