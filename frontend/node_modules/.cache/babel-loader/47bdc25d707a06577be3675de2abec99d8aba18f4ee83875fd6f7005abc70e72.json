{"ast":null,"code":"import bbox from '@turf/bbox';\nimport area from '@turf/area';\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport explode from '@turf/explode';\nimport { collectionOf, getCoords } from '@turf/invariant';\nimport { isObject, multiPolygon, featureCollection, polygon } from '@turf/helpers';\nimport objectAssign from 'object-assign';\nimport { featureEach } from '@turf/meta';\n\n/**\n * Takes a {@link Point} grid and returns a correspondent matrix {Array<Array<number>>}\n * of the 'property' values\n *\n * @name gridToMatrix\n * @param {FeatureCollection<Point>} grid of points\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {boolean} [options.flip=false] returns the matrix upside-down\n * @param {boolean} [options.flags=false] flags, adding a `matrixPosition` array field ([row, column]) to its properties,\n * the grid points with coordinates on the matrix\n * @returns {Array<Array<number>>} matrix of property values\n * @example\n *   var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n *   var cellSize = 3;\n *   var grid = turf.pointGrid(extent, cellSize);\n *   // add a random property to each point between 0 and 60\n *   for (var i = 0; i < grid.features.length; i++) {\n *     grid.features[i].properties.elevation = (Math.random() * 60);\n *   }\n *   gridToMatrix(grid);\n *   //= [\n *     [ 1, 13, 10,  9, 10, 13, 18],\n *     [34,  8,  5,  4,  5,  8, 13],\n *     [10,  5,  2,  1,  2,  5,  4],\n *     [ 0,  4, 56, 19,  1,  4,  9],\n *     [10,  5,  2,  1,  2,  5, 10],\n *     [57,  8,  5,  4,  5,  0, 57],\n *     [ 3, 13, 10,  9,  5, 13, 18],\n *     [18, 13, 10,  9, 78, 13, 18]\n *   ]\n */\nfunction gridToMatrix(grid, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var zProperty = options.zProperty || \"elevation\";\n  var flip = options.flip;\n  var flags = options.flags;\n\n  // validation\n  collectionOf(grid, \"Point\", \"input must contain Points\");\n  var pointsMatrix = sortPointsByLatLng(grid, flip);\n  var matrix = [];\n  // create property matrix from sorted points\n  // looping order matters here\n  for (var r = 0; r < pointsMatrix.length; r++) {\n    var pointRow = pointsMatrix[r];\n    var row = [];\n    for (var c = 0; c < pointRow.length; c++) {\n      var point = pointRow[c];\n      // Check if zProperty exist\n      if (point.properties[zProperty]) row.push(point.properties[zProperty]);else row.push(0);\n      // add flags\n      if (flags === true) point.properties.matrixPosition = [r, c];\n    }\n    matrix.push(row);\n  }\n  return matrix;\n}\n\n/**\n * Sorts points by latitude and longitude, creating a 2-dimensional array of points\n *\n * @private\n * @param {FeatureCollection<Point>} points GeoJSON Point features\n * @param {boolean} [flip=false] returns the matrix upside-down\n * @returns {Array<Array<Point>>} points ordered by latitude and longitude\n */\nfunction sortPointsByLatLng(points, flip) {\n  var pointsByLatitude = {};\n\n  // divide points by rows with the same latitude\n  featureEach(points, function (point) {\n    var lat = getCoords(point)[1];\n    if (!pointsByLatitude[lat]) pointsByLatitude[lat] = [];\n    pointsByLatitude[lat].push(point);\n  });\n\n  // sort points (with the same latitude) by longitude\n  var orderedRowsByLatitude = Object.keys(pointsByLatitude).map(function (lat) {\n    var row = pointsByLatitude[lat];\n    var rowOrderedByLongitude = row.sort(function (a, b) {\n      return getCoords(a)[0] - getCoords(b)[0];\n    });\n    return rowOrderedByLongitude;\n  });\n\n  // sort rows (of points with the same latitude) by latitude\n  var pointMatrix = orderedRowsByLatitude.sort(function (a, b) {\n    if (flip) return getCoords(a[0])[1] - getCoords(b[0])[1];else return getCoords(b[0])[1] - getCoords(a[0])[1];\n  });\n  return pointMatrix;\n}\n\n/*!\n * @license GNU Affero General Public License.\n * Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>\n * v. 1.2.0\n * https://github.com/RaumZeit/MarchingSquares.js\n *\n * MarchingSquaresJS is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * MarchingSquaresJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * As additional permission under GNU Affero General Public License version 3\n * section 7, third-party projects (personal or commercial) may distribute,\n * include, or link against UNMODIFIED VERSIONS of MarchingSquaresJS without the\n * requirement that said third-party project for that reason alone becomes\n * subject to any requirement of the GNU Affero General Public License version 3.\n * Any modifications to MarchingSquaresJS, however, must be shared with the public\n * and made available.\n *\n * In summary this:\n * - allows you to use MarchingSquaresJS at no cost\n * - allows you to use MarchingSquaresJS for both personal and commercial purposes\n * - allows you to distribute UNMODIFIED VERSIONS of MarchingSquaresJS under any\n *   license as long as this license notice is included\n * - enables you to keep the source code of your program that uses MarchingSquaresJS\n *   undisclosed\n * - forces you to share any modifications you have made to MarchingSquaresJS,\n *   e.g. bug-fixes\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with MarchingSquaresJS.  If not, see <http://www.gnu.org/licenses/>.\n */\nvar defaultSettings = {\n  successCallback: null,\n  verbose: false,\n  polygons: false\n};\nvar settings = {};\n\n/*\n  Compute isobands(s) of a scalar 2D field given a certain\n  threshold and a bandwidth by applying the Marching Squares\n  Algorithm. The function returns a list of path coordinates\n  either for individual polygons within each grid cell, or the\n  outline of connected polygons.\n*/\nfunction isoBands(data, minV, bandwidth, options) {\n  /* process options */\n  options = options ? options : {};\n  var optionKeys = Object.keys(defaultSettings);\n  for (var i = 0; i < optionKeys.length; i++) {\n    var key = optionKeys[i];\n    var val = options[key];\n    val = typeof val !== \"undefined\" && val !== null ? val : defaultSettings[key];\n    settings[key] = val;\n  }\n  if (settings.verbose) console.log(\"MarchingSquaresJS-isoBands: computing isobands for [\" + minV + \":\" + (minV + bandwidth) + \"]\");\n  var grid = computeBandGrid(data, minV, bandwidth);\n  var ret;\n  if (settings.polygons) {\n    if (settings.verbose) console.log(\"MarchingSquaresJS-isoBands: returning single polygons for each grid cell\");\n    ret = BandGrid2Areas(grid);\n  } else {\n    if (settings.verbose) console.log(\"MarchingSquaresJS-isoBands: returning polygon paths for entire data grid\");\n    ret = BandGrid2AreaPaths(grid);\n  }\n  if (typeof settings.successCallback === \"function\") settings.successCallback(ret);\n  return ret;\n}\n\n/*\n  Thats all for the public interface, below follows the actual\n  implementation\n*/\n\n/* Some private variables */\nvar Node0 = 64,\n  Node1 = 16,\n  Node2 = 4,\n  Node3 = 1;\n\n/*\n  The look-up tables for tracing back the contour path\n  of isoBands\n*/\n\nvar isoBandNextXTL = [];\nvar isoBandNextYTL = [];\nvar isoBandNextOTL = [];\nvar isoBandNextXTR = [];\nvar isoBandNextYTR = [];\nvar isoBandNextOTR = [];\nvar isoBandNextXRT = [];\nvar isoBandNextYRT = [];\nvar isoBandNextORT = [];\nvar isoBandNextXRB = [];\nvar isoBandNextYRB = [];\nvar isoBandNextORB = [];\nvar isoBandNextXBL = [];\nvar isoBandNextYBL = [];\nvar isoBandNextOBL = [];\nvar isoBandNextXBR = [];\nvar isoBandNextYBR = [];\nvar isoBandNextOBR = [];\nvar isoBandNextXLT = [];\nvar isoBandNextYLT = [];\nvar isoBandNextOLT = [];\nvar isoBandNextXLB = [];\nvar isoBandNextYLB = [];\nvar isoBandNextOLB = [];\nisoBandNextXRT[85] = isoBandNextXRB[85] = -1;\nisoBandNextYRT[85] = isoBandNextYRB[85] = 0;\nisoBandNextORT[85] = isoBandNextORB[85] = 1;\nisoBandNextXLT[85] = isoBandNextXLB[85] = 1;\nisoBandNextYLT[85] = isoBandNextYLB[85] = 0;\nisoBandNextOLT[85] = isoBandNextOLB[85] = 1;\nisoBandNextXTL[85] = isoBandNextXTR[85] = 0;\nisoBandNextYTL[85] = isoBandNextYTR[85] = -1;\nisoBandNextOTL[85] = isoBandNextOBL[85] = 0;\nisoBandNextXBR[85] = isoBandNextXBL[85] = 0;\nisoBandNextYBR[85] = isoBandNextYBL[85] = 1;\nisoBandNextOTR[85] = isoBandNextOBR[85] = 1;\n\n/* triangle cases */\nisoBandNextXLB[1] = isoBandNextXLB[169] = 0;\nisoBandNextYLB[1] = isoBandNextYLB[169] = -1;\nisoBandNextOLB[1] = isoBandNextOLB[169] = 0;\nisoBandNextXBL[1] = isoBandNextXBL[169] = -1;\nisoBandNextYBL[1] = isoBandNextYBL[169] = 0;\nisoBandNextOBL[1] = isoBandNextOBL[169] = 0;\nisoBandNextXRB[4] = isoBandNextXRB[166] = 0;\nisoBandNextYRB[4] = isoBandNextYRB[166] = -1;\nisoBandNextORB[4] = isoBandNextORB[166] = 1;\nisoBandNextXBR[4] = isoBandNextXBR[166] = 1;\nisoBandNextYBR[4] = isoBandNextYBR[166] = 0;\nisoBandNextOBR[4] = isoBandNextOBR[166] = 0;\nisoBandNextXRT[16] = isoBandNextXRT[154] = 0;\nisoBandNextYRT[16] = isoBandNextYRT[154] = 1;\nisoBandNextORT[16] = isoBandNextORT[154] = 1;\nisoBandNextXTR[16] = isoBandNextXTR[154] = 1;\nisoBandNextYTR[16] = isoBandNextYTR[154] = 0;\nisoBandNextOTR[16] = isoBandNextOTR[154] = 1;\nisoBandNextXLT[64] = isoBandNextXLT[106] = 0;\nisoBandNextYLT[64] = isoBandNextYLT[106] = 1;\nisoBandNextOLT[64] = isoBandNextOLT[106] = 0;\nisoBandNextXTL[64] = isoBandNextXTL[106] = -1;\nisoBandNextYTL[64] = isoBandNextYTL[106] = 0;\nisoBandNextOTL[64] = isoBandNextOTL[106] = 1;\n\n/* single trapezoid cases */\nisoBandNextXLT[2] = isoBandNextXLT[168] = 0;\nisoBandNextYLT[2] = isoBandNextYLT[168] = -1;\nisoBandNextOLT[2] = isoBandNextOLT[168] = 1;\nisoBandNextXLB[2] = isoBandNextXLB[168] = 0;\nisoBandNextYLB[2] = isoBandNextYLB[168] = -1;\nisoBandNextOLB[2] = isoBandNextOLB[168] = 0;\nisoBandNextXBL[2] = isoBandNextXBL[168] = -1;\nisoBandNextYBL[2] = isoBandNextYBL[168] = 0;\nisoBandNextOBL[2] = isoBandNextOBL[168] = 0;\nisoBandNextXBR[2] = isoBandNextXBR[168] = -1;\nisoBandNextYBR[2] = isoBandNextYBR[168] = 0;\nisoBandNextOBR[2] = isoBandNextOBR[168] = 1;\nisoBandNextXRT[8] = isoBandNextXRT[162] = 0;\nisoBandNextYRT[8] = isoBandNextYRT[162] = -1;\nisoBandNextORT[8] = isoBandNextORT[162] = 0;\nisoBandNextXRB[8] = isoBandNextXRB[162] = 0;\nisoBandNextYRB[8] = isoBandNextYRB[162] = -1;\nisoBandNextORB[8] = isoBandNextORB[162] = 1;\nisoBandNextXBL[8] = isoBandNextXBL[162] = 1;\nisoBandNextYBL[8] = isoBandNextYBL[162] = 0;\nisoBandNextOBL[8] = isoBandNextOBL[162] = 1;\nisoBandNextXBR[8] = isoBandNextXBR[162] = 1;\nisoBandNextYBR[8] = isoBandNextYBR[162] = 0;\nisoBandNextOBR[8] = isoBandNextOBR[162] = 0;\nisoBandNextXRT[32] = isoBandNextXRT[138] = 0;\nisoBandNextYRT[32] = isoBandNextYRT[138] = 1;\nisoBandNextORT[32] = isoBandNextORT[138] = 1;\nisoBandNextXRB[32] = isoBandNextXRB[138] = 0;\nisoBandNextYRB[32] = isoBandNextYRB[138] = 1;\nisoBandNextORB[32] = isoBandNextORB[138] = 0;\nisoBandNextXTL[32] = isoBandNextXTL[138] = 1;\nisoBandNextYTL[32] = isoBandNextYTL[138] = 0;\nisoBandNextOTL[32] = isoBandNextOTL[138] = 0;\nisoBandNextXTR[32] = isoBandNextXTR[138] = 1;\nisoBandNextYTR[32] = isoBandNextYTR[138] = 0;\nisoBandNextOTR[32] = isoBandNextOTR[138] = 1;\nisoBandNextXLB[128] = isoBandNextXLB[42] = 0;\nisoBandNextYLB[128] = isoBandNextYLB[42] = 1;\nisoBandNextOLB[128] = isoBandNextOLB[42] = 1;\nisoBandNextXLT[128] = isoBandNextXLT[42] = 0;\nisoBandNextYLT[128] = isoBandNextYLT[42] = 1;\nisoBandNextOLT[128] = isoBandNextOLT[42] = 0;\nisoBandNextXTL[128] = isoBandNextXTL[42] = -1;\nisoBandNextYTL[128] = isoBandNextYTL[42] = 0;\nisoBandNextOTL[128] = isoBandNextOTL[42] = 1;\nisoBandNextXTR[128] = isoBandNextXTR[42] = -1;\nisoBandNextYTR[128] = isoBandNextYTR[42] = 0;\nisoBandNextOTR[128] = isoBandNextOTR[42] = 0;\n\n/* single rectangle cases */\nisoBandNextXRB[5] = isoBandNextXRB[165] = -1;\nisoBandNextYRB[5] = isoBandNextYRB[165] = 0;\nisoBandNextORB[5] = isoBandNextORB[165] = 0;\nisoBandNextXLB[5] = isoBandNextXLB[165] = 1;\nisoBandNextYLB[5] = isoBandNextYLB[165] = 0;\nisoBandNextOLB[5] = isoBandNextOLB[165] = 0;\nisoBandNextXBR[20] = isoBandNextXBR[150] = 0;\nisoBandNextYBR[20] = isoBandNextYBR[150] = 1;\nisoBandNextOBR[20] = isoBandNextOBR[150] = 1;\nisoBandNextXTR[20] = isoBandNextXTR[150] = 0;\nisoBandNextYTR[20] = isoBandNextYTR[150] = -1;\nisoBandNextOTR[20] = isoBandNextOTR[150] = 1;\nisoBandNextXRT[80] = isoBandNextXRT[90] = -1;\nisoBandNextYRT[80] = isoBandNextYRT[90] = 0;\nisoBandNextORT[80] = isoBandNextORT[90] = 1;\nisoBandNextXLT[80] = isoBandNextXLT[90] = 1;\nisoBandNextYLT[80] = isoBandNextYLT[90] = 0;\nisoBandNextOLT[80] = isoBandNextOLT[90] = 1;\nisoBandNextXBL[65] = isoBandNextXBL[105] = 0;\nisoBandNextYBL[65] = isoBandNextYBL[105] = 1;\nisoBandNextOBL[65] = isoBandNextOBL[105] = 0;\nisoBandNextXTL[65] = isoBandNextXTL[105] = 0;\nisoBandNextYTL[65] = isoBandNextYTL[105] = -1;\nisoBandNextOTL[65] = isoBandNextOTL[105] = 0;\nisoBandNextXRT[160] = isoBandNextXRT[10] = -1;\nisoBandNextYRT[160] = isoBandNextYRT[10] = 0;\nisoBandNextORT[160] = isoBandNextORT[10] = 1;\nisoBandNextXRB[160] = isoBandNextXRB[10] = -1;\nisoBandNextYRB[160] = isoBandNextYRB[10] = 0;\nisoBandNextORB[160] = isoBandNextORB[10] = 0;\nisoBandNextXLB[160] = isoBandNextXLB[10] = 1;\nisoBandNextYLB[160] = isoBandNextYLB[10] = 0;\nisoBandNextOLB[160] = isoBandNextOLB[10] = 0;\nisoBandNextXLT[160] = isoBandNextXLT[10] = 1;\nisoBandNextYLT[160] = isoBandNextYLT[10] = 0;\nisoBandNextOLT[160] = isoBandNextOLT[10] = 1;\nisoBandNextXBR[130] = isoBandNextXBR[40] = 0;\nisoBandNextYBR[130] = isoBandNextYBR[40] = 1;\nisoBandNextOBR[130] = isoBandNextOBR[40] = 1;\nisoBandNextXBL[130] = isoBandNextXBL[40] = 0;\nisoBandNextYBL[130] = isoBandNextYBL[40] = 1;\nisoBandNextOBL[130] = isoBandNextOBL[40] = 0;\nisoBandNextXTL[130] = isoBandNextXTL[40] = 0;\nisoBandNextYTL[130] = isoBandNextYTL[40] = -1;\nisoBandNextOTL[130] = isoBandNextOTL[40] = 0;\nisoBandNextXTR[130] = isoBandNextXTR[40] = 0;\nisoBandNextYTR[130] = isoBandNextYTR[40] = -1;\nisoBandNextOTR[130] = isoBandNextOTR[40] = 1;\n\n/* single hexagon cases */\nisoBandNextXRB[37] = isoBandNextXRB[133] = 0;\nisoBandNextYRB[37] = isoBandNextYRB[133] = 1;\nisoBandNextORB[37] = isoBandNextORB[133] = 1;\nisoBandNextXLB[37] = isoBandNextXLB[133] = 0;\nisoBandNextYLB[37] = isoBandNextYLB[133] = 1;\nisoBandNextOLB[37] = isoBandNextOLB[133] = 0;\nisoBandNextXTL[37] = isoBandNextXTL[133] = -1;\nisoBandNextYTL[37] = isoBandNextYTL[133] = 0;\nisoBandNextOTL[37] = isoBandNextOTL[133] = 0;\nisoBandNextXTR[37] = isoBandNextXTR[133] = 1;\nisoBandNextYTR[37] = isoBandNextYTR[133] = 0;\nisoBandNextOTR[37] = isoBandNextOTR[133] = 0;\nisoBandNextXBR[148] = isoBandNextXBR[22] = -1;\nisoBandNextYBR[148] = isoBandNextYBR[22] = 0;\nisoBandNextOBR[148] = isoBandNextOBR[22] = 0;\nisoBandNextXLB[148] = isoBandNextXLB[22] = 0;\nisoBandNextYLB[148] = isoBandNextYLB[22] = -1;\nisoBandNextOLB[148] = isoBandNextOLB[22] = 1;\nisoBandNextXLT[148] = isoBandNextXLT[22] = 0;\nisoBandNextYLT[148] = isoBandNextYLT[22] = 1;\nisoBandNextOLT[148] = isoBandNextOLT[22] = 1;\nisoBandNextXTR[148] = isoBandNextXTR[22] = -1;\nisoBandNextYTR[148] = isoBandNextYTR[22] = 0;\nisoBandNextOTR[148] = isoBandNextOTR[22] = 1;\nisoBandNextXRT[82] = isoBandNextXRT[88] = 0;\nisoBandNextYRT[82] = isoBandNextYRT[88] = -1;\nisoBandNextORT[82] = isoBandNextORT[88] = 1;\nisoBandNextXBR[82] = isoBandNextXBR[88] = 1;\nisoBandNextYBR[82] = isoBandNextYBR[88] = 0;\nisoBandNextOBR[82] = isoBandNextOBR[88] = 1;\nisoBandNextXBL[82] = isoBandNextXBL[88] = -1;\nisoBandNextYBL[82] = isoBandNextYBL[88] = 0;\nisoBandNextOBL[82] = isoBandNextOBL[88] = 1;\nisoBandNextXLT[82] = isoBandNextXLT[88] = 0;\nisoBandNextYLT[82] = isoBandNextYLT[88] = -1;\nisoBandNextOLT[82] = isoBandNextOLT[88] = 0;\nisoBandNextXRT[73] = isoBandNextXRT[97] = 0;\nisoBandNextYRT[73] = isoBandNextYRT[97] = 1;\nisoBandNextORT[73] = isoBandNextORT[97] = 0;\nisoBandNextXRB[73] = isoBandNextXRB[97] = 0;\nisoBandNextYRB[73] = isoBandNextYRB[97] = -1;\nisoBandNextORB[73] = isoBandNextORB[97] = 0;\nisoBandNextXBL[73] = isoBandNextXBL[97] = 1;\nisoBandNextYBL[73] = isoBandNextYBL[97] = 0;\nisoBandNextOBL[73] = isoBandNextOBL[97] = 0;\nisoBandNextXTL[73] = isoBandNextXTL[97] = 1;\nisoBandNextYTL[73] = isoBandNextYTL[97] = 0;\nisoBandNextOTL[73] = isoBandNextOTL[97] = 1;\nisoBandNextXRT[145] = isoBandNextXRT[25] = 0;\nisoBandNextYRT[145] = isoBandNextYRT[25] = -1;\nisoBandNextORT[145] = isoBandNextORT[25] = 0;\nisoBandNextXBL[145] = isoBandNextXBL[25] = 1;\nisoBandNextYBL[145] = isoBandNextYBL[25] = 0;\nisoBandNextOBL[145] = isoBandNextOBL[25] = 1;\nisoBandNextXLB[145] = isoBandNextXLB[25] = 0;\nisoBandNextYLB[145] = isoBandNextYLB[25] = 1;\nisoBandNextOLB[145] = isoBandNextOLB[25] = 1;\nisoBandNextXTR[145] = isoBandNextXTR[25] = -1;\nisoBandNextYTR[145] = isoBandNextYTR[25] = 0;\nisoBandNextOTR[145] = isoBandNextOTR[25] = 0;\nisoBandNextXRB[70] = isoBandNextXRB[100] = 0;\nisoBandNextYRB[70] = isoBandNextYRB[100] = 1;\nisoBandNextORB[70] = isoBandNextORB[100] = 0;\nisoBandNextXBR[70] = isoBandNextXBR[100] = -1;\nisoBandNextYBR[70] = isoBandNextYBR[100] = 0;\nisoBandNextOBR[70] = isoBandNextOBR[100] = 1;\nisoBandNextXLT[70] = isoBandNextXLT[100] = 0;\nisoBandNextYLT[70] = isoBandNextYLT[100] = -1;\nisoBandNextOLT[70] = isoBandNextOLT[100] = 1;\nisoBandNextXTL[70] = isoBandNextXTL[100] = 1;\nisoBandNextYTL[70] = isoBandNextYTL[100] = 0;\nisoBandNextOTL[70] = isoBandNextOTL[100] = 0;\n\n/* single pentagon cases */\nisoBandNextXRB[101] = isoBandNextXRB[69] = 0;\nisoBandNextYRB[101] = isoBandNextYRB[69] = 1;\nisoBandNextORB[101] = isoBandNextORB[69] = 0;\nisoBandNextXTL[101] = isoBandNextXTL[69] = 1;\nisoBandNextYTL[101] = isoBandNextYTL[69] = 0;\nisoBandNextOTL[101] = isoBandNextOTL[69] = 0;\nisoBandNextXLB[149] = isoBandNextXLB[21] = 0;\nisoBandNextYLB[149] = isoBandNextYLB[21] = 1;\nisoBandNextOLB[149] = isoBandNextOLB[21] = 1;\nisoBandNextXTR[149] = isoBandNextXTR[21] = -1;\nisoBandNextYTR[149] = isoBandNextYTR[21] = 0;\nisoBandNextOTR[149] = isoBandNextOTR[21] = 0;\nisoBandNextXBR[86] = isoBandNextXBR[84] = -1;\nisoBandNextYBR[86] = isoBandNextYBR[84] = 0;\nisoBandNextOBR[86] = isoBandNextOBR[84] = 1;\nisoBandNextXLT[86] = isoBandNextXLT[84] = 0;\nisoBandNextYLT[86] = isoBandNextYLT[84] = -1;\nisoBandNextOLT[86] = isoBandNextOLT[84] = 1;\nisoBandNextXRT[89] = isoBandNextXRT[81] = 0;\nisoBandNextYRT[89] = isoBandNextYRT[81] = -1;\nisoBandNextORT[89] = isoBandNextORT[81] = 0;\nisoBandNextXBL[89] = isoBandNextXBL[81] = 1;\nisoBandNextYBL[89] = isoBandNextYBL[81] = 0;\nisoBandNextOBL[89] = isoBandNextOBL[81] = 1;\nisoBandNextXRT[96] = isoBandNextXRT[74] = 0;\nisoBandNextYRT[96] = isoBandNextYRT[74] = 1;\nisoBandNextORT[96] = isoBandNextORT[74] = 0;\nisoBandNextXRB[96] = isoBandNextXRB[74] = -1;\nisoBandNextYRB[96] = isoBandNextYRB[74] = 0;\nisoBandNextORB[96] = isoBandNextORB[74] = 1;\nisoBandNextXLT[96] = isoBandNextXLT[74] = 1;\nisoBandNextYLT[96] = isoBandNextYLT[74] = 0;\nisoBandNextOLT[96] = isoBandNextOLT[74] = 0;\nisoBandNextXTL[96] = isoBandNextXTL[74] = 1;\nisoBandNextYTL[96] = isoBandNextYTL[74] = 0;\nisoBandNextOTL[96] = isoBandNextOTL[74] = 1;\nisoBandNextXRT[24] = isoBandNextXRT[146] = 0;\nisoBandNextYRT[24] = isoBandNextYRT[146] = -1;\nisoBandNextORT[24] = isoBandNextORT[146] = 1;\nisoBandNextXBR[24] = isoBandNextXBR[146] = 1;\nisoBandNextYBR[24] = isoBandNextYBR[146] = 0;\nisoBandNextOBR[24] = isoBandNextOBR[146] = 1;\nisoBandNextXBL[24] = isoBandNextXBL[146] = 0;\nisoBandNextYBL[24] = isoBandNextYBL[146] = 1;\nisoBandNextOBL[24] = isoBandNextOBL[146] = 1;\nisoBandNextXTR[24] = isoBandNextXTR[146] = 0;\nisoBandNextYTR[24] = isoBandNextYTR[146] = -1;\nisoBandNextOTR[24] = isoBandNextOTR[146] = 0;\nisoBandNextXRB[6] = isoBandNextXRB[164] = -1;\nisoBandNextYRB[6] = isoBandNextYRB[164] = 0;\nisoBandNextORB[6] = isoBandNextORB[164] = 1;\nisoBandNextXBR[6] = isoBandNextXBR[164] = -1;\nisoBandNextYBR[6] = isoBandNextYBR[164] = 0;\nisoBandNextOBR[6] = isoBandNextOBR[164] = 0;\nisoBandNextXLB[6] = isoBandNextXLB[164] = 0;\nisoBandNextYLB[6] = isoBandNextYLB[164] = -1;\nisoBandNextOLB[6] = isoBandNextOLB[164] = 1;\nisoBandNextXLT[6] = isoBandNextXLT[164] = 1;\nisoBandNextYLT[6] = isoBandNextYLT[164] = 0;\nisoBandNextOLT[6] = isoBandNextOLT[164] = 0;\nisoBandNextXBL[129] = isoBandNextXBL[41] = 0;\nisoBandNextYBL[129] = isoBandNextYBL[41] = 1;\nisoBandNextOBL[129] = isoBandNextOBL[41] = 1;\nisoBandNextXLB[129] = isoBandNextXLB[41] = 0;\nisoBandNextYLB[129] = isoBandNextYLB[41] = 1;\nisoBandNextOLB[129] = isoBandNextOLB[41] = 0;\nisoBandNextXTL[129] = isoBandNextXTL[41] = -1;\nisoBandNextYTL[129] = isoBandNextYTL[41] = 0;\nisoBandNextOTL[129] = isoBandNextOTL[41] = 0;\nisoBandNextXTR[129] = isoBandNextXTR[41] = 0;\nisoBandNextYTR[129] = isoBandNextYTR[41] = -1;\nisoBandNextOTR[129] = isoBandNextOTR[41] = 0;\nisoBandNextXBR[66] = isoBandNextXBR[104] = 0;\nisoBandNextYBR[66] = isoBandNextYBR[104] = 1;\nisoBandNextOBR[66] = isoBandNextOBR[104] = 0;\nisoBandNextXBL[66] = isoBandNextXBL[104] = -1;\nisoBandNextYBL[66] = isoBandNextYBL[104] = 0;\nisoBandNextOBL[66] = isoBandNextOBL[104] = 1;\nisoBandNextXLT[66] = isoBandNextXLT[104] = 0;\nisoBandNextYLT[66] = isoBandNextYLT[104] = -1;\nisoBandNextOLT[66] = isoBandNextOLT[104] = 0;\nisoBandNextXTL[66] = isoBandNextXTL[104] = 0;\nisoBandNextYTL[66] = isoBandNextYTL[104] = -1;\nisoBandNextOTL[66] = isoBandNextOTL[104] = 1;\nisoBandNextXRT[144] = isoBandNextXRT[26] = -1;\nisoBandNextYRT[144] = isoBandNextYRT[26] = 0;\nisoBandNextORT[144] = isoBandNextORT[26] = 0;\nisoBandNextXLB[144] = isoBandNextXLB[26] = 1;\nisoBandNextYLB[144] = isoBandNextYLB[26] = 0;\nisoBandNextOLB[144] = isoBandNextOLB[26] = 1;\nisoBandNextXLT[144] = isoBandNextXLT[26] = 0;\nisoBandNextYLT[144] = isoBandNextYLT[26] = 1;\nisoBandNextOLT[144] = isoBandNextOLT[26] = 1;\nisoBandNextXTR[144] = isoBandNextXTR[26] = -1;\nisoBandNextYTR[144] = isoBandNextYTR[26] = 0;\nisoBandNextOTR[144] = isoBandNextOTR[26] = 1;\nisoBandNextXRB[36] = isoBandNextXRB[134] = 0;\nisoBandNextYRB[36] = isoBandNextYRB[134] = 1;\nisoBandNextORB[36] = isoBandNextORB[134] = 1;\nisoBandNextXBR[36] = isoBandNextXBR[134] = 0;\nisoBandNextYBR[36] = isoBandNextYBR[134] = 1;\nisoBandNextOBR[36] = isoBandNextOBR[134] = 0;\nisoBandNextXTL[36] = isoBandNextXTL[134] = 0;\nisoBandNextYTL[36] = isoBandNextYTL[134] = -1;\nisoBandNextOTL[36] = isoBandNextOTL[134] = 1;\nisoBandNextXTR[36] = isoBandNextXTR[134] = 1;\nisoBandNextYTR[36] = isoBandNextYTR[134] = 0;\nisoBandNextOTR[36] = isoBandNextOTR[134] = 0;\nisoBandNextXRT[9] = isoBandNextXRT[161] = -1;\nisoBandNextYRT[9] = isoBandNextYRT[161] = 0;\nisoBandNextORT[9] = isoBandNextORT[161] = 0;\nisoBandNextXRB[9] = isoBandNextXRB[161] = 0;\nisoBandNextYRB[9] = isoBandNextYRB[161] = -1;\nisoBandNextORB[9] = isoBandNextORB[161] = 0;\nisoBandNextXBL[9] = isoBandNextXBL[161] = 1;\nisoBandNextYBL[9] = isoBandNextYBL[161] = 0;\nisoBandNextOBL[9] = isoBandNextOBL[161] = 0;\nisoBandNextXLB[9] = isoBandNextXLB[161] = 1;\nisoBandNextYLB[9] = isoBandNextYLB[161] = 0;\nisoBandNextOLB[9] = isoBandNextOLB[161] = 1;\n\n/* 8-sided cases */\nisoBandNextXRT[136] = 0;\nisoBandNextYRT[136] = 1;\nisoBandNextORT[136] = 1;\nisoBandNextXRB[136] = 0;\nisoBandNextYRB[136] = 1;\nisoBandNextORB[136] = 0;\nisoBandNextXBR[136] = -1;\nisoBandNextYBR[136] = 0;\nisoBandNextOBR[136] = 1;\nisoBandNextXBL[136] = -1;\nisoBandNextYBL[136] = 0;\nisoBandNextOBL[136] = 0;\nisoBandNextXLB[136] = 0;\nisoBandNextYLB[136] = -1;\nisoBandNextOLB[136] = 0;\nisoBandNextXLT[136] = 0;\nisoBandNextYLT[136] = -1;\nisoBandNextOLT[136] = 1;\nisoBandNextXTL[136] = 1;\nisoBandNextYTL[136] = 0;\nisoBandNextOTL[136] = 0;\nisoBandNextXTR[136] = 1;\nisoBandNextYTR[136] = 0;\nisoBandNextOTR[136] = 1;\nisoBandNextXRT[34] = 0;\nisoBandNextYRT[34] = -1;\nisoBandNextORT[34] = 0;\nisoBandNextXRB[34] = 0;\nisoBandNextYRB[34] = -1;\nisoBandNextORB[34] = 1;\nisoBandNextXBR[34] = 1;\nisoBandNextYBR[34] = 0;\nisoBandNextOBR[34] = 0;\nisoBandNextXBL[34] = 1;\nisoBandNextYBL[34] = 0;\nisoBandNextOBL[34] = 1;\nisoBandNextXLB[34] = 0;\nisoBandNextYLB[34] = 1;\nisoBandNextOLB[34] = 1;\nisoBandNextXLT[34] = 0;\nisoBandNextYLT[34] = 1;\nisoBandNextOLT[34] = 0;\nisoBandNextXTL[34] = -1;\nisoBandNextYTL[34] = 0;\nisoBandNextOTL[34] = 1;\nisoBandNextXTR[34] = -1;\nisoBandNextYTR[34] = 0;\nisoBandNextOTR[34] = 0;\nisoBandNextXRT[35] = 0;\nisoBandNextYRT[35] = 1;\nisoBandNextORT[35] = 1;\nisoBandNextXRB[35] = 0;\nisoBandNextYRB[35] = -1;\nisoBandNextORB[35] = 1;\nisoBandNextXBR[35] = 1;\nisoBandNextYBR[35] = 0;\nisoBandNextOBR[35] = 0;\nisoBandNextXBL[35] = -1;\nisoBandNextYBL[35] = 0;\nisoBandNextOBL[35] = 0;\nisoBandNextXLB[35] = 0;\nisoBandNextYLB[35] = -1;\nisoBandNextOLB[35] = 0;\nisoBandNextXLT[35] = 0;\nisoBandNextYLT[35] = 1;\nisoBandNextOLT[35] = 0;\nisoBandNextXTL[35] = -1;\nisoBandNextYTL[35] = 0;\nisoBandNextOTL[35] = 1;\nisoBandNextXTR[35] = 1;\nisoBandNextYTR[35] = 0;\nisoBandNextOTR[35] = 1;\n\n/* 6-sided cases */\nisoBandNextXRT[153] = 0;\nisoBandNextYRT[153] = 1;\nisoBandNextORT[153] = 1;\nisoBandNextXBL[153] = -1;\nisoBandNextYBL[153] = 0;\nisoBandNextOBL[153] = 0;\nisoBandNextXLB[153] = 0;\nisoBandNextYLB[153] = -1;\nisoBandNextOLB[153] = 0;\nisoBandNextXTR[153] = 1;\nisoBandNextYTR[153] = 0;\nisoBandNextOTR[153] = 1;\nisoBandNextXRB[102] = 0;\nisoBandNextYRB[102] = -1;\nisoBandNextORB[102] = 1;\nisoBandNextXBR[102] = 1;\nisoBandNextYBR[102] = 0;\nisoBandNextOBR[102] = 0;\nisoBandNextXLT[102] = 0;\nisoBandNextYLT[102] = 1;\nisoBandNextOLT[102] = 0;\nisoBandNextXTL[102] = -1;\nisoBandNextYTL[102] = 0;\nisoBandNextOTL[102] = 1;\nisoBandNextXRT[155] = 0;\nisoBandNextYRT[155] = -1;\nisoBandNextORT[155] = 0;\nisoBandNextXBL[155] = 1;\nisoBandNextYBL[155] = 0;\nisoBandNextOBL[155] = 1;\nisoBandNextXLB[155] = 0;\nisoBandNextYLB[155] = 1;\nisoBandNextOLB[155] = 1;\nisoBandNextXTR[155] = -1;\nisoBandNextYTR[155] = 0;\nisoBandNextOTR[155] = 0;\nisoBandNextXRB[103] = 0;\nisoBandNextYRB[103] = 1;\nisoBandNextORB[103] = 0;\nisoBandNextXBR[103] = -1;\nisoBandNextYBR[103] = 0;\nisoBandNextOBR[103] = 1;\nisoBandNextXLT[103] = 0;\nisoBandNextYLT[103] = -1;\nisoBandNextOLT[103] = 1;\nisoBandNextXTL[103] = 1;\nisoBandNextYTL[103] = 0;\nisoBandNextOTL[103] = 0;\n\n/* 7-sided cases */\nisoBandNextXRT[152] = 0;\nisoBandNextYRT[152] = 1;\nisoBandNextORT[152] = 1;\nisoBandNextXBR[152] = -1;\nisoBandNextYBR[152] = 0;\nisoBandNextOBR[152] = 1;\nisoBandNextXBL[152] = -1;\nisoBandNextYBL[152] = 0;\nisoBandNextOBL[152] = 0;\nisoBandNextXLB[152] = 0;\nisoBandNextYLB[152] = -1;\nisoBandNextOLB[152] = 0;\nisoBandNextXLT[152] = 0;\nisoBandNextYLT[152] = -1;\nisoBandNextOLT[152] = 1;\nisoBandNextXTR[152] = 1;\nisoBandNextYTR[152] = 0;\nisoBandNextOTR[152] = 1;\nisoBandNextXRT[156] = 0;\nisoBandNextYRT[156] = -1;\nisoBandNextORT[156] = 1;\nisoBandNextXBR[156] = 1;\nisoBandNextYBR[156] = 0;\nisoBandNextOBR[156] = 1;\nisoBandNextXBL[156] = -1;\nisoBandNextYBL[156] = 0;\nisoBandNextOBL[156] = 0;\nisoBandNextXLB[156] = 0;\nisoBandNextYLB[156] = -1;\nisoBandNextOLB[156] = 0;\nisoBandNextXLT[156] = 0;\nisoBandNextYLT[156] = 1;\nisoBandNextOLT[156] = 1;\nisoBandNextXTR[156] = -1;\nisoBandNextYTR[156] = 0;\nisoBandNextOTR[156] = 1;\nisoBandNextXRT[137] = 0;\nisoBandNextYRT[137] = 1;\nisoBandNextORT[137] = 1;\nisoBandNextXRB[137] = 0;\nisoBandNextYRB[137] = 1;\nisoBandNextORB[137] = 0;\nisoBandNextXBL[137] = -1;\nisoBandNextYBL[137] = 0;\nisoBandNextOBL[137] = 0;\nisoBandNextXLB[137] = 0;\nisoBandNextYLB[137] = -1;\nisoBandNextOLB[137] = 0;\nisoBandNextXTL[137] = 1;\nisoBandNextYTL[137] = 0;\nisoBandNextOTL[137] = 0;\nisoBandNextXTR[137] = 1;\nisoBandNextYTR[137] = 0;\nisoBandNextOTR[137] = 1;\nisoBandNextXRT[139] = 0;\nisoBandNextYRT[139] = 1;\nisoBandNextORT[139] = 1;\nisoBandNextXRB[139] = 0;\nisoBandNextYRB[139] = -1;\nisoBandNextORB[139] = 0;\nisoBandNextXBL[139] = 1;\nisoBandNextYBL[139] = 0;\nisoBandNextOBL[139] = 0;\nisoBandNextXLB[139] = 0;\nisoBandNextYLB[139] = 1;\nisoBandNextOLB[139] = 0;\nisoBandNextXTL[139] = -1;\nisoBandNextYTL[139] = 0;\nisoBandNextOTL[139] = 0;\nisoBandNextXTR[139] = 1;\nisoBandNextYTR[139] = 0;\nisoBandNextOTR[139] = 1;\nisoBandNextXRT[98] = 0;\nisoBandNextYRT[98] = -1;\nisoBandNextORT[98] = 0;\nisoBandNextXRB[98] = 0;\nisoBandNextYRB[98] = -1;\nisoBandNextORB[98] = 1;\nisoBandNextXBR[98] = 1;\nisoBandNextYBR[98] = 0;\nisoBandNextOBR[98] = 0;\nisoBandNextXBL[98] = 1;\nisoBandNextYBL[98] = 0;\nisoBandNextOBL[98] = 1;\nisoBandNextXLT[98] = 0;\nisoBandNextYLT[98] = 1;\nisoBandNextOLT[98] = 0;\nisoBandNextXTL[98] = -1;\nisoBandNextYTL[98] = 0;\nisoBandNextOTL[98] = 1;\nisoBandNextXRT[99] = 0;\nisoBandNextYRT[99] = 1;\nisoBandNextORT[99] = 0;\nisoBandNextXRB[99] = 0;\nisoBandNextYRB[99] = -1;\nisoBandNextORB[99] = 1;\nisoBandNextXBR[99] = 1;\nisoBandNextYBR[99] = 0;\nisoBandNextOBR[99] = 0;\nisoBandNextXBL[99] = -1;\nisoBandNextYBL[99] = 0;\nisoBandNextOBL[99] = 1;\nisoBandNextXLT[99] = 0;\nisoBandNextYLT[99] = -1;\nisoBandNextOLT[99] = 0;\nisoBandNextXTL[99] = 1;\nisoBandNextYTL[99] = 0;\nisoBandNextOTL[99] = 1;\nisoBandNextXRB[38] = 0;\nisoBandNextYRB[38] = -1;\nisoBandNextORB[38] = 1;\nisoBandNextXBR[38] = 1;\nisoBandNextYBR[38] = 0;\nisoBandNextOBR[38] = 0;\nisoBandNextXLB[38] = 0;\nisoBandNextYLB[38] = 1;\nisoBandNextOLB[38] = 1;\nisoBandNextXLT[38] = 0;\nisoBandNextYLT[38] = 1;\nisoBandNextOLT[38] = 0;\nisoBandNextXTL[38] = -1;\nisoBandNextYTL[38] = 0;\nisoBandNextOTL[38] = 1;\nisoBandNextXTR[38] = -1;\nisoBandNextYTR[38] = 0;\nisoBandNextOTR[38] = 0;\nisoBandNextXRB[39] = 0;\nisoBandNextYRB[39] = 1;\nisoBandNextORB[39] = 1;\nisoBandNextXBR[39] = -1;\nisoBandNextYBR[39] = 0;\nisoBandNextOBR[39] = 0;\nisoBandNextXLB[39] = 0;\nisoBandNextYLB[39] = -1;\nisoBandNextOLB[39] = 1;\nisoBandNextXLT[39] = 0;\nisoBandNextYLT[39] = 1;\nisoBandNextOLT[39] = 0;\nisoBandNextXTL[39] = -1;\nisoBandNextYTL[39] = 0;\nisoBandNextOTL[39] = 1;\nisoBandNextXTR[39] = 1;\nisoBandNextYTR[39] = 0;\nisoBandNextOTR[39] = 0;\n\n/*\n  Define helper functions for the polygon_table\n  */\n\n/* triangle cases */\nvar p00 = function (cell) {\n  return [[cell.bottomleft, 0], [0, 0], [0, cell.leftbottom]];\n};\nvar p01 = function (cell) {\n  return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0]];\n};\nvar p02 = function (cell) {\n  return [[cell.topright, 1], [1, 1], [1, cell.righttop]];\n};\nvar p03 = function (cell) {\n  return [[0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* trapezoid cases */\nvar p04 = function (cell) {\n  return [[cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.leftbottom], [0, cell.lefttop]];\n};\nvar p05 = function (cell) {\n  return [[cell.bottomright, 0], [cell.bottomleft, 0], [1, cell.righttop], [1, cell.rightbottom]];\n};\nvar p06 = function (cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [cell.topleft, 1], [cell.topright, 1]];\n};\nvar p07 = function (cell) {\n  return [[0, cell.leftbottom], [0, cell.lefttop], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* rectangle cases */\nvar p08 = function (cell) {\n  return [[0, 0], [0, cell.leftbottom], [1, cell.rightbottom], [1, 0]];\n};\nvar p09 = function (cell) {\n  return [[1, 0], [cell.bottomright, 0], [cell.topright, 1], [1, 1]];\n};\nvar p10 = function (cell) {\n  return [[1, 1], [1, cell.righttop], [0, cell.lefttop], [0, 1]];\n};\nvar p11 = function (cell) {\n  return [[cell.bottomleft, 0], [0, 0], [0, 1], [cell.topleft, 1]];\n};\nvar p12 = function (cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [0, cell.leftbottom], [0, cell.lefttop]];\n};\nvar p13 = function (cell) {\n  return [[cell.topleft, 1], [cell.topright, 1], [cell.bottomright, 0], [cell.bottomleft, 0]];\n};\n/* square case */\nvar p14 = function () {\n  return [[0, 0], [0, 1], [1, 1], [1, 0]];\n};\n/* pentagon cases */\nvar p15 = function (cell) {\n  return [[1, cell.rightbottom], [1, 0], [0, 0], [0, 1], [cell.topleft, 1]];\n};\n/* 1211 || 1011 */\nvar p16 = function (cell) {\n  return [[cell.topright, 1], [1, 1], [1, 0], [0, 0], [0, cell.leftbottom]];\n};\n/* 2111 || 0111 */\nvar p17 = function (cell) {\n  return [[1, 0], [cell.bottomright, 0], [0, cell.lefttop], [0, 1], [1, 1]];\n};\n/* 1112 || 1110 */\nvar p18 = function (cell) {\n  return [[1, 1], [1, cell.righttop], [cell.bottomleft, 0], [0, 0], [0, 1]];\n};\n/* 1121 || 1101 */\nvar p19 = function (cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1200 || 1022 */\nvar p20 = function (cell) {\n  return [[1, 1], [1, cell.righttop], [cell.bottomright, 0], [cell.bottomleft, 0], [cell.topright, 1]];\n};\n/* 0120 || 2102 */\nvar p21 = function (cell) {\n  return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.leftbottom], [0, cell.lefttop]];\n};\n/* 0012 || 2210 */\nvar p22 = function (cell) {\n  return [[cell.topright, 1], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topleft, 1]];\n};\n/* 2001 || 0221 */\nvar p23 = function (cell) {\n  return [[cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1002 || 1220 */\nvar p24 = function (cell) {\n  return [[1, 1], [1, cell.righttop], [0, cell.leftbottom], [0, cell.lefttop], [cell.topright, 1]];\n};\n/* 2100 || 0122 */\nvar p25 = function (cell) {\n  return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 0210 || 2012 */\nvar p26 = function (cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom]];\n};\n/* 0021 || 2201 */\n/*hexagon cases */\nvar p27 = function (cell) {\n  return [[1, cell.rightbottom], [1, 0], [0, 0], [0, cell.leftbottom], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 0211 || 2011 */\nvar p28 = function (cell) {\n  return [[1, 1], [1, 0], [cell.bottomright, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topright, 1]];\n};\n/* 2110 || 0112 */\nvar p29 = function (cell) {\n  return [[1, 1], [1, cell.righttop], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.lefttop], [0, 1]];\n};\n/* 1102 || 1120 */\nvar p30 = function (cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomleft, 0], [0, 0], [0, 1], [cell.topleft, 1]];\n};\n/* 1021 || 1201 */\nvar p31 = function (cell) {\n  return [[1, 1], [1, cell.righttop], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topright, 1]];\n};\n/* 2101 || 0121 */\nvar p32 = function (cell) {\n  return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1012 || 1210 */\n/* 8-sided cases */\nvar p33 = function (cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* flipped == 1 state for 0202 and 2020 */\n/* 6-sided cases */\nvar p34 = function (cell) {\n  return [[1, 1], [1, cell.righttop], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topright, 1]];\n};\n/* 0101 with flipped == 1 || 2121 with flipped == 1 */\nvar p35 = function (cell) {\n  return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1010 with flipped == 1 || 1212 with flipped == 1 */\n/* 7-sided cases */\nvar p36 = function (cell) {\n  return [[1, 1], [1, cell.righttop], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topright, 1]];\n};\n/* 2120 with flipped == 1 || 0102 with flipped == 1 */\nvar p37 = function (cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 2021 with flipped == 1 || 0201 with flipped == 1 */\nvar p38 = function (cell) {\n  return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1202 with flipped == 1 || 1020 with flipped == 1 */\nvar p39 = function (cell) {\n  return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n/*\n  The lookup tables for edge number given the polygon\n  is entered at a specific location\n*/\n\nvar isoBandEdgeRT = [];\nvar isoBandEdgeRB = [];\nvar isoBandEdgeBR = [];\nvar isoBandEdgeBL = [];\nvar isoBandEdgeLB = [];\nvar isoBandEdgeLT = [];\nvar isoBandEdgeTL = [];\nvar isoBandEdgeTR = [];\n\n/* triangle cases */\nisoBandEdgeBL[1] = isoBandEdgeLB[1] = 18;\nisoBandEdgeBL[169] = isoBandEdgeLB[169] = 18;\nisoBandEdgeBR[4] = isoBandEdgeRB[4] = 12;\nisoBandEdgeBR[166] = isoBandEdgeRB[166] = 12;\nisoBandEdgeRT[16] = isoBandEdgeTR[16] = 4;\nisoBandEdgeRT[154] = isoBandEdgeTR[154] = 4;\nisoBandEdgeLT[64] = isoBandEdgeTL[64] = 22;\nisoBandEdgeLT[106] = isoBandEdgeTL[106] = 22;\n\n/* trapezoid cases */\nisoBandEdgeBR[2] = isoBandEdgeLT[2] = 17;\nisoBandEdgeBL[2] = isoBandEdgeLB[2] = 18;\nisoBandEdgeBR[168] = isoBandEdgeLT[168] = 17;\nisoBandEdgeBL[168] = isoBandEdgeLB[168] = 18;\nisoBandEdgeRT[8] = isoBandEdgeBL[8] = 9;\nisoBandEdgeRB[8] = isoBandEdgeBR[8] = 12;\nisoBandEdgeRT[162] = isoBandEdgeBL[162] = 9;\nisoBandEdgeRB[162] = isoBandEdgeBR[162] = 12;\nisoBandEdgeRT[32] = isoBandEdgeTR[32] = 4;\nisoBandEdgeRB[32] = isoBandEdgeTL[32] = 1;\nisoBandEdgeRT[138] = isoBandEdgeTR[138] = 4;\nisoBandEdgeRB[138] = isoBandEdgeTL[138] = 1;\nisoBandEdgeLB[128] = isoBandEdgeTR[128] = 21;\nisoBandEdgeLT[128] = isoBandEdgeTL[128] = 22;\nisoBandEdgeLB[42] = isoBandEdgeTR[42] = 21;\nisoBandEdgeLT[42] = isoBandEdgeTL[42] = 22;\n\n/* rectangle cases */\nisoBandEdgeRB[5] = isoBandEdgeLB[5] = 14;\nisoBandEdgeRB[165] = isoBandEdgeLB[165] = 14;\nisoBandEdgeBR[20] = isoBandEdgeTR[20] = 6;\nisoBandEdgeBR[150] = isoBandEdgeTR[150] = 6;\nisoBandEdgeRT[80] = isoBandEdgeLT[80] = 11;\nisoBandEdgeRT[90] = isoBandEdgeLT[90] = 11;\nisoBandEdgeBL[65] = isoBandEdgeTL[65] = 3;\nisoBandEdgeBL[105] = isoBandEdgeTL[105] = 3;\nisoBandEdgeRT[160] = isoBandEdgeLT[160] = 11;\nisoBandEdgeRB[160] = isoBandEdgeLB[160] = 14;\nisoBandEdgeRT[10] = isoBandEdgeLT[10] = 11;\nisoBandEdgeRB[10] = isoBandEdgeLB[10] = 14;\nisoBandEdgeBR[130] = isoBandEdgeTR[130] = 6;\nisoBandEdgeBL[130] = isoBandEdgeTL[130] = 3;\nisoBandEdgeBR[40] = isoBandEdgeTR[40] = 6;\nisoBandEdgeBL[40] = isoBandEdgeTL[40] = 3;\n\n/* pentagon cases */\nisoBandEdgeRB[101] = isoBandEdgeTL[101] = 1;\nisoBandEdgeRB[69] = isoBandEdgeTL[69] = 1;\nisoBandEdgeLB[149] = isoBandEdgeTR[149] = 21;\nisoBandEdgeLB[21] = isoBandEdgeTR[21] = 21;\nisoBandEdgeBR[86] = isoBandEdgeLT[86] = 17;\nisoBandEdgeBR[84] = isoBandEdgeLT[84] = 17;\nisoBandEdgeRT[89] = isoBandEdgeBL[89] = 9;\nisoBandEdgeRT[81] = isoBandEdgeBL[81] = 9;\nisoBandEdgeRT[96] = isoBandEdgeTL[96] = 0;\nisoBandEdgeRB[96] = isoBandEdgeLT[96] = 15;\nisoBandEdgeRT[74] = isoBandEdgeTL[74] = 0;\nisoBandEdgeRB[74] = isoBandEdgeLT[74] = 15;\nisoBandEdgeRT[24] = isoBandEdgeBR[24] = 8;\nisoBandEdgeBL[24] = isoBandEdgeTR[24] = 7;\nisoBandEdgeRT[146] = isoBandEdgeBR[146] = 8;\nisoBandEdgeBL[146] = isoBandEdgeTR[146] = 7;\nisoBandEdgeRB[6] = isoBandEdgeLT[6] = 15;\nisoBandEdgeBR[6] = isoBandEdgeLB[6] = 16;\nisoBandEdgeRB[164] = isoBandEdgeLT[164] = 15;\nisoBandEdgeBR[164] = isoBandEdgeLB[164] = 16;\nisoBandEdgeBL[129] = isoBandEdgeTR[129] = 7;\nisoBandEdgeLB[129] = isoBandEdgeTL[129] = 20;\nisoBandEdgeBL[41] = isoBandEdgeTR[41] = 7;\nisoBandEdgeLB[41] = isoBandEdgeTL[41] = 20;\nisoBandEdgeBR[66] = isoBandEdgeTL[66] = 2;\nisoBandEdgeBL[66] = isoBandEdgeLT[66] = 19;\nisoBandEdgeBR[104] = isoBandEdgeTL[104] = 2;\nisoBandEdgeBL[104] = isoBandEdgeLT[104] = 19;\nisoBandEdgeRT[144] = isoBandEdgeLB[144] = 10;\nisoBandEdgeLT[144] = isoBandEdgeTR[144] = 23;\nisoBandEdgeRT[26] = isoBandEdgeLB[26] = 10;\nisoBandEdgeLT[26] = isoBandEdgeTR[26] = 23;\nisoBandEdgeRB[36] = isoBandEdgeTR[36] = 5;\nisoBandEdgeBR[36] = isoBandEdgeTL[36] = 2;\nisoBandEdgeRB[134] = isoBandEdgeTR[134] = 5;\nisoBandEdgeBR[134] = isoBandEdgeTL[134] = 2;\nisoBandEdgeRT[9] = isoBandEdgeLB[9] = 10;\nisoBandEdgeRB[9] = isoBandEdgeBL[9] = 13;\nisoBandEdgeRT[161] = isoBandEdgeLB[161] = 10;\nisoBandEdgeRB[161] = isoBandEdgeBL[161] = 13;\n\n/* hexagon cases */\nisoBandEdgeRB[37] = isoBandEdgeTR[37] = 5;\nisoBandEdgeLB[37] = isoBandEdgeTL[37] = 20;\nisoBandEdgeRB[133] = isoBandEdgeTR[133] = 5;\nisoBandEdgeLB[133] = isoBandEdgeTL[133] = 20;\nisoBandEdgeBR[148] = isoBandEdgeLB[148] = 16;\nisoBandEdgeLT[148] = isoBandEdgeTR[148] = 23;\nisoBandEdgeBR[22] = isoBandEdgeLB[22] = 16;\nisoBandEdgeLT[22] = isoBandEdgeTR[22] = 23;\nisoBandEdgeRT[82] = isoBandEdgeBR[82] = 8;\nisoBandEdgeBL[82] = isoBandEdgeLT[82] = 19;\nisoBandEdgeRT[88] = isoBandEdgeBR[88] = 8;\nisoBandEdgeBL[88] = isoBandEdgeLT[88] = 19;\nisoBandEdgeRT[73] = isoBandEdgeTL[73] = 0;\nisoBandEdgeRB[73] = isoBandEdgeBL[73] = 13;\nisoBandEdgeRT[97] = isoBandEdgeTL[97] = 0;\nisoBandEdgeRB[97] = isoBandEdgeBL[97] = 13;\nisoBandEdgeRT[145] = isoBandEdgeBL[145] = 9;\nisoBandEdgeLB[145] = isoBandEdgeTR[145] = 21;\nisoBandEdgeRT[25] = isoBandEdgeBL[25] = 9;\nisoBandEdgeLB[25] = isoBandEdgeTR[25] = 21;\nisoBandEdgeRB[70] = isoBandEdgeTL[70] = 1;\nisoBandEdgeBR[70] = isoBandEdgeLT[70] = 17;\nisoBandEdgeRB[100] = isoBandEdgeTL[100] = 1;\nisoBandEdgeBR[100] = isoBandEdgeLT[100] = 17;\n\n/* 8-sided cases */\nisoBandEdgeRT[34] = isoBandEdgeBL[34] = 9;\nisoBandEdgeRB[34] = isoBandEdgeBR[34] = 12;\nisoBandEdgeLB[34] = isoBandEdgeTR[34] = 21;\nisoBandEdgeLT[34] = isoBandEdgeTL[34] = 22;\nisoBandEdgeRT[136] = isoBandEdgeTR[136] = 4;\nisoBandEdgeRB[136] = isoBandEdgeTL[136] = 1;\nisoBandEdgeBR[136] = isoBandEdgeLT[136] = 17;\nisoBandEdgeBL[136] = isoBandEdgeLB[136] = 18;\nisoBandEdgeRT[35] = isoBandEdgeTR[35] = 4;\nisoBandEdgeRB[35] = isoBandEdgeBR[35] = 12;\nisoBandEdgeBL[35] = isoBandEdgeLB[35] = 18;\nisoBandEdgeLT[35] = isoBandEdgeTL[35] = 22;\n\n/* 6-sided cases */\nisoBandEdgeRT[153] = isoBandEdgeTR[153] = 4;\nisoBandEdgeBL[153] = isoBandEdgeLB[153] = 18;\nisoBandEdgeRB[102] = isoBandEdgeBR[102] = 12;\nisoBandEdgeLT[102] = isoBandEdgeTL[102] = 22;\nisoBandEdgeRT[155] = isoBandEdgeBL[155] = 9;\nisoBandEdgeLB[155] = isoBandEdgeTR[155] = 23;\nisoBandEdgeRB[103] = isoBandEdgeTL[103] = 1;\nisoBandEdgeBR[103] = isoBandEdgeLT[103] = 17;\n\n/* 7-sided cases */\nisoBandEdgeRT[152] = isoBandEdgeTR[152] = 4;\nisoBandEdgeBR[152] = isoBandEdgeLT[152] = 17;\nisoBandEdgeBL[152] = isoBandEdgeLB[152] = 18;\nisoBandEdgeRT[156] = isoBandEdgeBR[156] = 8;\nisoBandEdgeBL[156] = isoBandEdgeLB[156] = 18;\nisoBandEdgeLT[156] = isoBandEdgeTR[156] = 23;\nisoBandEdgeRT[137] = isoBandEdgeTR[137] = 4;\nisoBandEdgeRB[137] = isoBandEdgeTL[137] = 1;\nisoBandEdgeBL[137] = isoBandEdgeLB[137] = 18;\nisoBandEdgeRT[139] = isoBandEdgeTR[139] = 4;\nisoBandEdgeRB[139] = isoBandEdgeBL[139] = 13;\nisoBandEdgeLB[139] = isoBandEdgeTL[139] = 20;\nisoBandEdgeRT[98] = isoBandEdgeBL[98] = 9;\nisoBandEdgeRB[98] = isoBandEdgeBR[98] = 12;\nisoBandEdgeLT[98] = isoBandEdgeTL[98] = 22;\nisoBandEdgeRT[99] = isoBandEdgeTL[99] = 0;\nisoBandEdgeRB[99] = isoBandEdgeBR[99] = 12;\nisoBandEdgeBL[99] = isoBandEdgeLT[99] = 19;\nisoBandEdgeRB[38] = isoBandEdgeBR[38] = 12;\nisoBandEdgeLB[38] = isoBandEdgeTR[38] = 21;\nisoBandEdgeLT[38] = isoBandEdgeTL[38] = 22;\nisoBandEdgeRB[39] = isoBandEdgeTR[39] = 5;\nisoBandEdgeBR[39] = isoBandEdgeLB[39] = 16;\nisoBandEdgeLT[39] = isoBandEdgeTL[39] = 22;\n\n/*\n  The lookup tables for all different polygons that\n  may appear within a grid cell\n*/\n\nvar polygon_table = [];\n\n/* triangle cases */\npolygon_table[1] = polygon_table[169] = p00; /* 2221 || 0001 */\npolygon_table[4] = polygon_table[166] = p01; /* 2212 || 0010 */\npolygon_table[16] = polygon_table[154] = p02; /* 2122 || 0100 */\npolygon_table[64] = polygon_table[106] = p03; /* 1222 || 1000 */\n\n/* trapezoid cases */\npolygon_table[168] = polygon_table[2] = p04; /* 2220 || 0002 */\npolygon_table[162] = polygon_table[8] = p05; /* 2202 || 0020 */\npolygon_table[138] = polygon_table[32] = p06; /* 2022 || 0200 */\npolygon_table[42] = polygon_table[128] = p07; /* 0222 || 2000 */\n\n/* rectangle cases */\npolygon_table[5] = polygon_table[165] = p08; /* 0011 || 2211 */\npolygon_table[20] = polygon_table[150] = p09; /* 0110 || 2112 */\npolygon_table[80] = polygon_table[90] = p10; /* 1100 || 1122 */\npolygon_table[65] = polygon_table[105] = p11; /* 1001 || 1221 */\npolygon_table[160] = polygon_table[10] = p12; /* 2200 || 0022 */\npolygon_table[130] = polygon_table[40] = p13; /* 2002 || 0220 */\n\n/* square case */\npolygon_table[85] = p14; /* 1111 */\n\n/* pentagon cases */\npolygon_table[101] = polygon_table[69] = p15; /* 1211 || 1011 */\npolygon_table[149] = polygon_table[21] = p16; /* 2111 || 0111 */\npolygon_table[86] = polygon_table[84] = p17; /* 1112 || 1110 */\npolygon_table[89] = polygon_table[81] = p18; /* 1121 || 1101 */\npolygon_table[96] = polygon_table[74] = p19; /* 1200 || 1022 */\npolygon_table[24] = polygon_table[146] = p20; /* 0120 || 2102 */\npolygon_table[6] = polygon_table[164] = p21; /* 0012 || 2210 */\npolygon_table[129] = polygon_table[41] = p22; /* 2001 || 0221 */\npolygon_table[66] = polygon_table[104] = p23; /* 1002 || 1220 */\npolygon_table[144] = polygon_table[26] = p24; /* 2100 || 0122 */\npolygon_table[36] = polygon_table[134] = p25; /* 0210 || 2012 */\npolygon_table[9] = polygon_table[161] = p26; /* 0021 || 2201 */\n\n/* hexagon cases */\npolygon_table[37] = polygon_table[133] = p27; /* 0211 || 2011 */\npolygon_table[148] = polygon_table[22] = p28; /* 2110 || 0112 */\npolygon_table[82] = polygon_table[88] = p29; /* 1102 || 1120 */\npolygon_table[73] = polygon_table[97] = p30; /* 1021 || 1201 */\npolygon_table[145] = polygon_table[25] = p31; /* 2101 || 0121 */\npolygon_table[70] = polygon_table[100] = p32; /* 1012 || 1210 */\n\n/* 8-sided cases */\npolygon_table[34] = function (c) {\n  return [p07(c), p05(c)];\n}; /* 0202 || 2020 with flipped == 0 */\npolygon_table[35] = p33; /* flipped == 1 state for 0202 and 2020 */\npolygon_table[136] = function (c) {\n  return [p06(c), p04(c)];\n}; /* 2020 || 0202 with flipped == 0 */\n\n/* 6-sided cases */\npolygon_table[153] = function (c) {\n  return [p02(c), p00(c)];\n}; /* 0101 with flipped == 0 || 2121 with flipped == 2 */\npolygon_table[102] = function (c) {\n  return [p01(c), p03(c)];\n}; /* 1010 with flipped == 0 || 1212 with flipped == 2 */\npolygon_table[155] = p34; /* 0101 with flipped == 1 || 2121 with flipped == 1 */\npolygon_table[103] = p35; /* 1010 with flipped == 1 || 1212 with flipped == 1 */\n\n/* 7-sided cases */\npolygon_table[152] = function (c) {\n  return [p02(c), p04(c)];\n}; /* 2120 with flipped == 2 || 0102 with flipped == 0 */\npolygon_table[156] = p36; /* 2120 with flipped == 1 || 0102 with flipped == 1 */\npolygon_table[137] = function (c) {\n  return [p06(c), p00(c)];\n}; /* 2021 with flipped == 2 || 0201 with flipped == 0 */\npolygon_table[139] = p37; /* 2021 with flipped == 1 || 0201 with flipped == 1 */\npolygon_table[98] = function (c) {\n  return [p05(c), p03(c)];\n}; /* 1202 with flipped == 2 || 1020 with flipped == 0 */\npolygon_table[99] = p38; /* 1202 with flipped == 1 || 1020 with flipped == 1 */\npolygon_table[38] = function (c) {\n  return [p01(c), p07(c)];\n}; /* 0212 with flipped == 2 || 2010 with flipped == 0 */\npolygon_table[39] = p39; /* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n/*\n####################################\nSome small helper functions\n####################################\n*/\n\n/* assume that x1 == 1 &&  x0 == 0 */\nfunction interpolateX(y, y0, y1) {\n  return (y - y0) / (y1 - y0);\n}\nfunction isArray(myArray) {\n  return myArray.constructor.toString().indexOf(\"Array\") > -1;\n}\n\n/*\n####################################\nBelow is the actual Marching Squares implementation\n####################################\n*/\n\nfunction computeBandGrid(data, minV, bandwidth) {\n  var rows = data.length - 1;\n  var cols = data[0].length - 1;\n  var BandGrid = {\n    rows: rows,\n    cols: cols,\n    cells: []\n  };\n  var maxV = minV + Math.abs(bandwidth);\n  for (var j = 0; j < rows; ++j) {\n    BandGrid.cells[j] = [];\n    for (var i = 0; i < cols; ++i) {\n      /*  compose the 4-trit corner representation */\n      var cval = 0;\n      var tl = data[j + 1][i];\n      var tr = data[j + 1][i + 1];\n      var br = data[j][i + 1];\n      var bl = data[j][i];\n      if (isNaN(tl) || isNaN(tr) || isNaN(br) || isNaN(bl)) {\n        continue;\n      }\n      cval |= tl < minV ? 0 : tl > maxV ? 128 : 64;\n      cval |= tr < minV ? 0 : tr > maxV ? 32 : 16;\n      cval |= br < minV ? 0 : br > maxV ? 8 : 4;\n      cval |= bl < minV ? 0 : bl > maxV ? 2 : 1;\n      var cval_real = +cval;\n\n      /* resolve ambiguity via averaging */\n      var flipped = 0;\n      if (cval === 17 /* 0101 */ || cval === 18 /* 0102 */ || cval === 33 /* 0201 */ || cval === 34 /* 0202 */ || cval === 38 /* 0212 */ || cval === 68 /* 1010 */ || cval === 72 /* 1020 */ || cval === 98 /* 1202 */ || cval === 102 /* 1212 */ || cval === 132 /* 2010 */ || cval === 136 /* 2020 */ || cval === 137 /* 2021 */ || cval === 152 /* 2120 */ || cval === 153 /* 2121 */) {\n        var average = (tl + tr + br + bl) / 4;\n        /* set flipped state */\n        flipped = average > maxV ? 2 : average < minV ? 0 : 1;\n\n        /* adjust cval for flipped cases */\n\n        /* 8-sided cases */\n        if (cval === 34) {\n          if (flipped === 1) {\n            cval = 35;\n          } else if (flipped === 0) {\n            cval = 136;\n          }\n        } else if (cval === 136) {\n          if (flipped === 1) {\n            cval = 35;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 34;\n          }\n        } else if (cval === 17) {\n          /* 6-sided polygon cases */\n          if (flipped === 1) {\n            cval = 155;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 153;\n          }\n        } else if (cval === 68) {\n          if (flipped === 1) {\n            cval = 103;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 102;\n          }\n        } else if (cval === 153) {\n          if (flipped === 1) cval = 155;\n        } else if (cval === 102) {\n          if (flipped === 1) cval = 103;\n        } else if (cval === 152) {\n          /* 7-sided polygon cases */\n          if (flipped < 2) {\n            cval = 156;\n            flipped = 1;\n          }\n        } else if (cval === 137) {\n          if (flipped < 2) {\n            cval = 139;\n            flipped = 1;\n          }\n        } else if (cval === 98) {\n          if (flipped < 2) {\n            cval = 99;\n            flipped = 1;\n          }\n        } else if (cval === 38) {\n          if (flipped < 2) {\n            cval = 39;\n            flipped = 1;\n          }\n        } else if (cval === 18) {\n          if (flipped > 0) {\n            cval = 156;\n            flipped = 4;\n          } else {\n            cval = 152;\n          }\n        } else if (cval === 33) {\n          if (flipped > 0) {\n            cval = 139;\n            flipped = 4;\n          } else {\n            cval = 137;\n          }\n        } else if (cval === 72) {\n          if (flipped > 0) {\n            cval = 99;\n            flipped = 4;\n          } else {\n            cval = 98;\n          }\n        } else if (cval === 132) {\n          if (flipped > 0) {\n            cval = 39;\n            flipped = 4;\n          } else {\n            cval = 38;\n          }\n        }\n      }\n\n      /* add cell to BandGrid if it contains at least one polygon-side */\n      if (cval != 0 && cval != 170) {\n        var topleft, topright, bottomleft, bottomright, righttop, rightbottom, lefttop, leftbottom;\n        topleft = topright = bottomleft = bottomright = righttop = rightbottom = lefttop = leftbottom = 0.5;\n        var edges = [];\n\n        /* do interpolation here */\n        /* 1st Triangles */\n        if (cval === 1) {\n          /* 0001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 169) {\n          /* 2221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 4) {\n          /* 0010 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = interpolateX(minV, bl, br);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 166) {\n          /* 2212 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 16) {\n          /* 0100 */\n          righttop = interpolateX(minV, br, tr);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 154) {\n          /* 2122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 64) {\n          /* 1000 */\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 106) {\n          /* 1222 */\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 168) {\n          /* 2nd Trapezoids */\n          /* 2220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 2) {\n          /* 0002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 162) {\n          /* 2202 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 8) {\n          /* 0020 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 138) {\n          /* 2022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 32) {\n          /* 0200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 42) {\n          /* 0222 */\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 128) {\n          /* 2000 */\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        }\n\n        /* 3rd rectangle cases */\n        if (cval === 5) {\n          /* 0011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 165) {\n          /* 2211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 20) {\n          /* 0110 */\n          bottomright = interpolateX(minV, bl, br);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 150) {\n          /* 2112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 80) {\n          /* 1100 */\n          righttop = interpolateX(minV, br, tr);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 90) {\n          /* 1122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 65) {\n          /* 1001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 105) {\n          /* 1221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 160) {\n          /* 2200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 10) {\n          /* 0022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 130) {\n          /* 2002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 40) {\n          /* 0220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 101) {\n          /* 4th single pentagon cases */\n          /* 1211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 69) {\n          /* 1011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 149) {\n          /* 2111 */\n          leftbottom = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 21) {\n          /* 0111 */\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 86) {\n          /* 1112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 84) {\n          /* 1110 */\n          bottomright = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 89) {\n          /* 1121 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 81) {\n          /* 1101 */\n          righttop = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 96) {\n          /* 1200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 74) {\n          /* 1022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 24) {\n          /* 0120 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 146) {\n          /* 2102 */\n          righttop = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 6) {\n          /* 0012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 164) {\n          /* 2210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 129) {\n          /* 2001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 41) {\n          /* 0221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 66) {\n          /* 1002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 104) {\n          /* 1220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeTL[cval]);\n        } else if (cval === 144) {\n          /* 2100 */\n          righttop = interpolateX(minV, br, tr);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 26) {\n          /* 0122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 36) {\n          /* 0210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 134) {\n          /* 2012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 9) {\n          /* 0021 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 161) {\n          /* 2201 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 37) {\n          /* 5th single hexagon cases */\n          /* 0211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 133) {\n          /* 2011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 148) {\n          /* 2110 */\n          bottomright = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 22) {\n          /* 0112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 82) {\n          /* 1102 */\n          righttop = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 88) {\n          /* 1120 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 73) {\n          /* 1021 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 97) {\n          /* 1201 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 145) {\n          /* 2101 */\n          righttop = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 25) {\n          /* 0121 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 70) {\n          /* 1012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 100) {\n          /* 1210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 34) {\n          /* 8-sided cases */\n          /* 0202 || 2020 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 35) {\n          /* flipped == 1 state for 0202, and 2020 with flipped == 4*/\n          if (flipped === 4) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 136) {\n          /* 2020 || 0202 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 153) {\n          /* 6-sided polygon cases */\n          /* 0101 with flipped == 0 || 2121 with flipped == 2 */\n          if (flipped === 0) {\n            righttop = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 102) {\n          /* 1010 with flipped == 0 || 1212 with flipped == 2 */\n          if (flipped === 0) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 155) {\n          /* 0101 with flipped == 4 || 2121 with flipped == 1 */\n          if (flipped === 4) {\n            righttop = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 103) {\n          /* 1010 with flipped == 4 || 1212 with flipped == 1 */\n          if (flipped === 4) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 152) {\n          /* 7-sided polygon cases */\n          /* 2120 with flipped == 2 || 0102 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 156) {\n          /* 2120 with flipped == 1 || 0102 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 137) {\n          /* 2021 with flipped == 2 || 0201 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 139) {\n          /* 2021 with flipped == 1 || 0201 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 98) {\n          /* 1202 with flipped == 2 || 1020 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 99) {\n          /* 1202 with flipped == 1 || 1020 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 38) {\n          /* 0212 with flipped == 2 || 2010 with flipped == 0 */\n          if (flipped === 0) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 39) {\n          /* 0212 with flipped == 1 || 2010 with flipped == 4 */\n          if (flipped === 4) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 85) {\n          righttop = 1;\n          rightbottom = 0;\n          bottomright = 1;\n          bottomleft = 0;\n          leftbottom = 0;\n          lefttop = 1;\n          topleft = 0;\n          topright = 1;\n        }\n        if (topleft < 0 || topleft > 1 || topright < 0 || topright > 1 || righttop < 0 || righttop > 1 || bottomright < 0 || bottomright > 1 || leftbottom < 0 || leftbottom > 1 || lefttop < 0 || lefttop > 1) {\n          console.log(\"MarchingSquaresJS-isoBands: \" + cval + \" \" + cval_real + \" \" + tl + \",\" + tr + \",\" + br + \",\" + bl + \" \" + flipped + \" \" + topleft + \" \" + topright + \" \" + righttop + \" \" + rightbottom + \" \" + bottomright + \" \" + bottomleft + \" \" + leftbottom + \" \" + lefttop);\n        }\n        BandGrid.cells[j][i] = {\n          cval: cval,\n          cval_real: cval_real,\n          flipped: flipped,\n          topleft: topleft,\n          topright: topright,\n          righttop: righttop,\n          rightbottom: rightbottom,\n          bottomright: bottomright,\n          bottomleft: bottomleft,\n          leftbottom: leftbottom,\n          lefttop: lefttop,\n          edges: edges\n        };\n      }\n    }\n  }\n  return BandGrid;\n}\nfunction BandGrid2AreaPaths(grid) {\n  var areas = [];\n  var rows = grid.rows;\n  var cols = grid.cols;\n  var currentPolygon = [];\n  for (var j = 0; j < rows; j++) {\n    for (var i = 0; i < cols; i++) {\n      if (typeof grid.cells[j][i] !== \"undefined\" && grid.cells[j][i].edges.length > 0) {\n        /* trace back polygon path starting from this cell */\n\n        var cell = grid.cells[j][i];\n\n        /* get start coordinates */\n\n        var prev = getStartXY(cell),\n          next = null,\n          p = i,\n          q = j;\n        if (prev !== null) {\n          currentPolygon.push([prev.p[0] + p, prev.p[1] + q]);\n          //console.log(cell);\n          //console.log(\"coords: \" + (prev.p[0] + p) + \" \" + (prev.p[1] + q));\n        }\n        do {\n          //console.log(p + \",\" + q);\n          //console.log(grid.cells[q][p]);\n          //console.log(grid.cells[q][p].edges);\n          //console.log(\"from : \" + prev.x + \" \" + prev.y + \" \" + prev.o);\n\n          next = getExitXY(grid.cells[q][p], prev.x, prev.y, prev.o);\n          if (next !== null) {\n            //console.log(\"coords: \" + (next.p[0] + p) + \" \" + (next.p[1] + q));\n            currentPolygon.push([next.p[0] + p, next.p[1] + q]);\n            p += next.x;\n            q += next.y;\n            prev = next;\n          } else {\n            //console.log(\"getExitXY() returned null!\");\n            break;\n          }\n          //console.log(\"to : \" + next.x + \" \" + next.y + \" \" + next.o);\n          /* special case, where we've reached the grid boundaries */\n          if (q < 0 || q >= rows || p < 0 || p >= cols || typeof grid.cells[q][p] === \"undefined\") {\n            /* to create a closed path, we need to trace our way\n                arround the missing data, until we find an entry\n                point again\n            */\n\n            /* set back coordinates of current cell */\n            p -= next.x;\n            q -= next.y;\n\n            //console.log(\"reached boundary at \" + p + \" \" + q);\n\n            var missing = traceOutOfGridPath(grid, p, q, next.x, next.y, next.o);\n            if (missing !== null) {\n              missing.path.forEach(function (pp) {\n                //console.log(\"coords: \" + (pp[0]) + \" \" + (pp[1]));\n                currentPolygon.push(pp);\n              });\n              p = missing.i;\n              q = missing.j;\n              prev = missing;\n            } else {\n              break;\n            }\n            //console.log(grid.cells[q][p]);\n          }\n        } while (typeof grid.cells[q][p] !== \"undefined\" && grid.cells[q][p].edges.length > 0);\n        areas.push(currentPolygon);\n        //console.log(\"next polygon\");\n        //console.log(currentPolygon);\n        currentPolygon = [];\n        if (grid.cells[j][i].edges.length > 0) i--;\n      }\n    }\n  }\n  return areas;\n}\nfunction traceOutOfGridPath(grid, i, j, d_x, d_y, d_o) {\n  var cell = grid.cells[j][i];\n  var cval = cell.cval_real;\n  var p = i + d_x,\n    q = j + d_y;\n  var path = [];\n  var closed = false;\n  while (!closed) {\n    //console.log(\"processing cell \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n    if (typeof grid.cells[q] === \"undefined\" || typeof grid.cells[q][p] === \"undefined\") {\n      //console.log(\"which is undefined\");\n      /* we can't move on, so we have to change direction to proceed further */\n\n      /* go back to previous cell */\n      q -= d_y;\n      p -= d_x;\n      cell = grid.cells[q][p];\n      cval = cell.cval_real;\n\n      /* check where we've left defined cells of the grid... */\n      if (d_y === -1) {\n        /* we came from top */\n        if (d_o === 0) {\n          /* exit left */\n          if (cval & Node3) {\n            /* lower left node is within range, so we move left */\n            path.push([p, q]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n          } else if (cval & Node2) {\n            /* lower right node is within range, so we move right */\n            path.push([p + 1, q]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n          } else {\n            /* close the path */\n            path.push([p + cell.bottomright, q]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 1;\n            closed = true;\n            break;\n          }\n        } else if (cval & Node3) {\n          path.push([p, q]);\n          d_x = -1;\n          d_y = 0;\n          d_o = 0;\n        } else if (cval & Node2) {\n          path.push([p + cell.bottomright, q]);\n          d_x = 0;\n          d_y = 1;\n          d_o = 1;\n          closed = true;\n          break;\n        } else {\n          path.push([p + cell.bottomleft, q]);\n          d_x = 0;\n          d_y = 1;\n          d_o = 0;\n          closed = true;\n          break;\n        }\n      } else if (d_y === 1) {\n        /* we came from bottom */\n        //console.log(\"we came from bottom and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          /* exit left */\n          if (cval & Node1) {\n            /* top right node is within range, so we move right */\n            path.push([p + 1, q + 1]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else if (!(cval & Node0)) {\n            /* found entry within same cell */\n            path.push([p + cell.topright, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          } else {\n            path.push([p + cell.topleft, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else if (cval & Node1) {\n          path.push([p + 1, q + 1]);\n          d_x = 1;\n          d_y = 0;\n          d_o = 1;\n        } else {\n          /* move right */\n          path.push([p + 1, q + 1]);\n          d_x = 1;\n          d_y = 0;\n          d_o = 1;\n          //console.log(\"wtf\");\n          //break;\n        }\n      } else if (d_x === -1) {\n        /* we came from right */\n        //console.log(\"we came from right and hit a non-existing cell at \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          //console.log(\"continue at bottom\");\n          if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n            //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n          } else if (!(cval & Node3)) {\n            /* there has to be an entry into the regular grid again! */\n            //console.log(\"exiting top\");\n            path.push([p, q + cell.lefttop]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n            closed = true;\n            break;\n          } else {\n            //console.log(\"exiting bottom\");\n            path.push([p, q + cell.leftbottom]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else {\n          //console.log(\"continue at top\");\n          if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n            //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n          } else {\n            /* */\n            console.log(\"MarchingSquaresJS-isoBands: wtf\");\n            break;\n          }\n        }\n      } else if (d_x === 1) {\n        /* we came from left */\n        //console.log(\"we came from left and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          /* exit bottom */\n          if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else {\n            path.push([p + 1, q + cell.rightbottom]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else {\n          /* exit top */\n          if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else if (!(cval & Node1)) {\n            path.push([p + 1, q + cell.rightbottom]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          } else {\n            path.push([p + 1, q + cell.righttop]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 1;\n            break;\n          }\n        }\n      } else {\n        /* we came from the same cell */\n        console.log(\"MarchingSquaresJS-isoBands: we came from nowhere!\");\n        break;\n      }\n    } else {\n      /* try to find an entry into the regular grid again! */\n      cell = grid.cells[q][p];\n      cval = cell.cval_real;\n      //console.log(\"which is defined\");\n\n      if (d_x === -1) {\n        if (d_o === 0) {\n          /* try to go downwards */\n          if (typeof grid.cells[q - 1] !== \"undefined\" && typeof grid.cells[q - 1][p] !== \"undefined\") {\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else if (cval & Node3) {\n            /* proceed searching in x-direction */\n            //console.log(\"proceeding in x-direction!\");\n            path.push([p, q]);\n          } else {\n            /* we must have found an entry into the regular grid */\n            path.push([p + cell.bottomright, q]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 1;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          }\n        } else if (cval & Node0) {\n          /* proceed searchin in x-direction */\n          console.log(\"MarchingSquaresJS-isoBands: proceeding in x-direction!\");\n        } else {\n          /* we must have found an entry into the regular grid */\n          console.log(\"MarchingSquaresJS-isoBands: found entry from top at \" + p + \",\" + q);\n          break;\n        }\n      } else if (d_x === 1) {\n        if (d_o === 0) {\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        } else {\n          /* try to go upwards */\n          if (typeof grid.cells[q + 1] !== \"undefined\" && typeof grid.cells[q + 1][p] !== \"undefined\") {\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n          } else if (cval & Node1) {\n            path.push([p + 1, q + 1]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else {\n            /* found an entry point into regular grid! */\n            path.push([p + cell.topleft, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 0;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          }\n        }\n      } else if (d_y === -1) {\n        if (d_o === 1) {\n          /* try to go right */\n          if (typeof grid.cells[q][p + 1] !== \"undefined\") {\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else {\n            /* found entry into regular grid! */\n            path.push([p + 1, q + cell.righttop]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 1;\n            closed = true;\n            //console.log(\"found entry from top at \" + p + \",\" + q);\n            break;\n          }\n        } else {\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        }\n      } else if (d_y === 1) {\n        if (d_o === 0) {\n          //console.log(\"we came from bottom left and proceed to the left\");\n          /* try to go left */\n          if (typeof grid.cells[q][p - 1] !== \"undefined\") {\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n          } else if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n          } else {\n            /* found an entry point into regular grid! */\n            path.push([p, q + cell.leftbottom]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          }\n        } else {\n          //console.log(\"we came from bottom right and proceed to the right\");\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        }\n      } else {\n        console.log(\"MarchingSquaresJS-isoBands: where did we came from???\");\n        break;\n      }\n    }\n    p += d_x;\n    q += d_y;\n    //console.log(\"going on to  \" + p + \",\" + q + \" via \" + d_x + \" \" + d_y + \" \" + d_o);\n\n    if (p === i && q === j) {\n      /* bail out, once we've closed a circle path */\n      break;\n    }\n  }\n\n  //console.log(\"exit with \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n  return {\n    path: path,\n    i: p,\n    j: q,\n    x: d_x,\n    y: d_y,\n    o: d_o\n  };\n}\nfunction deleteEdge(cell, edgeIdx) {\n  delete cell.edges[edgeIdx];\n  for (var k = edgeIdx + 1; k < cell.edges.length; k++) {\n    cell.edges[k - 1] = cell.edges[k];\n  }\n  cell.edges.pop();\n}\nfunction getStartXY(cell) {\n  if (cell.edges.length > 0) {\n    var e = cell.edges[cell.edges.length - 1];\n    //console.log(\"starting with edge \" + e);\n    var cval = cell.cval_real;\n    switch (e) {\n      case 0:\n        if (cval & Node1) {\n          /* node 1 within range */\n          return {\n            p: [1, cell.righttop],\n            x: -1,\n            y: 0,\n            o: 1\n          };\n        } else {\n          /* node 1 below or above threshold */\n          return {\n            p: [cell.topleft, 1],\n            x: 0,\n            y: -1,\n            o: 0\n          };\n        }\n      case 1:\n        if (cval & Node2) {\n          return {\n            p: [cell.topleft, 1],\n            x: 0,\n            y: -1,\n            o: 0\n          };\n        } else {\n          return {\n            p: [1, cell.rightbottom],\n            x: -1,\n            y: 0,\n            o: 0\n          };\n        }\n      case 2:\n        if (cval & Node2) {\n          return {\n            p: [cell.bottomright, 0],\n            x: 0,\n            y: 1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [cell.topleft, 1],\n            x: 0,\n            y: -1,\n            o: 0\n          };\n        }\n      case 3:\n        if (cval & Node3) {\n          return {\n            p: [cell.topleft, 1],\n            x: 0,\n            y: -1,\n            o: 0\n          };\n        } else {\n          return {\n            p: [cell.bottomleft, 0],\n            x: 0,\n            y: 1,\n            o: 0\n          };\n        }\n      case 4:\n        if (cval & Node1) {\n          return {\n            p: [1, cell.righttop],\n            x: -1,\n            y: 0,\n            o: 1\n          };\n        } else {\n          return {\n            p: [cell.topright, 1],\n            x: 0,\n            y: -1,\n            o: 1\n          };\n        }\n      case 5:\n        if (cval & Node2) {\n          return {\n            p: [cell.topright, 1],\n            x: 0,\n            y: -1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [1, cell.rightbottom],\n            x: -1,\n            y: 0,\n            o: 0\n          };\n        }\n      case 6:\n        if (cval & Node2) {\n          return {\n            p: [cell.bottomright, 0],\n            x: 0,\n            y: 1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [cell.topright, 1],\n            x: 0,\n            y: -1,\n            o: 1\n          };\n        }\n      case 7:\n        if (cval & Node3) {\n          return {\n            p: [cell.topright, 1],\n            x: 0,\n            y: -1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [cell.bottomleft, 0],\n            x: 0,\n            y: 1,\n            o: 0\n          };\n        }\n      case 8:\n        if (cval & Node2) {\n          return {\n            p: [cell.bottomright, 0],\n            x: 0,\n            y: 1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [1, cell.righttop],\n            x: -1,\n            y: 0,\n            o: 1\n          };\n        }\n      case 9:\n        if (cval & Node3) {\n          return {\n            p: [1, cell.righttop],\n            x: -1,\n            y: 0,\n            o: 1\n          };\n        } else {\n          return {\n            p: [cell.bottomleft, 0],\n            x: 0,\n            y: 1,\n            o: 0\n          };\n        }\n      case 10:\n        if (cval & Node3) {\n          return {\n            p: [0, cell.leftbottom],\n            x: 1,\n            y: 0,\n            o: 0\n          };\n        } else {\n          return {\n            p: [1, cell.righttop],\n            x: -1,\n            y: 0,\n            o: 1\n          };\n        }\n      case 11:\n        if (cval & Node0) {\n          return {\n            p: [1, cell.righttop],\n            x: -1,\n            y: 0,\n            o: 1\n          };\n        } else {\n          return {\n            p: [0, cell.lefttop],\n            x: 1,\n            y: 0,\n            o: 1\n          };\n        }\n      case 12:\n        if (cval & Node2) {\n          return {\n            p: [cell.bottomright, 0],\n            x: 0,\n            y: 1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [1, cell.rightbottom],\n            x: -1,\n            y: 0,\n            o: 0\n          };\n        }\n      case 13:\n        if (cval & Node3) {\n          return {\n            p: [1, cell.rightbottom],\n            x: -1,\n            y: 0,\n            o: 0\n          };\n        } else {\n          return {\n            p: [cell.bottomleft, 0],\n            x: 0,\n            y: 1,\n            o: 0\n          };\n        }\n      case 14:\n        if (cval & Node3) {\n          return {\n            p: [0, cell.leftbottom],\n            x: 1,\n            y: 0,\n            o: 0\n          };\n        } else {\n          return {\n            p: [1, cell.rightbottom],\n            x: -1,\n            y: 0,\n            o: 0\n          };\n        }\n      case 15:\n        if (cval & Node0) {\n          return {\n            p: [1, cell.rightbottom],\n            x: -1,\n            y: 0,\n            o: 0\n          };\n        } else {\n          return {\n            p: [0, cell.lefttop],\n            x: 1,\n            y: 0,\n            o: 1\n          };\n        }\n      case 16:\n        if (cval & Node2) {\n          return {\n            p: [cell.bottomright, 0],\n            x: 0,\n            y: 1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [0, cell.leftbottom],\n            x: 1,\n            y: 0,\n            o: 0\n          };\n        }\n      case 17:\n        if (cval & Node0) {\n          return {\n            p: [cell.bottomright, 0],\n            x: 0,\n            y: 1,\n            o: 1\n          };\n        } else {\n          return {\n            p: [0, cell.lefttop],\n            x: 1,\n            y: 0,\n            o: 1\n          };\n        }\n      case 18:\n        if (cval & Node3) {\n          return {\n            p: [0, cell.leftbottom],\n            x: 1,\n            y: 0,\n            o: 0\n          };\n        } else {\n          return {\n            p: [cell.bottomleft, 0],\n            x: 0,\n            y: 1,\n            o: 0\n          };\n        }\n      case 19:\n        if (cval & Node0) {\n          return {\n            p: [cell.bottomleft, 0],\n            x: 0,\n            y: 1,\n            o: 0\n          };\n        } else {\n          return {\n            p: [0, cell.lefttop],\n            x: 1,\n            y: 0,\n            o: 1\n          };\n        }\n      case 20:\n        if (cval & Node0) {\n          return {\n            p: [cell.topleft, 1],\n            x: 0,\n            y: -1,\n            o: 0\n          };\n        } else {\n          return {\n            p: [0, cell.leftbottom],\n            x: 1,\n            y: 0,\n            o: 0\n          };\n        }\n      case 21:\n        if (cval & Node1) {\n          return {\n            p: [0, cell.leftbottom],\n            x: 1,\n            y: 0,\n            o: 0\n          };\n        } else {\n          return {\n            p: [cell.topright, 1],\n            x: 0,\n            y: -1,\n            o: 1\n          };\n        }\n      case 22:\n        if (cval & Node0) {\n          return {\n            p: [cell.topleft, 1],\n            x: 0,\n            y: -1,\n            o: 0\n          };\n        } else {\n          return {\n            p: [0, cell.lefttop],\n            x: 1,\n            y: 0,\n            o: 1\n          };\n        }\n      case 23:\n        if (cval & Node1) {\n          return {\n            p: [0, cell.lefttop],\n            x: 1,\n            y: 0,\n            o: 1\n          };\n        } else {\n          return {\n            p: [cell.topright, 1],\n            x: 0,\n            y: -1,\n            o: 1\n          };\n        }\n      default:\n        console.log(\"MarchingSquaresJS-isoBands: edge index out of range!\");\n        console.log(cell);\n        break;\n    }\n  }\n  return null;\n}\nfunction getExitXY(cell, x, y, o) {\n  var e,\n    id_x,\n    d_x,\n    d_y,\n    cval = cell.cval;\n  var d_o;\n  switch (x) {\n    case -1:\n      switch (o) {\n        case 0:\n          e = isoBandEdgeRB[cval];\n          d_x = isoBandNextXRB[cval];\n          d_y = isoBandNextYRB[cval];\n          d_o = isoBandNextORB[cval];\n          break;\n        default:\n          e = isoBandEdgeRT[cval];\n          d_x = isoBandNextXRT[cval];\n          d_y = isoBandNextYRT[cval];\n          d_o = isoBandNextORT[cval];\n          break;\n      }\n      break;\n    case 1:\n      switch (o) {\n        case 0:\n          e = isoBandEdgeLB[cval];\n          d_x = isoBandNextXLB[cval];\n          d_y = isoBandNextYLB[cval];\n          d_o = isoBandNextOLB[cval];\n          break;\n        default:\n          e = isoBandEdgeLT[cval];\n          d_x = isoBandNextXLT[cval];\n          d_y = isoBandNextYLT[cval];\n          d_o = isoBandNextOLT[cval];\n          break;\n      }\n      break;\n    default:\n      switch (y) {\n        case -1:\n          switch (o) {\n            case 0:\n              e = isoBandEdgeTL[cval];\n              d_x = isoBandNextXTL[cval];\n              d_y = isoBandNextYTL[cval];\n              d_o = isoBandNextOTL[cval];\n              break;\n            default:\n              e = isoBandEdgeTR[cval];\n              d_x = isoBandNextXTR[cval];\n              d_y = isoBandNextYTR[cval];\n              d_o = isoBandNextOTR[cval];\n              break;\n          }\n          break;\n        case 1:\n          switch (o) {\n            case 0:\n              e = isoBandEdgeBL[cval];\n              d_x = isoBandNextXBL[cval];\n              d_y = isoBandNextYBL[cval];\n              d_o = isoBandNextOBL[cval];\n              break;\n            default:\n              e = isoBandEdgeBR[cval];\n              d_x = isoBandNextXBR[cval];\n              d_y = isoBandNextYBR[cval];\n              d_o = isoBandNextOBR[cval];\n              break;\n          }\n          break;\n      }\n      break;\n  }\n  id_x = cell.edges.indexOf(e);\n  if (typeof cell.edges[id_x] !== \"undefined\") {\n    deleteEdge(cell, id_x);\n  } else {\n    //console.log(\"wrong edges...\");\n    //console.log(x + \" \" + y + \" \" + o);\n    //console.log(cell);\n    return null;\n  }\n  cval = cell.cval_real;\n  switch (e) {\n    case 0:\n      if (cval & Node1) {\n        /* node 1 within range */\n        x = cell.topleft;\n        y = 1;\n      } else {\n        /* node 1 below or above threshold */\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 1:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 2:\n      if (cval & Node2) {\n        x = cell.topleft;\n        y = 1;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 3:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 4:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 5:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.topright;\n        y = 1;\n      }\n      break;\n    case 6:\n      if (cval & Node2) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 7:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = cell.topright;\n        y = 1;\n      }\n      break;\n    case 8:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.righttop;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 9:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 10:\n      if (cval & Node3) {\n        x = 1;\n        y = cell.righttop;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 11:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 12:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 13:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 1;\n        y = cell.rightbottom;\n      }\n      break;\n    case 14:\n      if (cval & Node3) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 15:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = 1;\n        y = cell.rightbottom;\n      }\n      break;\n    case 16:\n      if (cval & Node2) {\n        x = 0;\n        y = cell.leftbottom;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 17:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 18:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 19:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.bottomleft;\n        y = 0;\n      }\n      break;\n    case 20:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.leftbottom;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 21:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 22:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 23:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 0;\n        y = cell.lefttop;\n      }\n      break;\n    default:\n      console.log(\"MarchingSquaresJS-isoBands: edge index out of range!\");\n      console.log(cell);\n      return null;\n  }\n  if (typeof x === \"undefined\" || typeof y === \"undefined\" || typeof d_x === \"undefined\" || typeof d_y === \"undefined\" || typeof d_o === \"undefined\") {\n    console.log(\"MarchingSquaresJS-isoBands: undefined value!\");\n    console.log(cell);\n    console.log(x + \" \" + y + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n  }\n  return {\n    p: [x, y],\n    x: d_x,\n    y: d_y,\n    o: d_o\n  };\n}\nfunction BandGrid2Areas(grid) {\n  var areas = [];\n  var area_idx = 0;\n  grid.cells.forEach(function (g, j) {\n    g.forEach(function (gg, i) {\n      if (typeof gg !== \"undefined\") {\n        var a = polygon_table[gg.cval](gg);\n        if (typeof a === \"object\" && isArray(a)) {\n          if (typeof a[0] === \"object\" && isArray(a[0])) {\n            if (typeof a[0][0] === \"object\" && isArray(a[0][0])) {\n              a.forEach(function (aa) {\n                aa.forEach(function (aaa) {\n                  aaa[0] += i;\n                  aaa[1] += j;\n                });\n                areas[area_idx++] = aa;\n              });\n            } else {\n              a.forEach(function (aa) {\n                aa[0] += i;\n                aa[1] += j;\n              });\n              areas[area_idx++] = a;\n            }\n          } else {\n            console.log(\"MarchingSquaresJS-isoBands: bandcell polygon with malformed coordinates\");\n          }\n        } else {\n          console.log(\"MarchingSquaresJS-isoBands: bandcell polygon with null coordinates\");\n        }\n      }\n    });\n  });\n  return areas;\n}\n\n/**\n * Takes a square or rectangular grid {@link FeatureCollection} of {@link Point} features with z-values and an array of\n * value breaks and generates filled contour isobands.\n *\n * @name isobands\n * @param {FeatureCollection<Point>} pointGrid input points - must be square or rectangular\n * @param {Array<number>} breaks where to draw contours\n * @param {Object} [options={}] options on output\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {Object} [options.commonProperties={}] GeoJSON properties passed to ALL isobands\n * @param {Array<Object>} [options.breaksProperties=[]] GeoJSON properties passed, in order, to the correspondent isoband (order defined by breaks)\n * @returns {FeatureCollection<MultiPolygon>} a FeatureCollection of {@link MultiPolygon} features representing isobands\n */\nfunction isobands(pointGrid, breaks, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var zProperty = options.zProperty || \"elevation\";\n  var commonProperties = options.commonProperties || {};\n  var breaksProperties = options.breaksProperties || [];\n\n  // Validation\n  collectionOf(pointGrid, \"Point\", \"Input must contain Points\");\n  if (!breaks) throw new Error(\"breaks is required\");\n  if (!Array.isArray(breaks)) throw new Error(\"breaks is not an Array\");\n  if (!isObject(commonProperties)) throw new Error(\"commonProperties is not an Object\");\n  if (!Array.isArray(breaksProperties)) throw new Error(\"breaksProperties is not an Array\");\n\n  // Isoband methods\n  var matrix = gridToMatrix(pointGrid, {\n    zProperty: zProperty,\n    flip: true\n  });\n  var contours = createContourLines(matrix, breaks, zProperty);\n  contours = rescaleContours(contours, matrix, pointGrid);\n  var multipolygons = contours.map(function (contour, index) {\n    if (breaksProperties[index] && !isObject(breaksProperties[index])) {\n      throw new Error(\"Each mappedProperty is required to be an Object\");\n    }\n    // collect all properties\n    var contourProperties = objectAssign({}, commonProperties, breaksProperties[index]);\n    contourProperties[zProperty] = contour[zProperty];\n    var multiP = multiPolygon(contour.groupedRings, contourProperties);\n    return multiP;\n  });\n  return featureCollection(multipolygons);\n}\n\n/**\n * Creates the contours lines (featuresCollection of polygon features) from the 2D data grid\n *\n * Marchingsquares process the grid data as a 3D representation of a function on a 2D plane, therefore it\n * assumes the points (x-y coordinates) are one 'unit' distance. The result of the IsoBands function needs to be\n * rescaled, with turfjs, to the original area and proportions on the map\n *\n * @private\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Array<number>} breaks Breaks\n * @param {string} [property='elevation'] Property\n * @returns {Array<any>} contours\n */\nfunction createContourLines(matrix, breaks, property) {\n  var contours = [];\n  for (var i = 1; i < breaks.length; i++) {\n    var lowerBand = +breaks[i - 1]; // make sure the breaks value is a number\n    var upperBand = +breaks[i];\n    var isobandsCoords = isoBands(matrix, lowerBand, upperBand - lowerBand);\n    // as per GeoJson rules for creating a Polygon, make sure the first element\n    // in the array of LinearRings represents the exterior ring (i.e. biggest area),\n    // and any subsequent elements represent interior rings (i.e. smaller area);\n    // this avoids rendering issues of the MultiPolygons on the map\n    var nestedRings = orderByArea(isobandsCoords);\n    var groupedRings = groupNestedRings(nestedRings);\n    var obj = {};\n    obj[\"groupedRings\"] = groupedRings;\n    obj[property] = lowerBand + \"-\" + upperBand;\n    contours.push(obj);\n  }\n  return contours;\n}\n\n/**\n * Transform isobands of 2D grid to polygons for the map\n *\n * @private\n * @param {Array<any>} contours Contours\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Object} points Points by Latitude\n * @returns {Array<any>} contours\n */\nfunction rescaleContours(contours, matrix, points) {\n  // get dimensions (on the map) of the original grid\n  var gridBbox = bbox(points); // [ minX, minY, maxX, maxY ]\n  var originalWidth = gridBbox[2] - gridBbox[0];\n  var originalHeigth = gridBbox[3] - gridBbox[1];\n\n  // get origin, which is the first point of the last row on the rectangular data on the map\n  var x0 = gridBbox[0];\n  var y0 = gridBbox[1];\n  // get number of cells per side\n  var matrixWidth = matrix[0].length - 1;\n  var matrixHeight = matrix.length - 1;\n  // calculate the scaling factor between matrix and rectangular grid on the map\n  var scaleX = originalWidth / matrixWidth;\n  var scaleY = originalHeigth / matrixHeight;\n  var resize = function (point) {\n    point[0] = point[0] * scaleX + x0;\n    point[1] = point[1] * scaleY + y0;\n  };\n\n  // resize and shift each point/line of the isobands\n  contours.forEach(function (contour) {\n    contour.groupedRings.forEach(function (lineRingSet) {\n      lineRingSet.forEach(function (lineRing) {\n        lineRing.forEach(resize);\n      });\n    });\n  });\n  return contours;\n}\n\n/*  utility functions */\n\n/**\n * Returns an array of coordinates (of LinearRings) in descending order by area\n *\n * @private\n * @param {Array<LineString>} ringsCoords array of closed LineString\n * @returns {Array} array of the input LineString ordered by area\n */\nfunction orderByArea(ringsCoords) {\n  var ringsWithArea = [];\n  var areas = [];\n  ringsCoords.forEach(function (coords) {\n    // var poly = polygon([points]);\n    var ringArea = area(polygon([coords]));\n    // create an array of areas value\n    areas.push(ringArea);\n    // associate each lineRing with its area\n    ringsWithArea.push({\n      ring: coords,\n      area: ringArea\n    });\n  });\n  areas.sort(function (a, b) {\n    // bigger --> smaller\n    return b - a;\n  });\n  // create a new array of linearRings coordinates ordered by their area\n  var orderedByArea = [];\n  areas.forEach(function (area) {\n    for (var lr = 0; lr < ringsWithArea.length; lr++) {\n      if (ringsWithArea[lr].area === area) {\n        orderedByArea.push(ringsWithArea[lr].ring);\n        ringsWithArea.splice(lr, 1);\n        break;\n      }\n    }\n  });\n  return orderedByArea;\n}\n\n/**\n * Returns an array of arrays of coordinates, each representing\n * a set of (coordinates of) nested LinearRings,\n * i.e. the first ring contains all the others\n *\n * @private\n * @param {Array} orderedLinearRings array of coordinates (of LinearRings) in descending order by area\n * @returns {Array<Array>} Array of coordinates of nested LinearRings\n */\nfunction groupNestedRings(orderedLinearRings) {\n  // create a list of the (coordinates of) LinearRings\n  var lrList = orderedLinearRings.map(function (lr) {\n    return {\n      lrCoordinates: lr,\n      grouped: false\n    };\n  });\n  var groupedLinearRingsCoords = [];\n  while (!allGrouped(lrList)) {\n    for (var i = 0; i < lrList.length; i++) {\n      if (!lrList[i].grouped) {\n        // create new group starting with the larger not already grouped ring\n        var group = [];\n        group.push(lrList[i].lrCoordinates);\n        lrList[i].grouped = true;\n        var outerMostPoly = polygon([lrList[i].lrCoordinates]);\n        // group all the rings contained by the outermost ring\n        for (var j = i + 1; j < lrList.length; j++) {\n          if (!lrList[j].grouped) {\n            var lrPoly = polygon([lrList[j].lrCoordinates]);\n            if (isInside(lrPoly, outerMostPoly)) {\n              group.push(lrList[j].lrCoordinates);\n              lrList[j].grouped = true;\n            }\n          }\n        }\n        // insert the new group\n        groupedLinearRingsCoords.push(group);\n      }\n    }\n  }\n  return groupedLinearRingsCoords;\n}\n\n/**\n * @private\n * @param {Polygon} testPolygon polygon of interest\n * @param {Polygon} targetPolygon polygon you want to compare with\n * @returns {boolean} true if test-Polygon is inside target-Polygon\n */\nfunction isInside(testPolygon, targetPolygon) {\n  var points = explode(testPolygon);\n  for (var i = 0; i < points.features.length; i++) {\n    if (!booleanPointInPolygon(points.features[i], targetPolygon)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @private\n * @param {Array<Object>} list list of objects which might contain the 'group' attribute\n * @returns {boolean} true if all the objects in the list are marked as grouped\n */\nfunction allGrouped(list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].grouped === false) {\n      return false;\n    }\n  }\n  return true;\n}\nexport default isobands;","map":{"version":3,"names":["bbox","area","booleanPointInPolygon","explode","collectionOf","getCoords","isObject","multiPolygon","featureCollection","polygon","objectAssign","featureEach","gridToMatrix","grid","options","Error","zProperty","flip","flags","pointsMatrix","sortPointsByLatLng","matrix","r","length","pointRow","row","c","point","properties","push","matrixPosition","points","pointsByLatitude","lat","orderedRowsByLatitude","Object","keys","map","rowOrderedByLongitude","sort","a","b","pointMatrix","defaultSettings","successCallback","verbose","polygons","settings","isoBands","data","minV","bandwidth","optionKeys","i","key","val","console","log","computeBandGrid","ret","BandGrid2Areas","BandGrid2AreaPaths","Node0","Node1","Node2","Node3","isoBandNextXTL","isoBandNextYTL","isoBandNextOTL","isoBandNextXTR","isoBandNextYTR","isoBandNextOTR","isoBandNextXRT","isoBandNextYRT","isoBandNextORT","isoBandNextXRB","isoBandNextYRB","isoBandNextORB","isoBandNextXBL","isoBandNextYBL","isoBandNextOBL","isoBandNextXBR","isoBandNextYBR","isoBandNextOBR","isoBandNextXLT","isoBandNextYLT","isoBandNextOLT","isoBandNextXLB","isoBandNextYLB","isoBandNextOLB","p00","cell","bottomleft","leftbottom","p01","rightbottom","bottomright","p02","topright","righttop","p03","lefttop","topleft","p04","p05","p06","p07","p08","p09","p10","p11","p12","p13","p14","p15","p16","p17","p18","p19","p20","p21","p22","p23","p24","p25","p26","p27","p28","p29","p30","p31","p32","p33","p34","p35","p36","p37","p38","p39","isoBandEdgeRT","isoBandEdgeRB","isoBandEdgeBR","isoBandEdgeBL","isoBandEdgeLB","isoBandEdgeLT","isoBandEdgeTL","isoBandEdgeTR","polygon_table","interpolateX","y","y0","y1","isArray","myArray","constructor","toString","indexOf","rows","cols","BandGrid","cells","maxV","Math","abs","j","cval","tl","tr","br","bl","isNaN","cval_real","flipped","average","edges","areas","currentPolygon","prev","getStartXY","next","p","q","getExitXY","x","o","missing","traceOutOfGridPath","path","forEach","pp","d_x","d_y","d_o","closed","deleteEdge","edgeIdx","k","pop","e","id_x","area_idx","g","gg","aa","aaa","isobands","pointGrid","breaks","commonProperties","breaksProperties","Array","contours","createContourLines","rescaleContours","multipolygons","contour","index","contourProperties","multiP","groupedRings","property","lowerBand","upperBand","isobandsCoords","nestedRings","orderByArea","groupNestedRings","obj","gridBbox","originalWidth","originalHeigth","x0","matrixWidth","matrixHeight","scaleX","scaleY","resize","lineRingSet","lineRing","ringsCoords","ringsWithArea","coords","ringArea","ring","orderedByArea","lr","splice","orderedLinearRings","lrList","lrCoordinates","grouped","groupedLinearRingsCoords","allGrouped","group","outerMostPoly","lrPoly","isInside","testPolygon","targetPolygon","features","list"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/node_modules/@turf/isobands/dist/es/index.js"],"sourcesContent":["import bbox from '@turf/bbox';\nimport area from '@turf/area';\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport explode from '@turf/explode';\nimport { collectionOf, getCoords } from '@turf/invariant';\nimport { isObject, multiPolygon, featureCollection, polygon } from '@turf/helpers';\nimport objectAssign from 'object-assign';\nimport { featureEach } from '@turf/meta';\n\n/**\n * Takes a {@link Point} grid and returns a correspondent matrix {Array<Array<number>>}\n * of the 'property' values\n *\n * @name gridToMatrix\n * @param {FeatureCollection<Point>} grid of points\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {boolean} [options.flip=false] returns the matrix upside-down\n * @param {boolean} [options.flags=false] flags, adding a `matrixPosition` array field ([row, column]) to its properties,\n * the grid points with coordinates on the matrix\n * @returns {Array<Array<number>>} matrix of property values\n * @example\n *   var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n *   var cellSize = 3;\n *   var grid = turf.pointGrid(extent, cellSize);\n *   // add a random property to each point between 0 and 60\n *   for (var i = 0; i < grid.features.length; i++) {\n *     grid.features[i].properties.elevation = (Math.random() * 60);\n *   }\n *   gridToMatrix(grid);\n *   //= [\n *     [ 1, 13, 10,  9, 10, 13, 18],\n *     [34,  8,  5,  4,  5,  8, 13],\n *     [10,  5,  2,  1,  2,  5,  4],\n *     [ 0,  4, 56, 19,  1,  4,  9],\n *     [10,  5,  2,  1,  2,  5, 10],\n *     [57,  8,  5,  4,  5,  0, 57],\n *     [ 3, 13, 10,  9,  5, 13, 18],\n *     [18, 13, 10,  9, 78, 13, 18]\n *   ]\n */\nfunction gridToMatrix(grid, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var zProperty = options.zProperty || \"elevation\";\n  var flip = options.flip;\n  var flags = options.flags;\n\n  // validation\n  collectionOf(grid, \"Point\", \"input must contain Points\");\n\n  var pointsMatrix = sortPointsByLatLng(grid, flip);\n\n  var matrix = [];\n  // create property matrix from sorted points\n  // looping order matters here\n  for (var r = 0; r < pointsMatrix.length; r++) {\n    var pointRow = pointsMatrix[r];\n    var row = [];\n    for (var c = 0; c < pointRow.length; c++) {\n      var point = pointRow[c];\n      // Check if zProperty exist\n      if (point.properties[zProperty]) row.push(point.properties[zProperty]);\n      else row.push(0);\n      // add flags\n      if (flags === true) point.properties.matrixPosition = [r, c];\n    }\n    matrix.push(row);\n  }\n\n  return matrix;\n}\n\n/**\n * Sorts points by latitude and longitude, creating a 2-dimensional array of points\n *\n * @private\n * @param {FeatureCollection<Point>} points GeoJSON Point features\n * @param {boolean} [flip=false] returns the matrix upside-down\n * @returns {Array<Array<Point>>} points ordered by latitude and longitude\n */\nfunction sortPointsByLatLng(points, flip) {\n  var pointsByLatitude = {};\n\n  // divide points by rows with the same latitude\n  featureEach(points, function (point) {\n    var lat = getCoords(point)[1];\n    if (!pointsByLatitude[lat]) pointsByLatitude[lat] = [];\n    pointsByLatitude[lat].push(point);\n  });\n\n  // sort points (with the same latitude) by longitude\n  var orderedRowsByLatitude = Object.keys(pointsByLatitude).map(function (lat) {\n    var row = pointsByLatitude[lat];\n    var rowOrderedByLongitude = row.sort(function (a, b) {\n      return getCoords(a)[0] - getCoords(b)[0];\n    });\n    return rowOrderedByLongitude;\n  });\n\n  // sort rows (of points with the same latitude) by latitude\n  var pointMatrix = orderedRowsByLatitude.sort(function (a, b) {\n    if (flip) return getCoords(a[0])[1] - getCoords(b[0])[1];\n    else return getCoords(b[0])[1] - getCoords(a[0])[1];\n  });\n\n  return pointMatrix;\n}\n\n/*!\n * @license GNU Affero General Public License.\n * Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>\n * v. 1.2.0\n * https://github.com/RaumZeit/MarchingSquares.js\n *\n * MarchingSquaresJS is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * MarchingSquaresJS is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * As additional permission under GNU Affero General Public License version 3\n * section 7, third-party projects (personal or commercial) may distribute,\n * include, or link against UNMODIFIED VERSIONS of MarchingSquaresJS without the\n * requirement that said third-party project for that reason alone becomes\n * subject to any requirement of the GNU Affero General Public License version 3.\n * Any modifications to MarchingSquaresJS, however, must be shared with the public\n * and made available.\n *\n * In summary this:\n * - allows you to use MarchingSquaresJS at no cost\n * - allows you to use MarchingSquaresJS for both personal and commercial purposes\n * - allows you to distribute UNMODIFIED VERSIONS of MarchingSquaresJS under any\n *   license as long as this license notice is included\n * - enables you to keep the source code of your program that uses MarchingSquaresJS\n *   undisclosed\n * - forces you to share any modifications you have made to MarchingSquaresJS,\n *   e.g. bug-fixes\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with MarchingSquaresJS.  If not, see <http://www.gnu.org/licenses/>.\n */\nvar defaultSettings = {\n  successCallback: null,\n  verbose: false,\n  polygons: false,\n};\n\nvar settings = {};\n\n/*\n  Compute isobands(s) of a scalar 2D field given a certain\n  threshold and a bandwidth by applying the Marching Squares\n  Algorithm. The function returns a list of path coordinates\n  either for individual polygons within each grid cell, or the\n  outline of connected polygons.\n*/\nfunction isoBands(data, minV, bandwidth, options) {\n  /* process options */\n  options = options ? options : {};\n\n  var optionKeys = Object.keys(defaultSettings);\n\n  for (var i = 0; i < optionKeys.length; i++) {\n    var key = optionKeys[i];\n    var val = options[key];\n    val =\n      typeof val !== \"undefined\" && val !== null ? val : defaultSettings[key];\n\n    settings[key] = val;\n  }\n\n  if (settings.verbose)\n    console.log(\n      \"MarchingSquaresJS-isoBands: computing isobands for [\" +\n        minV +\n        \":\" +\n        (minV + bandwidth) +\n        \"]\"\n    );\n\n  var grid = computeBandGrid(data, minV, bandwidth);\n\n  var ret;\n  if (settings.polygons) {\n    if (settings.verbose)\n      console.log(\n        \"MarchingSquaresJS-isoBands: returning single polygons for each grid cell\"\n      );\n    ret = BandGrid2Areas(grid);\n  } else {\n    if (settings.verbose)\n      console.log(\n        \"MarchingSquaresJS-isoBands: returning polygon paths for entire data grid\"\n      );\n    ret = BandGrid2AreaPaths(grid);\n  }\n\n  if (typeof settings.successCallback === \"function\")\n    settings.successCallback(ret);\n\n  return ret;\n}\n\n/*\n  Thats all for the public interface, below follows the actual\n  implementation\n*/\n\n/* Some private variables */\nvar Node0 = 64,\n  Node1 = 16,\n  Node2 = 4,\n  Node3 = 1;\n\n/*\n  The look-up tables for tracing back the contour path\n  of isoBands\n*/\n\nvar isoBandNextXTL = [];\nvar isoBandNextYTL = [];\nvar isoBandNextOTL = [];\n\nvar isoBandNextXTR = [];\nvar isoBandNextYTR = [];\nvar isoBandNextOTR = [];\n\nvar isoBandNextXRT = [];\nvar isoBandNextYRT = [];\nvar isoBandNextORT = [];\n\nvar isoBandNextXRB = [];\nvar isoBandNextYRB = [];\nvar isoBandNextORB = [];\n\nvar isoBandNextXBL = [];\nvar isoBandNextYBL = [];\nvar isoBandNextOBL = [];\n\nvar isoBandNextXBR = [];\nvar isoBandNextYBR = [];\nvar isoBandNextOBR = [];\n\nvar isoBandNextXLT = [];\nvar isoBandNextYLT = [];\nvar isoBandNextOLT = [];\n\nvar isoBandNextXLB = [];\nvar isoBandNextYLB = [];\nvar isoBandNextOLB = [];\n\nisoBandNextXRT[85] = isoBandNextXRB[85] = -1;\nisoBandNextYRT[85] = isoBandNextYRB[85] = 0;\nisoBandNextORT[85] = isoBandNextORB[85] = 1;\nisoBandNextXLT[85] = isoBandNextXLB[85] = 1;\nisoBandNextYLT[85] = isoBandNextYLB[85] = 0;\nisoBandNextOLT[85] = isoBandNextOLB[85] = 1;\n\nisoBandNextXTL[85] = isoBandNextXTR[85] = 0;\nisoBandNextYTL[85] = isoBandNextYTR[85] = -1;\nisoBandNextOTL[85] = isoBandNextOBL[85] = 0;\nisoBandNextXBR[85] = isoBandNextXBL[85] = 0;\nisoBandNextYBR[85] = isoBandNextYBL[85] = 1;\nisoBandNextOTR[85] = isoBandNextOBR[85] = 1;\n\n/* triangle cases */\nisoBandNextXLB[1] = isoBandNextXLB[169] = 0;\nisoBandNextYLB[1] = isoBandNextYLB[169] = -1;\nisoBandNextOLB[1] = isoBandNextOLB[169] = 0;\nisoBandNextXBL[1] = isoBandNextXBL[169] = -1;\nisoBandNextYBL[1] = isoBandNextYBL[169] = 0;\nisoBandNextOBL[1] = isoBandNextOBL[169] = 0;\n\nisoBandNextXRB[4] = isoBandNextXRB[166] = 0;\nisoBandNextYRB[4] = isoBandNextYRB[166] = -1;\nisoBandNextORB[4] = isoBandNextORB[166] = 1;\nisoBandNextXBR[4] = isoBandNextXBR[166] = 1;\nisoBandNextYBR[4] = isoBandNextYBR[166] = 0;\nisoBandNextOBR[4] = isoBandNextOBR[166] = 0;\n\nisoBandNextXRT[16] = isoBandNextXRT[154] = 0;\nisoBandNextYRT[16] = isoBandNextYRT[154] = 1;\nisoBandNextORT[16] = isoBandNextORT[154] = 1;\nisoBandNextXTR[16] = isoBandNextXTR[154] = 1;\nisoBandNextYTR[16] = isoBandNextYTR[154] = 0;\nisoBandNextOTR[16] = isoBandNextOTR[154] = 1;\n\nisoBandNextXLT[64] = isoBandNextXLT[106] = 0;\nisoBandNextYLT[64] = isoBandNextYLT[106] = 1;\nisoBandNextOLT[64] = isoBandNextOLT[106] = 0;\nisoBandNextXTL[64] = isoBandNextXTL[106] = -1;\nisoBandNextYTL[64] = isoBandNextYTL[106] = 0;\nisoBandNextOTL[64] = isoBandNextOTL[106] = 1;\n\n/* single trapezoid cases */\nisoBandNextXLT[2] = isoBandNextXLT[168] = 0;\nisoBandNextYLT[2] = isoBandNextYLT[168] = -1;\nisoBandNextOLT[2] = isoBandNextOLT[168] = 1;\nisoBandNextXLB[2] = isoBandNextXLB[168] = 0;\nisoBandNextYLB[2] = isoBandNextYLB[168] = -1;\nisoBandNextOLB[2] = isoBandNextOLB[168] = 0;\nisoBandNextXBL[2] = isoBandNextXBL[168] = -1;\nisoBandNextYBL[2] = isoBandNextYBL[168] = 0;\nisoBandNextOBL[2] = isoBandNextOBL[168] = 0;\nisoBandNextXBR[2] = isoBandNextXBR[168] = -1;\nisoBandNextYBR[2] = isoBandNextYBR[168] = 0;\nisoBandNextOBR[2] = isoBandNextOBR[168] = 1;\n\nisoBandNextXRT[8] = isoBandNextXRT[162] = 0;\nisoBandNextYRT[8] = isoBandNextYRT[162] = -1;\nisoBandNextORT[8] = isoBandNextORT[162] = 0;\nisoBandNextXRB[8] = isoBandNextXRB[162] = 0;\nisoBandNextYRB[8] = isoBandNextYRB[162] = -1;\nisoBandNextORB[8] = isoBandNextORB[162] = 1;\nisoBandNextXBL[8] = isoBandNextXBL[162] = 1;\nisoBandNextYBL[8] = isoBandNextYBL[162] = 0;\nisoBandNextOBL[8] = isoBandNextOBL[162] = 1;\nisoBandNextXBR[8] = isoBandNextXBR[162] = 1;\nisoBandNextYBR[8] = isoBandNextYBR[162] = 0;\nisoBandNextOBR[8] = isoBandNextOBR[162] = 0;\n\nisoBandNextXRT[32] = isoBandNextXRT[138] = 0;\nisoBandNextYRT[32] = isoBandNextYRT[138] = 1;\nisoBandNextORT[32] = isoBandNextORT[138] = 1;\nisoBandNextXRB[32] = isoBandNextXRB[138] = 0;\nisoBandNextYRB[32] = isoBandNextYRB[138] = 1;\nisoBandNextORB[32] = isoBandNextORB[138] = 0;\nisoBandNextXTL[32] = isoBandNextXTL[138] = 1;\nisoBandNextYTL[32] = isoBandNextYTL[138] = 0;\nisoBandNextOTL[32] = isoBandNextOTL[138] = 0;\nisoBandNextXTR[32] = isoBandNextXTR[138] = 1;\nisoBandNextYTR[32] = isoBandNextYTR[138] = 0;\nisoBandNextOTR[32] = isoBandNextOTR[138] = 1;\n\nisoBandNextXLB[128] = isoBandNextXLB[42] = 0;\nisoBandNextYLB[128] = isoBandNextYLB[42] = 1;\nisoBandNextOLB[128] = isoBandNextOLB[42] = 1;\nisoBandNextXLT[128] = isoBandNextXLT[42] = 0;\nisoBandNextYLT[128] = isoBandNextYLT[42] = 1;\nisoBandNextOLT[128] = isoBandNextOLT[42] = 0;\nisoBandNextXTL[128] = isoBandNextXTL[42] = -1;\nisoBandNextYTL[128] = isoBandNextYTL[42] = 0;\nisoBandNextOTL[128] = isoBandNextOTL[42] = 1;\nisoBandNextXTR[128] = isoBandNextXTR[42] = -1;\nisoBandNextYTR[128] = isoBandNextYTR[42] = 0;\nisoBandNextOTR[128] = isoBandNextOTR[42] = 0;\n\n/* single rectangle cases */\nisoBandNextXRB[5] = isoBandNextXRB[165] = -1;\nisoBandNextYRB[5] = isoBandNextYRB[165] = 0;\nisoBandNextORB[5] = isoBandNextORB[165] = 0;\nisoBandNextXLB[5] = isoBandNextXLB[165] = 1;\nisoBandNextYLB[5] = isoBandNextYLB[165] = 0;\nisoBandNextOLB[5] = isoBandNextOLB[165] = 0;\n\nisoBandNextXBR[20] = isoBandNextXBR[150] = 0;\nisoBandNextYBR[20] = isoBandNextYBR[150] = 1;\nisoBandNextOBR[20] = isoBandNextOBR[150] = 1;\nisoBandNextXTR[20] = isoBandNextXTR[150] = 0;\nisoBandNextYTR[20] = isoBandNextYTR[150] = -1;\nisoBandNextOTR[20] = isoBandNextOTR[150] = 1;\n\nisoBandNextXRT[80] = isoBandNextXRT[90] = -1;\nisoBandNextYRT[80] = isoBandNextYRT[90] = 0;\nisoBandNextORT[80] = isoBandNextORT[90] = 1;\nisoBandNextXLT[80] = isoBandNextXLT[90] = 1;\nisoBandNextYLT[80] = isoBandNextYLT[90] = 0;\nisoBandNextOLT[80] = isoBandNextOLT[90] = 1;\n\nisoBandNextXBL[65] = isoBandNextXBL[105] = 0;\nisoBandNextYBL[65] = isoBandNextYBL[105] = 1;\nisoBandNextOBL[65] = isoBandNextOBL[105] = 0;\nisoBandNextXTL[65] = isoBandNextXTL[105] = 0;\nisoBandNextYTL[65] = isoBandNextYTL[105] = -1;\nisoBandNextOTL[65] = isoBandNextOTL[105] = 0;\n\nisoBandNextXRT[160] = isoBandNextXRT[10] = -1;\nisoBandNextYRT[160] = isoBandNextYRT[10] = 0;\nisoBandNextORT[160] = isoBandNextORT[10] = 1;\nisoBandNextXRB[160] = isoBandNextXRB[10] = -1;\nisoBandNextYRB[160] = isoBandNextYRB[10] = 0;\nisoBandNextORB[160] = isoBandNextORB[10] = 0;\nisoBandNextXLB[160] = isoBandNextXLB[10] = 1;\nisoBandNextYLB[160] = isoBandNextYLB[10] = 0;\nisoBandNextOLB[160] = isoBandNextOLB[10] = 0;\nisoBandNextXLT[160] = isoBandNextXLT[10] = 1;\nisoBandNextYLT[160] = isoBandNextYLT[10] = 0;\nisoBandNextOLT[160] = isoBandNextOLT[10] = 1;\n\nisoBandNextXBR[130] = isoBandNextXBR[40] = 0;\nisoBandNextYBR[130] = isoBandNextYBR[40] = 1;\nisoBandNextOBR[130] = isoBandNextOBR[40] = 1;\nisoBandNextXBL[130] = isoBandNextXBL[40] = 0;\nisoBandNextYBL[130] = isoBandNextYBL[40] = 1;\nisoBandNextOBL[130] = isoBandNextOBL[40] = 0;\nisoBandNextXTL[130] = isoBandNextXTL[40] = 0;\nisoBandNextYTL[130] = isoBandNextYTL[40] = -1;\nisoBandNextOTL[130] = isoBandNextOTL[40] = 0;\nisoBandNextXTR[130] = isoBandNextXTR[40] = 0;\nisoBandNextYTR[130] = isoBandNextYTR[40] = -1;\nisoBandNextOTR[130] = isoBandNextOTR[40] = 1;\n\n/* single hexagon cases */\nisoBandNextXRB[37] = isoBandNextXRB[133] = 0;\nisoBandNextYRB[37] = isoBandNextYRB[133] = 1;\nisoBandNextORB[37] = isoBandNextORB[133] = 1;\nisoBandNextXLB[37] = isoBandNextXLB[133] = 0;\nisoBandNextYLB[37] = isoBandNextYLB[133] = 1;\nisoBandNextOLB[37] = isoBandNextOLB[133] = 0;\nisoBandNextXTL[37] = isoBandNextXTL[133] = -1;\nisoBandNextYTL[37] = isoBandNextYTL[133] = 0;\nisoBandNextOTL[37] = isoBandNextOTL[133] = 0;\nisoBandNextXTR[37] = isoBandNextXTR[133] = 1;\nisoBandNextYTR[37] = isoBandNextYTR[133] = 0;\nisoBandNextOTR[37] = isoBandNextOTR[133] = 0;\n\nisoBandNextXBR[148] = isoBandNextXBR[22] = -1;\nisoBandNextYBR[148] = isoBandNextYBR[22] = 0;\nisoBandNextOBR[148] = isoBandNextOBR[22] = 0;\nisoBandNextXLB[148] = isoBandNextXLB[22] = 0;\nisoBandNextYLB[148] = isoBandNextYLB[22] = -1;\nisoBandNextOLB[148] = isoBandNextOLB[22] = 1;\nisoBandNextXLT[148] = isoBandNextXLT[22] = 0;\nisoBandNextYLT[148] = isoBandNextYLT[22] = 1;\nisoBandNextOLT[148] = isoBandNextOLT[22] = 1;\nisoBandNextXTR[148] = isoBandNextXTR[22] = -1;\nisoBandNextYTR[148] = isoBandNextYTR[22] = 0;\nisoBandNextOTR[148] = isoBandNextOTR[22] = 1;\n\nisoBandNextXRT[82] = isoBandNextXRT[88] = 0;\nisoBandNextYRT[82] = isoBandNextYRT[88] = -1;\nisoBandNextORT[82] = isoBandNextORT[88] = 1;\nisoBandNextXBR[82] = isoBandNextXBR[88] = 1;\nisoBandNextYBR[82] = isoBandNextYBR[88] = 0;\nisoBandNextOBR[82] = isoBandNextOBR[88] = 1;\nisoBandNextXBL[82] = isoBandNextXBL[88] = -1;\nisoBandNextYBL[82] = isoBandNextYBL[88] = 0;\nisoBandNextOBL[82] = isoBandNextOBL[88] = 1;\nisoBandNextXLT[82] = isoBandNextXLT[88] = 0;\nisoBandNextYLT[82] = isoBandNextYLT[88] = -1;\nisoBandNextOLT[82] = isoBandNextOLT[88] = 0;\n\nisoBandNextXRT[73] = isoBandNextXRT[97] = 0;\nisoBandNextYRT[73] = isoBandNextYRT[97] = 1;\nisoBandNextORT[73] = isoBandNextORT[97] = 0;\nisoBandNextXRB[73] = isoBandNextXRB[97] = 0;\nisoBandNextYRB[73] = isoBandNextYRB[97] = -1;\nisoBandNextORB[73] = isoBandNextORB[97] = 0;\nisoBandNextXBL[73] = isoBandNextXBL[97] = 1;\nisoBandNextYBL[73] = isoBandNextYBL[97] = 0;\nisoBandNextOBL[73] = isoBandNextOBL[97] = 0;\nisoBandNextXTL[73] = isoBandNextXTL[97] = 1;\nisoBandNextYTL[73] = isoBandNextYTL[97] = 0;\nisoBandNextOTL[73] = isoBandNextOTL[97] = 1;\n\nisoBandNextXRT[145] = isoBandNextXRT[25] = 0;\nisoBandNextYRT[145] = isoBandNextYRT[25] = -1;\nisoBandNextORT[145] = isoBandNextORT[25] = 0;\nisoBandNextXBL[145] = isoBandNextXBL[25] = 1;\nisoBandNextYBL[145] = isoBandNextYBL[25] = 0;\nisoBandNextOBL[145] = isoBandNextOBL[25] = 1;\nisoBandNextXLB[145] = isoBandNextXLB[25] = 0;\nisoBandNextYLB[145] = isoBandNextYLB[25] = 1;\nisoBandNextOLB[145] = isoBandNextOLB[25] = 1;\nisoBandNextXTR[145] = isoBandNextXTR[25] = -1;\nisoBandNextYTR[145] = isoBandNextYTR[25] = 0;\nisoBandNextOTR[145] = isoBandNextOTR[25] = 0;\n\nisoBandNextXRB[70] = isoBandNextXRB[100] = 0;\nisoBandNextYRB[70] = isoBandNextYRB[100] = 1;\nisoBandNextORB[70] = isoBandNextORB[100] = 0;\nisoBandNextXBR[70] = isoBandNextXBR[100] = -1;\nisoBandNextYBR[70] = isoBandNextYBR[100] = 0;\nisoBandNextOBR[70] = isoBandNextOBR[100] = 1;\nisoBandNextXLT[70] = isoBandNextXLT[100] = 0;\nisoBandNextYLT[70] = isoBandNextYLT[100] = -1;\nisoBandNextOLT[70] = isoBandNextOLT[100] = 1;\nisoBandNextXTL[70] = isoBandNextXTL[100] = 1;\nisoBandNextYTL[70] = isoBandNextYTL[100] = 0;\nisoBandNextOTL[70] = isoBandNextOTL[100] = 0;\n\n/* single pentagon cases */\nisoBandNextXRB[101] = isoBandNextXRB[69] = 0;\nisoBandNextYRB[101] = isoBandNextYRB[69] = 1;\nisoBandNextORB[101] = isoBandNextORB[69] = 0;\nisoBandNextXTL[101] = isoBandNextXTL[69] = 1;\nisoBandNextYTL[101] = isoBandNextYTL[69] = 0;\nisoBandNextOTL[101] = isoBandNextOTL[69] = 0;\n\nisoBandNextXLB[149] = isoBandNextXLB[21] = 0;\nisoBandNextYLB[149] = isoBandNextYLB[21] = 1;\nisoBandNextOLB[149] = isoBandNextOLB[21] = 1;\nisoBandNextXTR[149] = isoBandNextXTR[21] = -1;\nisoBandNextYTR[149] = isoBandNextYTR[21] = 0;\nisoBandNextOTR[149] = isoBandNextOTR[21] = 0;\n\nisoBandNextXBR[86] = isoBandNextXBR[84] = -1;\nisoBandNextYBR[86] = isoBandNextYBR[84] = 0;\nisoBandNextOBR[86] = isoBandNextOBR[84] = 1;\nisoBandNextXLT[86] = isoBandNextXLT[84] = 0;\nisoBandNextYLT[86] = isoBandNextYLT[84] = -1;\nisoBandNextOLT[86] = isoBandNextOLT[84] = 1;\n\nisoBandNextXRT[89] = isoBandNextXRT[81] = 0;\nisoBandNextYRT[89] = isoBandNextYRT[81] = -1;\nisoBandNextORT[89] = isoBandNextORT[81] = 0;\nisoBandNextXBL[89] = isoBandNextXBL[81] = 1;\nisoBandNextYBL[89] = isoBandNextYBL[81] = 0;\nisoBandNextOBL[89] = isoBandNextOBL[81] = 1;\n\nisoBandNextXRT[96] = isoBandNextXRT[74] = 0;\nisoBandNextYRT[96] = isoBandNextYRT[74] = 1;\nisoBandNextORT[96] = isoBandNextORT[74] = 0;\nisoBandNextXRB[96] = isoBandNextXRB[74] = -1;\nisoBandNextYRB[96] = isoBandNextYRB[74] = 0;\nisoBandNextORB[96] = isoBandNextORB[74] = 1;\nisoBandNextXLT[96] = isoBandNextXLT[74] = 1;\nisoBandNextYLT[96] = isoBandNextYLT[74] = 0;\nisoBandNextOLT[96] = isoBandNextOLT[74] = 0;\nisoBandNextXTL[96] = isoBandNextXTL[74] = 1;\nisoBandNextYTL[96] = isoBandNextYTL[74] = 0;\nisoBandNextOTL[96] = isoBandNextOTL[74] = 1;\n\nisoBandNextXRT[24] = isoBandNextXRT[146] = 0;\nisoBandNextYRT[24] = isoBandNextYRT[146] = -1;\nisoBandNextORT[24] = isoBandNextORT[146] = 1;\nisoBandNextXBR[24] = isoBandNextXBR[146] = 1;\nisoBandNextYBR[24] = isoBandNextYBR[146] = 0;\nisoBandNextOBR[24] = isoBandNextOBR[146] = 1;\nisoBandNextXBL[24] = isoBandNextXBL[146] = 0;\nisoBandNextYBL[24] = isoBandNextYBL[146] = 1;\nisoBandNextOBL[24] = isoBandNextOBL[146] = 1;\nisoBandNextXTR[24] = isoBandNextXTR[146] = 0;\nisoBandNextYTR[24] = isoBandNextYTR[146] = -1;\nisoBandNextOTR[24] = isoBandNextOTR[146] = 0;\n\nisoBandNextXRB[6] = isoBandNextXRB[164] = -1;\nisoBandNextYRB[6] = isoBandNextYRB[164] = 0;\nisoBandNextORB[6] = isoBandNextORB[164] = 1;\nisoBandNextXBR[6] = isoBandNextXBR[164] = -1;\nisoBandNextYBR[6] = isoBandNextYBR[164] = 0;\nisoBandNextOBR[6] = isoBandNextOBR[164] = 0;\nisoBandNextXLB[6] = isoBandNextXLB[164] = 0;\nisoBandNextYLB[6] = isoBandNextYLB[164] = -1;\nisoBandNextOLB[6] = isoBandNextOLB[164] = 1;\nisoBandNextXLT[6] = isoBandNextXLT[164] = 1;\nisoBandNextYLT[6] = isoBandNextYLT[164] = 0;\nisoBandNextOLT[6] = isoBandNextOLT[164] = 0;\n\nisoBandNextXBL[129] = isoBandNextXBL[41] = 0;\nisoBandNextYBL[129] = isoBandNextYBL[41] = 1;\nisoBandNextOBL[129] = isoBandNextOBL[41] = 1;\nisoBandNextXLB[129] = isoBandNextXLB[41] = 0;\nisoBandNextYLB[129] = isoBandNextYLB[41] = 1;\nisoBandNextOLB[129] = isoBandNextOLB[41] = 0;\nisoBandNextXTL[129] = isoBandNextXTL[41] = -1;\nisoBandNextYTL[129] = isoBandNextYTL[41] = 0;\nisoBandNextOTL[129] = isoBandNextOTL[41] = 0;\nisoBandNextXTR[129] = isoBandNextXTR[41] = 0;\nisoBandNextYTR[129] = isoBandNextYTR[41] = -1;\nisoBandNextOTR[129] = isoBandNextOTR[41] = 0;\n\nisoBandNextXBR[66] = isoBandNextXBR[104] = 0;\nisoBandNextYBR[66] = isoBandNextYBR[104] = 1;\nisoBandNextOBR[66] = isoBandNextOBR[104] = 0;\nisoBandNextXBL[66] = isoBandNextXBL[104] = -1;\nisoBandNextYBL[66] = isoBandNextYBL[104] = 0;\nisoBandNextOBL[66] = isoBandNextOBL[104] = 1;\nisoBandNextXLT[66] = isoBandNextXLT[104] = 0;\nisoBandNextYLT[66] = isoBandNextYLT[104] = -1;\nisoBandNextOLT[66] = isoBandNextOLT[104] = 0;\nisoBandNextXTL[66] = isoBandNextXTL[104] = 0;\nisoBandNextYTL[66] = isoBandNextYTL[104] = -1;\nisoBandNextOTL[66] = isoBandNextOTL[104] = 1;\n\nisoBandNextXRT[144] = isoBandNextXRT[26] = -1;\nisoBandNextYRT[144] = isoBandNextYRT[26] = 0;\nisoBandNextORT[144] = isoBandNextORT[26] = 0;\nisoBandNextXLB[144] = isoBandNextXLB[26] = 1;\nisoBandNextYLB[144] = isoBandNextYLB[26] = 0;\nisoBandNextOLB[144] = isoBandNextOLB[26] = 1;\nisoBandNextXLT[144] = isoBandNextXLT[26] = 0;\nisoBandNextYLT[144] = isoBandNextYLT[26] = 1;\nisoBandNextOLT[144] = isoBandNextOLT[26] = 1;\nisoBandNextXTR[144] = isoBandNextXTR[26] = -1;\nisoBandNextYTR[144] = isoBandNextYTR[26] = 0;\nisoBandNextOTR[144] = isoBandNextOTR[26] = 1;\n\nisoBandNextXRB[36] = isoBandNextXRB[134] = 0;\nisoBandNextYRB[36] = isoBandNextYRB[134] = 1;\nisoBandNextORB[36] = isoBandNextORB[134] = 1;\nisoBandNextXBR[36] = isoBandNextXBR[134] = 0;\nisoBandNextYBR[36] = isoBandNextYBR[134] = 1;\nisoBandNextOBR[36] = isoBandNextOBR[134] = 0;\nisoBandNextXTL[36] = isoBandNextXTL[134] = 0;\nisoBandNextYTL[36] = isoBandNextYTL[134] = -1;\nisoBandNextOTL[36] = isoBandNextOTL[134] = 1;\nisoBandNextXTR[36] = isoBandNextXTR[134] = 1;\nisoBandNextYTR[36] = isoBandNextYTR[134] = 0;\nisoBandNextOTR[36] = isoBandNextOTR[134] = 0;\n\nisoBandNextXRT[9] = isoBandNextXRT[161] = -1;\nisoBandNextYRT[9] = isoBandNextYRT[161] = 0;\nisoBandNextORT[9] = isoBandNextORT[161] = 0;\nisoBandNextXRB[9] = isoBandNextXRB[161] = 0;\nisoBandNextYRB[9] = isoBandNextYRB[161] = -1;\nisoBandNextORB[9] = isoBandNextORB[161] = 0;\nisoBandNextXBL[9] = isoBandNextXBL[161] = 1;\nisoBandNextYBL[9] = isoBandNextYBL[161] = 0;\nisoBandNextOBL[9] = isoBandNextOBL[161] = 0;\nisoBandNextXLB[9] = isoBandNextXLB[161] = 1;\nisoBandNextYLB[9] = isoBandNextYLB[161] = 0;\nisoBandNextOLB[9] = isoBandNextOLB[161] = 1;\n\n/* 8-sided cases */\nisoBandNextXRT[136] = 0;\nisoBandNextYRT[136] = 1;\nisoBandNextORT[136] = 1;\nisoBandNextXRB[136] = 0;\nisoBandNextYRB[136] = 1;\nisoBandNextORB[136] = 0;\nisoBandNextXBR[136] = -1;\nisoBandNextYBR[136] = 0;\nisoBandNextOBR[136] = 1;\nisoBandNextXBL[136] = -1;\nisoBandNextYBL[136] = 0;\nisoBandNextOBL[136] = 0;\nisoBandNextXLB[136] = 0;\nisoBandNextYLB[136] = -1;\nisoBandNextOLB[136] = 0;\nisoBandNextXLT[136] = 0;\nisoBandNextYLT[136] = -1;\nisoBandNextOLT[136] = 1;\nisoBandNextXTL[136] = 1;\nisoBandNextYTL[136] = 0;\nisoBandNextOTL[136] = 0;\nisoBandNextXTR[136] = 1;\nisoBandNextYTR[136] = 0;\nisoBandNextOTR[136] = 1;\n\nisoBandNextXRT[34] = 0;\nisoBandNextYRT[34] = -1;\nisoBandNextORT[34] = 0;\nisoBandNextXRB[34] = 0;\nisoBandNextYRB[34] = -1;\nisoBandNextORB[34] = 1;\nisoBandNextXBR[34] = 1;\nisoBandNextYBR[34] = 0;\nisoBandNextOBR[34] = 0;\nisoBandNextXBL[34] = 1;\nisoBandNextYBL[34] = 0;\nisoBandNextOBL[34] = 1;\nisoBandNextXLB[34] = 0;\nisoBandNextYLB[34] = 1;\nisoBandNextOLB[34] = 1;\nisoBandNextXLT[34] = 0;\nisoBandNextYLT[34] = 1;\nisoBandNextOLT[34] = 0;\nisoBandNextXTL[34] = -1;\nisoBandNextYTL[34] = 0;\nisoBandNextOTL[34] = 1;\nisoBandNextXTR[34] = -1;\nisoBandNextYTR[34] = 0;\nisoBandNextOTR[34] = 0;\n\nisoBandNextXRT[35] = 0;\nisoBandNextYRT[35] = 1;\nisoBandNextORT[35] = 1;\nisoBandNextXRB[35] = 0;\nisoBandNextYRB[35] = -1;\nisoBandNextORB[35] = 1;\nisoBandNextXBR[35] = 1;\nisoBandNextYBR[35] = 0;\nisoBandNextOBR[35] = 0;\nisoBandNextXBL[35] = -1;\nisoBandNextYBL[35] = 0;\nisoBandNextOBL[35] = 0;\nisoBandNextXLB[35] = 0;\nisoBandNextYLB[35] = -1;\nisoBandNextOLB[35] = 0;\nisoBandNextXLT[35] = 0;\nisoBandNextYLT[35] = 1;\nisoBandNextOLT[35] = 0;\nisoBandNextXTL[35] = -1;\nisoBandNextYTL[35] = 0;\nisoBandNextOTL[35] = 1;\nisoBandNextXTR[35] = 1;\nisoBandNextYTR[35] = 0;\nisoBandNextOTR[35] = 1;\n\n/* 6-sided cases */\nisoBandNextXRT[153] = 0;\nisoBandNextYRT[153] = 1;\nisoBandNextORT[153] = 1;\nisoBandNextXBL[153] = -1;\nisoBandNextYBL[153] = 0;\nisoBandNextOBL[153] = 0;\nisoBandNextXLB[153] = 0;\nisoBandNextYLB[153] = -1;\nisoBandNextOLB[153] = 0;\nisoBandNextXTR[153] = 1;\nisoBandNextYTR[153] = 0;\nisoBandNextOTR[153] = 1;\n\nisoBandNextXRB[102] = 0;\nisoBandNextYRB[102] = -1;\nisoBandNextORB[102] = 1;\nisoBandNextXBR[102] = 1;\nisoBandNextYBR[102] = 0;\nisoBandNextOBR[102] = 0;\nisoBandNextXLT[102] = 0;\nisoBandNextYLT[102] = 1;\nisoBandNextOLT[102] = 0;\nisoBandNextXTL[102] = -1;\nisoBandNextYTL[102] = 0;\nisoBandNextOTL[102] = 1;\n\nisoBandNextXRT[155] = 0;\nisoBandNextYRT[155] = -1;\nisoBandNextORT[155] = 0;\nisoBandNextXBL[155] = 1;\nisoBandNextYBL[155] = 0;\nisoBandNextOBL[155] = 1;\nisoBandNextXLB[155] = 0;\nisoBandNextYLB[155] = 1;\nisoBandNextOLB[155] = 1;\nisoBandNextXTR[155] = -1;\nisoBandNextYTR[155] = 0;\nisoBandNextOTR[155] = 0;\n\nisoBandNextXRB[103] = 0;\nisoBandNextYRB[103] = 1;\nisoBandNextORB[103] = 0;\nisoBandNextXBR[103] = -1;\nisoBandNextYBR[103] = 0;\nisoBandNextOBR[103] = 1;\nisoBandNextXLT[103] = 0;\nisoBandNextYLT[103] = -1;\nisoBandNextOLT[103] = 1;\nisoBandNextXTL[103] = 1;\nisoBandNextYTL[103] = 0;\nisoBandNextOTL[103] = 0;\n\n/* 7-sided cases */\nisoBandNextXRT[152] = 0;\nisoBandNextYRT[152] = 1;\nisoBandNextORT[152] = 1;\nisoBandNextXBR[152] = -1;\nisoBandNextYBR[152] = 0;\nisoBandNextOBR[152] = 1;\nisoBandNextXBL[152] = -1;\nisoBandNextYBL[152] = 0;\nisoBandNextOBL[152] = 0;\nisoBandNextXLB[152] = 0;\nisoBandNextYLB[152] = -1;\nisoBandNextOLB[152] = 0;\nisoBandNextXLT[152] = 0;\nisoBandNextYLT[152] = -1;\nisoBandNextOLT[152] = 1;\nisoBandNextXTR[152] = 1;\nisoBandNextYTR[152] = 0;\nisoBandNextOTR[152] = 1;\n\nisoBandNextXRT[156] = 0;\nisoBandNextYRT[156] = -1;\nisoBandNextORT[156] = 1;\nisoBandNextXBR[156] = 1;\nisoBandNextYBR[156] = 0;\nisoBandNextOBR[156] = 1;\nisoBandNextXBL[156] = -1;\nisoBandNextYBL[156] = 0;\nisoBandNextOBL[156] = 0;\nisoBandNextXLB[156] = 0;\nisoBandNextYLB[156] = -1;\nisoBandNextOLB[156] = 0;\nisoBandNextXLT[156] = 0;\nisoBandNextYLT[156] = 1;\nisoBandNextOLT[156] = 1;\nisoBandNextXTR[156] = -1;\nisoBandNextYTR[156] = 0;\nisoBandNextOTR[156] = 1;\n\nisoBandNextXRT[137] = 0;\nisoBandNextYRT[137] = 1;\nisoBandNextORT[137] = 1;\nisoBandNextXRB[137] = 0;\nisoBandNextYRB[137] = 1;\nisoBandNextORB[137] = 0;\nisoBandNextXBL[137] = -1;\nisoBandNextYBL[137] = 0;\nisoBandNextOBL[137] = 0;\nisoBandNextXLB[137] = 0;\nisoBandNextYLB[137] = -1;\nisoBandNextOLB[137] = 0;\nisoBandNextXTL[137] = 1;\nisoBandNextYTL[137] = 0;\nisoBandNextOTL[137] = 0;\nisoBandNextXTR[137] = 1;\nisoBandNextYTR[137] = 0;\nisoBandNextOTR[137] = 1;\n\nisoBandNextXRT[139] = 0;\nisoBandNextYRT[139] = 1;\nisoBandNextORT[139] = 1;\nisoBandNextXRB[139] = 0;\nisoBandNextYRB[139] = -1;\nisoBandNextORB[139] = 0;\nisoBandNextXBL[139] = 1;\nisoBandNextYBL[139] = 0;\nisoBandNextOBL[139] = 0;\nisoBandNextXLB[139] = 0;\nisoBandNextYLB[139] = 1;\nisoBandNextOLB[139] = 0;\nisoBandNextXTL[139] = -1;\nisoBandNextYTL[139] = 0;\nisoBandNextOTL[139] = 0;\nisoBandNextXTR[139] = 1;\nisoBandNextYTR[139] = 0;\nisoBandNextOTR[139] = 1;\n\nisoBandNextXRT[98] = 0;\nisoBandNextYRT[98] = -1;\nisoBandNextORT[98] = 0;\nisoBandNextXRB[98] = 0;\nisoBandNextYRB[98] = -1;\nisoBandNextORB[98] = 1;\nisoBandNextXBR[98] = 1;\nisoBandNextYBR[98] = 0;\nisoBandNextOBR[98] = 0;\nisoBandNextXBL[98] = 1;\nisoBandNextYBL[98] = 0;\nisoBandNextOBL[98] = 1;\nisoBandNextXLT[98] = 0;\nisoBandNextYLT[98] = 1;\nisoBandNextOLT[98] = 0;\nisoBandNextXTL[98] = -1;\nisoBandNextYTL[98] = 0;\nisoBandNextOTL[98] = 1;\n\nisoBandNextXRT[99] = 0;\nisoBandNextYRT[99] = 1;\nisoBandNextORT[99] = 0;\nisoBandNextXRB[99] = 0;\nisoBandNextYRB[99] = -1;\nisoBandNextORB[99] = 1;\nisoBandNextXBR[99] = 1;\nisoBandNextYBR[99] = 0;\nisoBandNextOBR[99] = 0;\nisoBandNextXBL[99] = -1;\nisoBandNextYBL[99] = 0;\nisoBandNextOBL[99] = 1;\nisoBandNextXLT[99] = 0;\nisoBandNextYLT[99] = -1;\nisoBandNextOLT[99] = 0;\nisoBandNextXTL[99] = 1;\nisoBandNextYTL[99] = 0;\nisoBandNextOTL[99] = 1;\n\nisoBandNextXRB[38] = 0;\nisoBandNextYRB[38] = -1;\nisoBandNextORB[38] = 1;\nisoBandNextXBR[38] = 1;\nisoBandNextYBR[38] = 0;\nisoBandNextOBR[38] = 0;\nisoBandNextXLB[38] = 0;\nisoBandNextYLB[38] = 1;\nisoBandNextOLB[38] = 1;\nisoBandNextXLT[38] = 0;\nisoBandNextYLT[38] = 1;\nisoBandNextOLT[38] = 0;\nisoBandNextXTL[38] = -1;\nisoBandNextYTL[38] = 0;\nisoBandNextOTL[38] = 1;\nisoBandNextXTR[38] = -1;\nisoBandNextYTR[38] = 0;\nisoBandNextOTR[38] = 0;\n\nisoBandNextXRB[39] = 0;\nisoBandNextYRB[39] = 1;\nisoBandNextORB[39] = 1;\nisoBandNextXBR[39] = -1;\nisoBandNextYBR[39] = 0;\nisoBandNextOBR[39] = 0;\nisoBandNextXLB[39] = 0;\nisoBandNextYLB[39] = -1;\nisoBandNextOLB[39] = 1;\nisoBandNextXLT[39] = 0;\nisoBandNextYLT[39] = 1;\nisoBandNextOLT[39] = 0;\nisoBandNextXTL[39] = -1;\nisoBandNextYTL[39] = 0;\nisoBandNextOTL[39] = 1;\nisoBandNextXTR[39] = 1;\nisoBandNextYTR[39] = 0;\nisoBandNextOTR[39] = 0;\n\n/*\n  Define helper functions for the polygon_table\n  */\n\n/* triangle cases */\nvar p00 = function (cell) {\n  return [\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n  ];\n};\nvar p01 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n  ];\n};\nvar p02 = function (cell) {\n  return [\n    [cell.topright, 1],\n    [1, 1],\n    [1, cell.righttop],\n  ];\n};\nvar p03 = function (cell) {\n  return [\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* trapezoid cases */\nvar p04 = function (cell) {\n  return [\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n  ];\n};\nvar p05 = function (cell) {\n  return [\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n  ];\n};\nvar p06 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\nvar p07 = function (cell) {\n  return [\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* rectangle cases */\nvar p08 = function (cell) {\n  return [\n    [0, 0],\n    [0, cell.leftbottom],\n    [1, cell.rightbottom],\n    [1, 0],\n  ];\n};\nvar p09 = function (cell) {\n  return [\n    [1, 0],\n    [cell.bottomright, 0],\n    [cell.topright, 1],\n    [1, 1],\n  ];\n};\nvar p10 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [0, cell.lefttop],\n    [0, 1],\n  ];\n};\nvar p11 = function (cell) {\n  return [\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\nvar p12 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n  ];\n};\nvar p13 = function (cell) {\n  return [\n    [cell.topleft, 1],\n    [cell.topright, 1],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n  ];\n};\n/* square case */\nvar p14 = function () {\n  return [\n    [0, 0],\n    [0, 1],\n    [1, 1],\n    [1, 0],\n  ];\n};\n/* pentagon cases */\nvar p15 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1211 || 1011 */\nvar p16 = function (cell) {\n  return [\n    [cell.topright, 1],\n    [1, 1],\n    [1, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n  ];\n};\n/* 2111 || 0111 */\nvar p17 = function (cell) {\n  return [\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [1, 1],\n  ];\n};\n/* 1112 || 1110 */\nvar p18 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, 1],\n  ];\n};\n/* 1121 || 1101 */\nvar p19 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1200 || 1022 */\nvar p20 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [cell.topright, 1],\n  ];\n};\n/* 0120 || 2102 */\nvar p21 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n  ];\n};\n/* 0012 || 2210 */\nvar p22 = function (cell) {\n  return [\n    [cell.topright, 1],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topleft, 1],\n  ];\n};\n/* 2001 || 0221 */\nvar p23 = function (cell) {\n  return [\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1002 || 1220 */\nvar p24 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topright, 1],\n  ];\n};\n/* 2100 || 0122 */\nvar p25 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* 0210 || 2012 */\nvar p26 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n  ];\n};\n/* 0021 || 2201 */\n/*hexagon cases */\nvar p27 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* 0211 || 2011 */\nvar p28 = function (cell) {\n  return [\n    [1, 1],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topright, 1],\n  ];\n};\n/* 2110 || 0112 */\nvar p29 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.lefttop],\n    [0, 1],\n  ];\n};\n/* 1102 || 1120 */\nvar p30 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1021 || 1201 */\nvar p31 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topright, 1],\n  ];\n};\n/* 2101 || 0121 */\nvar p32 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1012 || 1210 */\n/* 8-sided cases */\nvar p33 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* flipped == 1 state for 0202 and 2020 */\n/* 6-sided cases */\nvar p34 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topright, 1],\n  ];\n};\n/* 0101 with flipped == 1 || 2121 with flipped == 1 */\nvar p35 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1010 with flipped == 1 || 1212 with flipped == 1 */\n/* 7-sided cases */\nvar p36 = function (cell) {\n  return [\n    [1, 1],\n    [1, cell.righttop],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topright, 1],\n  ];\n};\n/* 2120 with flipped == 1 || 0102 with flipped == 1 */\nvar p37 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomleft, 0],\n    [0, 0],\n    [0, cell.leftbottom],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* 2021 with flipped == 1 || 0201 with flipped == 1 */\nvar p38 = function (cell) {\n  return [\n    [1, cell.righttop],\n    [1, cell.rightbottom],\n    [cell.bottomright, 0],\n    [cell.bottomleft, 0],\n    [0, cell.lefttop],\n    [0, 1],\n    [cell.topleft, 1],\n  ];\n};\n/* 1202 with flipped == 1 || 1020 with flipped == 1 */\nvar p39 = function (cell) {\n  return [\n    [1, cell.rightbottom],\n    [1, 0],\n    [cell.bottomright, 0],\n    [0, cell.leftbottom],\n    [0, cell.lefttop],\n    [cell.topleft, 1],\n    [cell.topright, 1],\n  ];\n};\n/* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n/*\n  The lookup tables for edge number given the polygon\n  is entered at a specific location\n*/\n\nvar isoBandEdgeRT = [];\nvar isoBandEdgeRB = [];\nvar isoBandEdgeBR = [];\nvar isoBandEdgeBL = [];\nvar isoBandEdgeLB = [];\nvar isoBandEdgeLT = [];\nvar isoBandEdgeTL = [];\nvar isoBandEdgeTR = [];\n\n/* triangle cases */\nisoBandEdgeBL[1] = isoBandEdgeLB[1] = 18;\nisoBandEdgeBL[169] = isoBandEdgeLB[169] = 18;\nisoBandEdgeBR[4] = isoBandEdgeRB[4] = 12;\nisoBandEdgeBR[166] = isoBandEdgeRB[166] = 12;\nisoBandEdgeRT[16] = isoBandEdgeTR[16] = 4;\nisoBandEdgeRT[154] = isoBandEdgeTR[154] = 4;\nisoBandEdgeLT[64] = isoBandEdgeTL[64] = 22;\nisoBandEdgeLT[106] = isoBandEdgeTL[106] = 22;\n\n/* trapezoid cases */\nisoBandEdgeBR[2] = isoBandEdgeLT[2] = 17;\nisoBandEdgeBL[2] = isoBandEdgeLB[2] = 18;\nisoBandEdgeBR[168] = isoBandEdgeLT[168] = 17;\nisoBandEdgeBL[168] = isoBandEdgeLB[168] = 18;\nisoBandEdgeRT[8] = isoBandEdgeBL[8] = 9;\nisoBandEdgeRB[8] = isoBandEdgeBR[8] = 12;\nisoBandEdgeRT[162] = isoBandEdgeBL[162] = 9;\nisoBandEdgeRB[162] = isoBandEdgeBR[162] = 12;\nisoBandEdgeRT[32] = isoBandEdgeTR[32] = 4;\nisoBandEdgeRB[32] = isoBandEdgeTL[32] = 1;\nisoBandEdgeRT[138] = isoBandEdgeTR[138] = 4;\nisoBandEdgeRB[138] = isoBandEdgeTL[138] = 1;\nisoBandEdgeLB[128] = isoBandEdgeTR[128] = 21;\nisoBandEdgeLT[128] = isoBandEdgeTL[128] = 22;\nisoBandEdgeLB[42] = isoBandEdgeTR[42] = 21;\nisoBandEdgeLT[42] = isoBandEdgeTL[42] = 22;\n\n/* rectangle cases */\nisoBandEdgeRB[5] = isoBandEdgeLB[5] = 14;\nisoBandEdgeRB[165] = isoBandEdgeLB[165] = 14;\nisoBandEdgeBR[20] = isoBandEdgeTR[20] = 6;\nisoBandEdgeBR[150] = isoBandEdgeTR[150] = 6;\nisoBandEdgeRT[80] = isoBandEdgeLT[80] = 11;\nisoBandEdgeRT[90] = isoBandEdgeLT[90] = 11;\nisoBandEdgeBL[65] = isoBandEdgeTL[65] = 3;\nisoBandEdgeBL[105] = isoBandEdgeTL[105] = 3;\nisoBandEdgeRT[160] = isoBandEdgeLT[160] = 11;\nisoBandEdgeRB[160] = isoBandEdgeLB[160] = 14;\nisoBandEdgeRT[10] = isoBandEdgeLT[10] = 11;\nisoBandEdgeRB[10] = isoBandEdgeLB[10] = 14;\nisoBandEdgeBR[130] = isoBandEdgeTR[130] = 6;\nisoBandEdgeBL[130] = isoBandEdgeTL[130] = 3;\nisoBandEdgeBR[40] = isoBandEdgeTR[40] = 6;\nisoBandEdgeBL[40] = isoBandEdgeTL[40] = 3;\n\n/* pentagon cases */\nisoBandEdgeRB[101] = isoBandEdgeTL[101] = 1;\nisoBandEdgeRB[69] = isoBandEdgeTL[69] = 1;\nisoBandEdgeLB[149] = isoBandEdgeTR[149] = 21;\nisoBandEdgeLB[21] = isoBandEdgeTR[21] = 21;\nisoBandEdgeBR[86] = isoBandEdgeLT[86] = 17;\nisoBandEdgeBR[84] = isoBandEdgeLT[84] = 17;\nisoBandEdgeRT[89] = isoBandEdgeBL[89] = 9;\nisoBandEdgeRT[81] = isoBandEdgeBL[81] = 9;\nisoBandEdgeRT[96] = isoBandEdgeTL[96] = 0;\nisoBandEdgeRB[96] = isoBandEdgeLT[96] = 15;\nisoBandEdgeRT[74] = isoBandEdgeTL[74] = 0;\nisoBandEdgeRB[74] = isoBandEdgeLT[74] = 15;\nisoBandEdgeRT[24] = isoBandEdgeBR[24] = 8;\nisoBandEdgeBL[24] = isoBandEdgeTR[24] = 7;\nisoBandEdgeRT[146] = isoBandEdgeBR[146] = 8;\nisoBandEdgeBL[146] = isoBandEdgeTR[146] = 7;\nisoBandEdgeRB[6] = isoBandEdgeLT[6] = 15;\nisoBandEdgeBR[6] = isoBandEdgeLB[6] = 16;\nisoBandEdgeRB[164] = isoBandEdgeLT[164] = 15;\nisoBandEdgeBR[164] = isoBandEdgeLB[164] = 16;\nisoBandEdgeBL[129] = isoBandEdgeTR[129] = 7;\nisoBandEdgeLB[129] = isoBandEdgeTL[129] = 20;\nisoBandEdgeBL[41] = isoBandEdgeTR[41] = 7;\nisoBandEdgeLB[41] = isoBandEdgeTL[41] = 20;\nisoBandEdgeBR[66] = isoBandEdgeTL[66] = 2;\nisoBandEdgeBL[66] = isoBandEdgeLT[66] = 19;\nisoBandEdgeBR[104] = isoBandEdgeTL[104] = 2;\nisoBandEdgeBL[104] = isoBandEdgeLT[104] = 19;\nisoBandEdgeRT[144] = isoBandEdgeLB[144] = 10;\nisoBandEdgeLT[144] = isoBandEdgeTR[144] = 23;\nisoBandEdgeRT[26] = isoBandEdgeLB[26] = 10;\nisoBandEdgeLT[26] = isoBandEdgeTR[26] = 23;\nisoBandEdgeRB[36] = isoBandEdgeTR[36] = 5;\nisoBandEdgeBR[36] = isoBandEdgeTL[36] = 2;\nisoBandEdgeRB[134] = isoBandEdgeTR[134] = 5;\nisoBandEdgeBR[134] = isoBandEdgeTL[134] = 2;\nisoBandEdgeRT[9] = isoBandEdgeLB[9] = 10;\nisoBandEdgeRB[9] = isoBandEdgeBL[9] = 13;\nisoBandEdgeRT[161] = isoBandEdgeLB[161] = 10;\nisoBandEdgeRB[161] = isoBandEdgeBL[161] = 13;\n\n/* hexagon cases */\nisoBandEdgeRB[37] = isoBandEdgeTR[37] = 5;\nisoBandEdgeLB[37] = isoBandEdgeTL[37] = 20;\nisoBandEdgeRB[133] = isoBandEdgeTR[133] = 5;\nisoBandEdgeLB[133] = isoBandEdgeTL[133] = 20;\nisoBandEdgeBR[148] = isoBandEdgeLB[148] = 16;\nisoBandEdgeLT[148] = isoBandEdgeTR[148] = 23;\nisoBandEdgeBR[22] = isoBandEdgeLB[22] = 16;\nisoBandEdgeLT[22] = isoBandEdgeTR[22] = 23;\nisoBandEdgeRT[82] = isoBandEdgeBR[82] = 8;\nisoBandEdgeBL[82] = isoBandEdgeLT[82] = 19;\nisoBandEdgeRT[88] = isoBandEdgeBR[88] = 8;\nisoBandEdgeBL[88] = isoBandEdgeLT[88] = 19;\nisoBandEdgeRT[73] = isoBandEdgeTL[73] = 0;\nisoBandEdgeRB[73] = isoBandEdgeBL[73] = 13;\nisoBandEdgeRT[97] = isoBandEdgeTL[97] = 0;\nisoBandEdgeRB[97] = isoBandEdgeBL[97] = 13;\nisoBandEdgeRT[145] = isoBandEdgeBL[145] = 9;\nisoBandEdgeLB[145] = isoBandEdgeTR[145] = 21;\nisoBandEdgeRT[25] = isoBandEdgeBL[25] = 9;\nisoBandEdgeLB[25] = isoBandEdgeTR[25] = 21;\nisoBandEdgeRB[70] = isoBandEdgeTL[70] = 1;\nisoBandEdgeBR[70] = isoBandEdgeLT[70] = 17;\nisoBandEdgeRB[100] = isoBandEdgeTL[100] = 1;\nisoBandEdgeBR[100] = isoBandEdgeLT[100] = 17;\n\n/* 8-sided cases */\nisoBandEdgeRT[34] = isoBandEdgeBL[34] = 9;\nisoBandEdgeRB[34] = isoBandEdgeBR[34] = 12;\nisoBandEdgeLB[34] = isoBandEdgeTR[34] = 21;\nisoBandEdgeLT[34] = isoBandEdgeTL[34] = 22;\nisoBandEdgeRT[136] = isoBandEdgeTR[136] = 4;\nisoBandEdgeRB[136] = isoBandEdgeTL[136] = 1;\nisoBandEdgeBR[136] = isoBandEdgeLT[136] = 17;\nisoBandEdgeBL[136] = isoBandEdgeLB[136] = 18;\nisoBandEdgeRT[35] = isoBandEdgeTR[35] = 4;\nisoBandEdgeRB[35] = isoBandEdgeBR[35] = 12;\nisoBandEdgeBL[35] = isoBandEdgeLB[35] = 18;\nisoBandEdgeLT[35] = isoBandEdgeTL[35] = 22;\n\n/* 6-sided cases */\nisoBandEdgeRT[153] = isoBandEdgeTR[153] = 4;\nisoBandEdgeBL[153] = isoBandEdgeLB[153] = 18;\nisoBandEdgeRB[102] = isoBandEdgeBR[102] = 12;\nisoBandEdgeLT[102] = isoBandEdgeTL[102] = 22;\nisoBandEdgeRT[155] = isoBandEdgeBL[155] = 9;\nisoBandEdgeLB[155] = isoBandEdgeTR[155] = 23;\nisoBandEdgeRB[103] = isoBandEdgeTL[103] = 1;\nisoBandEdgeBR[103] = isoBandEdgeLT[103] = 17;\n\n/* 7-sided cases */\nisoBandEdgeRT[152] = isoBandEdgeTR[152] = 4;\nisoBandEdgeBR[152] = isoBandEdgeLT[152] = 17;\nisoBandEdgeBL[152] = isoBandEdgeLB[152] = 18;\nisoBandEdgeRT[156] = isoBandEdgeBR[156] = 8;\nisoBandEdgeBL[156] = isoBandEdgeLB[156] = 18;\nisoBandEdgeLT[156] = isoBandEdgeTR[156] = 23;\nisoBandEdgeRT[137] = isoBandEdgeTR[137] = 4;\nisoBandEdgeRB[137] = isoBandEdgeTL[137] = 1;\nisoBandEdgeBL[137] = isoBandEdgeLB[137] = 18;\nisoBandEdgeRT[139] = isoBandEdgeTR[139] = 4;\nisoBandEdgeRB[139] = isoBandEdgeBL[139] = 13;\nisoBandEdgeLB[139] = isoBandEdgeTL[139] = 20;\nisoBandEdgeRT[98] = isoBandEdgeBL[98] = 9;\nisoBandEdgeRB[98] = isoBandEdgeBR[98] = 12;\nisoBandEdgeLT[98] = isoBandEdgeTL[98] = 22;\nisoBandEdgeRT[99] = isoBandEdgeTL[99] = 0;\nisoBandEdgeRB[99] = isoBandEdgeBR[99] = 12;\nisoBandEdgeBL[99] = isoBandEdgeLT[99] = 19;\nisoBandEdgeRB[38] = isoBandEdgeBR[38] = 12;\nisoBandEdgeLB[38] = isoBandEdgeTR[38] = 21;\nisoBandEdgeLT[38] = isoBandEdgeTL[38] = 22;\nisoBandEdgeRB[39] = isoBandEdgeTR[39] = 5;\nisoBandEdgeBR[39] = isoBandEdgeLB[39] = 16;\nisoBandEdgeLT[39] = isoBandEdgeTL[39] = 22;\n\n/*\n  The lookup tables for all different polygons that\n  may appear within a grid cell\n*/\n\nvar polygon_table = [];\n\n/* triangle cases */\npolygon_table[1] = polygon_table[169] = p00; /* 2221 || 0001 */\npolygon_table[4] = polygon_table[166] = p01; /* 2212 || 0010 */\npolygon_table[16] = polygon_table[154] = p02; /* 2122 || 0100 */\npolygon_table[64] = polygon_table[106] = p03; /* 1222 || 1000 */\n\n/* trapezoid cases */\npolygon_table[168] = polygon_table[2] = p04; /* 2220 || 0002 */\npolygon_table[162] = polygon_table[8] = p05; /* 2202 || 0020 */\npolygon_table[138] = polygon_table[32] = p06; /* 2022 || 0200 */\npolygon_table[42] = polygon_table[128] = p07; /* 0222 || 2000 */\n\n/* rectangle cases */\npolygon_table[5] = polygon_table[165] = p08; /* 0011 || 2211 */\npolygon_table[20] = polygon_table[150] = p09; /* 0110 || 2112 */\npolygon_table[80] = polygon_table[90] = p10; /* 1100 || 1122 */\npolygon_table[65] = polygon_table[105] = p11; /* 1001 || 1221 */\npolygon_table[160] = polygon_table[10] = p12; /* 2200 || 0022 */\npolygon_table[130] = polygon_table[40] = p13; /* 2002 || 0220 */\n\n/* square case */\npolygon_table[85] = p14; /* 1111 */\n\n/* pentagon cases */\npolygon_table[101] = polygon_table[69] = p15; /* 1211 || 1011 */\npolygon_table[149] = polygon_table[21] = p16; /* 2111 || 0111 */\npolygon_table[86] = polygon_table[84] = p17; /* 1112 || 1110 */\npolygon_table[89] = polygon_table[81] = p18; /* 1121 || 1101 */\npolygon_table[96] = polygon_table[74] = p19; /* 1200 || 1022 */\npolygon_table[24] = polygon_table[146] = p20; /* 0120 || 2102 */\npolygon_table[6] = polygon_table[164] = p21; /* 0012 || 2210 */\npolygon_table[129] = polygon_table[41] = p22; /* 2001 || 0221 */\npolygon_table[66] = polygon_table[104] = p23; /* 1002 || 1220 */\npolygon_table[144] = polygon_table[26] = p24; /* 2100 || 0122 */\npolygon_table[36] = polygon_table[134] = p25; /* 0210 || 2012 */\npolygon_table[9] = polygon_table[161] = p26; /* 0021 || 2201 */\n\n/* hexagon cases */\npolygon_table[37] = polygon_table[133] = p27; /* 0211 || 2011 */\npolygon_table[148] = polygon_table[22] = p28; /* 2110 || 0112 */\npolygon_table[82] = polygon_table[88] = p29; /* 1102 || 1120 */\npolygon_table[73] = polygon_table[97] = p30; /* 1021 || 1201 */\npolygon_table[145] = polygon_table[25] = p31; /* 2101 || 0121 */\npolygon_table[70] = polygon_table[100] = p32; /* 1012 || 1210 */\n\n/* 8-sided cases */\npolygon_table[34] = function (c) {\n  return [p07(c), p05(c)];\n}; /* 0202 || 2020 with flipped == 0 */\npolygon_table[35] = p33; /* flipped == 1 state for 0202 and 2020 */\npolygon_table[136] = function (c) {\n  return [p06(c), p04(c)];\n}; /* 2020 || 0202 with flipped == 0 */\n\n/* 6-sided cases */\npolygon_table[153] = function (c) {\n  return [p02(c), p00(c)];\n}; /* 0101 with flipped == 0 || 2121 with flipped == 2 */\npolygon_table[102] = function (c) {\n  return [p01(c), p03(c)];\n}; /* 1010 with flipped == 0 || 1212 with flipped == 2 */\npolygon_table[155] = p34; /* 0101 with flipped == 1 || 2121 with flipped == 1 */\npolygon_table[103] = p35; /* 1010 with flipped == 1 || 1212 with flipped == 1 */\n\n/* 7-sided cases */\npolygon_table[152] = function (c) {\n  return [p02(c), p04(c)];\n}; /* 2120 with flipped == 2 || 0102 with flipped == 0 */\npolygon_table[156] = p36; /* 2120 with flipped == 1 || 0102 with flipped == 1 */\npolygon_table[137] = function (c) {\n  return [p06(c), p00(c)];\n}; /* 2021 with flipped == 2 || 0201 with flipped == 0 */\npolygon_table[139] = p37; /* 2021 with flipped == 1 || 0201 with flipped == 1 */\npolygon_table[98] = function (c) {\n  return [p05(c), p03(c)];\n}; /* 1202 with flipped == 2 || 1020 with flipped == 0 */\npolygon_table[99] = p38; /* 1202 with flipped == 1 || 1020 with flipped == 1 */\npolygon_table[38] = function (c) {\n  return [p01(c), p07(c)];\n}; /* 0212 with flipped == 2 || 2010 with flipped == 0 */\npolygon_table[39] = p39; /* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n/*\n####################################\nSome small helper functions\n####################################\n*/\n\n/* assume that x1 == 1 &&  x0 == 0 */\nfunction interpolateX(y, y0, y1) {\n  return (y - y0) / (y1 - y0);\n}\n\nfunction isArray(myArray) {\n  return myArray.constructor.toString().indexOf(\"Array\") > -1;\n}\n\n/*\n####################################\nBelow is the actual Marching Squares implementation\n####################################\n*/\n\nfunction computeBandGrid(data, minV, bandwidth) {\n  var rows = data.length - 1;\n  var cols = data[0].length - 1;\n  var BandGrid = { rows: rows, cols: cols, cells: [] };\n\n  var maxV = minV + Math.abs(bandwidth);\n\n  for (var j = 0; j < rows; ++j) {\n    BandGrid.cells[j] = [];\n    for (var i = 0; i < cols; ++i) {\n      /*  compose the 4-trit corner representation */\n      var cval = 0;\n\n      var tl = data[j + 1][i];\n      var tr = data[j + 1][i + 1];\n      var br = data[j][i + 1];\n      var bl = data[j][i];\n\n      if (isNaN(tl) || isNaN(tr) || isNaN(br) || isNaN(bl)) {\n        continue;\n      }\n\n      cval |= tl < minV ? 0 : tl > maxV ? 128 : 64;\n      cval |= tr < minV ? 0 : tr > maxV ? 32 : 16;\n      cval |= br < minV ? 0 : br > maxV ? 8 : 4;\n      cval |= bl < minV ? 0 : bl > maxV ? 2 : 1;\n\n      var cval_real = +cval;\n\n      /* resolve ambiguity via averaging */\n      var flipped = 0;\n      if (\n        cval === 17 /* 0101 */ ||\n        cval === 18 /* 0102 */ ||\n        cval === 33 /* 0201 */ ||\n        cval === 34 /* 0202 */ ||\n        cval === 38 /* 0212 */ ||\n        cval === 68 /* 1010 */ ||\n        cval === 72 /* 1020 */ ||\n        cval === 98 /* 1202 */ ||\n        cval === 102 /* 1212 */ ||\n        cval === 132 /* 2010 */ ||\n        cval === 136 /* 2020 */ ||\n        cval === 137 /* 2021 */ ||\n        cval === 152 /* 2120 */ ||\n        cval === 153 /* 2121 */\n      ) {\n        var average = (tl + tr + br + bl) / 4;\n        /* set flipped state */\n        flipped = average > maxV ? 2 : average < minV ? 0 : 1;\n\n        /* adjust cval for flipped cases */\n\n        /* 8-sided cases */\n        if (cval === 34) {\n          if (flipped === 1) {\n            cval = 35;\n          } else if (flipped === 0) {\n            cval = 136;\n          }\n        } else if (cval === 136) {\n          if (flipped === 1) {\n            cval = 35;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 34;\n          }\n        } else if (cval === 17) {\n          /* 6-sided polygon cases */\n          if (flipped === 1) {\n            cval = 155;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 153;\n          }\n        } else if (cval === 68) {\n          if (flipped === 1) {\n            cval = 103;\n            flipped = 4;\n          } else if (flipped === 0) {\n            cval = 102;\n          }\n        } else if (cval === 153) {\n          if (flipped === 1) cval = 155;\n        } else if (cval === 102) {\n          if (flipped === 1) cval = 103;\n        } else if (cval === 152) {\n          /* 7-sided polygon cases */\n          if (flipped < 2) {\n            cval = 156;\n            flipped = 1;\n          }\n        } else if (cval === 137) {\n          if (flipped < 2) {\n            cval = 139;\n            flipped = 1;\n          }\n        } else if (cval === 98) {\n          if (flipped < 2) {\n            cval = 99;\n            flipped = 1;\n          }\n        } else if (cval === 38) {\n          if (flipped < 2) {\n            cval = 39;\n            flipped = 1;\n          }\n        } else if (cval === 18) {\n          if (flipped > 0) {\n            cval = 156;\n            flipped = 4;\n          } else {\n            cval = 152;\n          }\n        } else if (cval === 33) {\n          if (flipped > 0) {\n            cval = 139;\n            flipped = 4;\n          } else {\n            cval = 137;\n          }\n        } else if (cval === 72) {\n          if (flipped > 0) {\n            cval = 99;\n            flipped = 4;\n          } else {\n            cval = 98;\n          }\n        } else if (cval === 132) {\n          if (flipped > 0) {\n            cval = 39;\n            flipped = 4;\n          } else {\n            cval = 38;\n          }\n        }\n      }\n\n      /* add cell to BandGrid if it contains at least one polygon-side */\n      if (cval != 0 && cval != 170) {\n        var topleft,\n          topright,\n          bottomleft,\n          bottomright,\n          righttop,\n          rightbottom,\n          lefttop,\n          leftbottom;\n\n        topleft = topright = bottomleft = bottomright = righttop = rightbottom = lefttop = leftbottom = 0.5;\n\n        var edges = [];\n\n        /* do interpolation here */\n        /* 1st Triangles */\n        if (cval === 1) {\n          /* 0001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 169) {\n          /* 2221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 4) {\n          /* 0010 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = interpolateX(minV, bl, br);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 166) {\n          /* 2212 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 16) {\n          /* 0100 */\n          righttop = interpolateX(minV, br, tr);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 154) {\n          /* 2122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 64) {\n          /* 1000 */\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 106) {\n          /* 1222 */\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 168) {\n          /* 2nd Trapezoids */\n          /* 2220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 2) {\n          /* 0002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 162) {\n          /* 2202 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 8) {\n          /* 0020 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 138) {\n          /* 2022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 32) {\n          /* 0200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 42) {\n          /* 0222 */\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 128) {\n          /* 2000 */\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        }\n\n        /* 3rd rectangle cases */\n        if (cval === 5) {\n          /* 0011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 165) {\n          /* 2211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 20) {\n          /* 0110 */\n          bottomright = interpolateX(minV, bl, br);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 150) {\n          /* 2112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 80) {\n          /* 1100 */\n          righttop = interpolateX(minV, br, tr);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 90) {\n          /* 1122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n        } else if (cval === 65) {\n          /* 1001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 105) {\n          /* 1221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 160) {\n          /* 2200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 10) {\n          /* 0022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 130) {\n          /* 2002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 40) {\n          /* 0220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 101) {\n          /* 4th single pentagon cases */\n          /* 1211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 69) {\n          /* 1011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 149) {\n          /* 2111 */\n          leftbottom = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 21) {\n          /* 0111 */\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 86) {\n          /* 1112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 84) {\n          /* 1110 */\n          bottomright = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 89) {\n          /* 1121 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 81) {\n          /* 1101 */\n          righttop = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 96) {\n          /* 1200 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 74) {\n          /* 1022 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 24) {\n          /* 0120 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 146) {\n          /* 2102 */\n          righttop = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 6) {\n          /* 0012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 164) {\n          /* 2210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 129) {\n          /* 2001 */\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 41) {\n          /* 0221 */\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 66) {\n          /* 1002 */\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 104) {\n          /* 1220 */\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeTL[cval]);\n        } else if (cval === 144) {\n          /* 2100 */\n          righttop = interpolateX(minV, br, tr);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 26) {\n          /* 0122 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 36) {\n          /* 0210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 134) {\n          /* 2012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 9) {\n          /* 0021 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 161) {\n          /* 2201 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 37) {\n          /* 5th single hexagon cases */\n          /* 0211 */\n          rightbottom = interpolateX(maxV, br, tr);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topleft = interpolateX(minV, tl, tr);\n          topright = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 133) {\n          /* 2011 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topleft = 1 - interpolateX(maxV, tr, tl);\n          topright = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 148) {\n          /* 2110 */\n          bottomright = interpolateX(minV, bl, br);\n          leftbottom = interpolateX(minV, bl, tl);\n          lefttop = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 22) {\n          /* 0112 */\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          leftbottom = 1 - interpolateX(maxV, tl, bl);\n          lefttop = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 82) {\n          /* 1102 */\n          righttop = interpolateX(minV, br, tr);\n          bottomright = 1 - interpolateX(minV, br, bl);\n          bottomleft = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 88) {\n          /* 1120 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomright = interpolateX(maxV, bl, br);\n          bottomleft = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 73) {\n          /* 1021 */\n          righttop = 1 - interpolateX(minV, tr, br);\n          rightbottom = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 97) {\n          /* 1201 */\n          righttop = interpolateX(maxV, br, tr);\n          rightbottom = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n        } else if (cval === 145) {\n          /* 2101 */\n          righttop = interpolateX(minV, br, tr);\n          bottomleft = 1 - interpolateX(minV, br, bl);\n          leftbottom = interpolateX(maxV, bl, tl);\n          topright = 1 - interpolateX(maxV, tr, tl);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 25) {\n          /* 0121 */\n          righttop = 1 - interpolateX(maxV, tr, br);\n          bottomleft = interpolateX(maxV, bl, br);\n          leftbottom = 1 - interpolateX(minV, tl, bl);\n          topright = interpolateX(minV, tl, tr);\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 70) {\n          /* 1012 */\n          rightbottom = 1 - interpolateX(minV, tr, br);\n          bottomright = 1 - interpolateX(maxV, br, bl);\n          lefttop = 1 - interpolateX(maxV, tl, bl);\n          topleft = 1 - interpolateX(minV, tr, tl);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 100) {\n          /* 1210 */\n          rightbottom = interpolateX(maxV, br, tr);\n          bottomright = interpolateX(minV, bl, br);\n          lefttop = interpolateX(minV, bl, tl);\n          topleft = interpolateX(maxV, tl, tr);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 34) {\n          /* 8-sided cases */\n          /* 0202 || 2020 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 35) {\n          /* flipped == 1 state for 0202, and 2020 with flipped == 4*/\n          if (flipped === 4) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 136) {\n          /* 2020 || 0202 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 153) {\n          /* 6-sided polygon cases */\n          /* 0101 with flipped == 0 || 2121 with flipped == 2 */\n          if (flipped === 0) {\n            righttop = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 102) {\n          /* 1010 with flipped == 0 || 1212 with flipped == 2 */\n          if (flipped === 0) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 155) {\n          /* 0101 with flipped == 4 || 2121 with flipped == 1 */\n          if (flipped === 4) {\n            righttop = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 103) {\n          /* 1010 with flipped == 4 || 1212 with flipped == 1 */\n          if (flipped === 4) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n        } else if (cval === 152) {\n          /* 7-sided polygon cases */\n          /* 2120 with flipped == 2 || 0102 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 156) {\n          /* 2120 with flipped == 1 || 0102 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topright = interpolateX(minV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topright = 1 - interpolateX(maxV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 137) {\n          /* 2021 with flipped == 2 || 0201 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 139) {\n          /* 2021 with flipped == 1 || 0201 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomleft = 1 - interpolateX(minV, br, bl);\n            leftbottom = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          } else {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomleft = interpolateX(maxV, bl, br);\n            leftbottom = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n        } else if (cval === 98) {\n          /* 1202 with flipped == 2 || 1020 with flipped == 0 */\n          if (flipped === 0) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 99) {\n          /* 1202 with flipped == 1 || 1020 with flipped == 4 */\n          if (flipped === 4) {\n            righttop = 1 - interpolateX(minV, tr, br);\n            rightbottom = 1 - interpolateX(maxV, tr, br);\n            bottomright = interpolateX(maxV, bl, br);\n            bottomleft = interpolateX(minV, bl, br);\n            lefttop = interpolateX(minV, bl, tl);\n            topleft = 1 - interpolateX(minV, tr, tl);\n          } else {\n            righttop = interpolateX(maxV, br, tr);\n            rightbottom = interpolateX(minV, br, tr);\n            bottomright = 1 - interpolateX(minV, br, bl);\n            bottomleft = 1 - interpolateX(maxV, br, bl);\n            lefttop = 1 - interpolateX(maxV, tl, bl);\n            topleft = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRT[cval]);\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBL[cval]);\n        } else if (cval === 38) {\n          /* 0212 with flipped == 2 || 2010 with flipped == 0 */\n          if (flipped === 0) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeLB[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 39) {\n          /* 0212 with flipped == 1 || 2010 with flipped == 4 */\n          if (flipped === 4) {\n            rightbottom = 1 - interpolateX(minV, tr, br);\n            bottomright = interpolateX(minV, bl, br);\n            leftbottom = interpolateX(minV, bl, tl);\n            lefttop = interpolateX(maxV, bl, tl);\n            topleft = 1 - interpolateX(maxV, tr, tl);\n            topright = 1 - interpolateX(minV, tr, tl);\n          } else {\n            rightbottom = interpolateX(maxV, br, tr);\n            bottomright = 1 - interpolateX(maxV, br, bl);\n            leftbottom = 1 - interpolateX(maxV, tl, bl);\n            lefttop = 1 - interpolateX(minV, tl, bl);\n            topleft = interpolateX(minV, tl, tr);\n            topright = interpolateX(maxV, tl, tr);\n          }\n          edges.push(isoBandEdgeRB[cval]);\n          edges.push(isoBandEdgeBR[cval]);\n          edges.push(isoBandEdgeLT[cval]);\n        } else if (cval === 85) {\n          righttop = 1;\n          rightbottom = 0;\n          bottomright = 1;\n          bottomleft = 0;\n          leftbottom = 0;\n          lefttop = 1;\n          topleft = 0;\n          topright = 1;\n        }\n\n        if (\n          topleft < 0 ||\n          topleft > 1 ||\n          topright < 0 ||\n          topright > 1 ||\n          righttop < 0 ||\n          righttop > 1 ||\n          bottomright < 0 ||\n          bottomright > 1 ||\n          leftbottom < 0 ||\n          leftbottom > 1 ||\n          lefttop < 0 ||\n          lefttop > 1\n        ) {\n          console.log(\n            \"MarchingSquaresJS-isoBands: \" +\n              cval +\n              \" \" +\n              cval_real +\n              \" \" +\n              tl +\n              \",\" +\n              tr +\n              \",\" +\n              br +\n              \",\" +\n              bl +\n              \" \" +\n              flipped +\n              \" \" +\n              topleft +\n              \" \" +\n              topright +\n              \" \" +\n              righttop +\n              \" \" +\n              rightbottom +\n              \" \" +\n              bottomright +\n              \" \" +\n              bottomleft +\n              \" \" +\n              leftbottom +\n              \" \" +\n              lefttop\n          );\n        }\n\n        BandGrid.cells[j][i] = {\n          cval: cval,\n          cval_real: cval_real,\n          flipped: flipped,\n          topleft: topleft,\n          topright: topright,\n          righttop: righttop,\n          rightbottom: rightbottom,\n          bottomright: bottomright,\n          bottomleft: bottomleft,\n          leftbottom: leftbottom,\n          lefttop: lefttop,\n          edges: edges,\n        };\n      }\n    }\n  }\n\n  return BandGrid;\n}\n\nfunction BandGrid2AreaPaths(grid) {\n  var areas = [];\n  var rows = grid.rows;\n  var cols = grid.cols;\n  var currentPolygon = [];\n\n  for (var j = 0; j < rows; j++) {\n    for (var i = 0; i < cols; i++) {\n      if (\n        typeof grid.cells[j][i] !== \"undefined\" &&\n        grid.cells[j][i].edges.length > 0\n      ) {\n        /* trace back polygon path starting from this cell */\n\n        var cell = grid.cells[j][i];\n\n        /* get start coordinates */\n\n        var prev = getStartXY(cell),\n          next = null,\n          p = i,\n          q = j;\n\n        if (prev !== null) {\n          currentPolygon.push([prev.p[0] + p, prev.p[1] + q]);\n          //console.log(cell);\n          //console.log(\"coords: \" + (prev.p[0] + p) + \" \" + (prev.p[1] + q));\n        }\n\n        do {\n          //console.log(p + \",\" + q);\n          //console.log(grid.cells[q][p]);\n          //console.log(grid.cells[q][p].edges);\n          //console.log(\"from : \" + prev.x + \" \" + prev.y + \" \" + prev.o);\n\n          next = getExitXY(grid.cells[q][p], prev.x, prev.y, prev.o);\n          if (next !== null) {\n            //console.log(\"coords: \" + (next.p[0] + p) + \" \" + (next.p[1] + q));\n            currentPolygon.push([next.p[0] + p, next.p[1] + q]);\n            p += next.x;\n            q += next.y;\n            prev = next;\n          } else {\n            //console.log(\"getExitXY() returned null!\");\n            break;\n          }\n          //console.log(\"to : \" + next.x + \" \" + next.y + \" \" + next.o);\n          /* special case, where we've reached the grid boundaries */\n          if (\n            q < 0 ||\n            q >= rows ||\n            p < 0 ||\n            p >= cols ||\n            typeof grid.cells[q][p] === \"undefined\"\n          ) {\n            /* to create a closed path, we need to trace our way\n                arround the missing data, until we find an entry\n                point again\n            */\n\n            /* set back coordinates of current cell */\n            p -= next.x;\n            q -= next.y;\n\n            //console.log(\"reached boundary at \" + p + \" \" + q);\n\n            var missing = traceOutOfGridPath(\n              grid,\n              p,\n              q,\n              next.x,\n              next.y,\n              next.o\n            );\n            if (missing !== null) {\n              missing.path.forEach(function (pp) {\n                //console.log(\"coords: \" + (pp[0]) + \" \" + (pp[1]));\n                currentPolygon.push(pp);\n              });\n              p = missing.i;\n              q = missing.j;\n              prev = missing;\n            } else {\n              break;\n            }\n            //console.log(grid.cells[q][p]);\n          }\n        } while (\n          typeof grid.cells[q][p] !== \"undefined\" &&\n          grid.cells[q][p].edges.length > 0\n        );\n\n        areas.push(currentPolygon);\n        //console.log(\"next polygon\");\n        //console.log(currentPolygon);\n        currentPolygon = [];\n        if (grid.cells[j][i].edges.length > 0) i--;\n      }\n    }\n  }\n  return areas;\n}\n\nfunction traceOutOfGridPath(grid, i, j, d_x, d_y, d_o) {\n  var cell = grid.cells[j][i];\n  var cval = cell.cval_real;\n  var p = i + d_x,\n    q = j + d_y;\n  var path = [];\n  var closed = false;\n\n  while (!closed) {\n    //console.log(\"processing cell \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n    if (\n      typeof grid.cells[q] === \"undefined\" ||\n      typeof grid.cells[q][p] === \"undefined\"\n    ) {\n      //console.log(\"which is undefined\");\n      /* we can't move on, so we have to change direction to proceed further */\n\n      /* go back to previous cell */\n      q -= d_y;\n      p -= d_x;\n      cell = grid.cells[q][p];\n      cval = cell.cval_real;\n\n      /* check where we've left defined cells of the grid... */\n      if (d_y === -1) {\n        /* we came from top */\n        if (d_o === 0) {\n          /* exit left */\n          if (cval & Node3) {\n            /* lower left node is within range, so we move left */\n            path.push([p, q]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n          } else if (cval & Node2) {\n            /* lower right node is within range, so we move right */\n            path.push([p + 1, q]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n          } else {\n            /* close the path */\n            path.push([p + cell.bottomright, q]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 1;\n            closed = true;\n            break;\n          }\n        } else if (cval & Node3) {\n          path.push([p, q]);\n          d_x = -1;\n          d_y = 0;\n          d_o = 0;\n        } else if (cval & Node2) {\n          path.push([p + cell.bottomright, q]);\n          d_x = 0;\n          d_y = 1;\n          d_o = 1;\n          closed = true;\n          break;\n        } else {\n          path.push([p + cell.bottomleft, q]);\n          d_x = 0;\n          d_y = 1;\n          d_o = 0;\n          closed = true;\n          break;\n        }\n      } else if (d_y === 1) {\n        /* we came from bottom */\n        //console.log(\"we came from bottom and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          /* exit left */\n          if (cval & Node1) {\n            /* top right node is within range, so we move right */\n            path.push([p + 1, q + 1]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else if (!(cval & Node0)) {\n            /* found entry within same cell */\n            path.push([p + cell.topright, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          } else {\n            path.push([p + cell.topleft, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else if (cval & Node1) {\n          path.push([p + 1, q + 1]);\n          d_x = 1;\n          d_y = 0;\n          d_o = 1;\n        } else {\n          /* move right */\n          path.push([p + 1, q + 1]);\n          d_x = 1;\n          d_y = 0;\n          d_o = 1;\n          //console.log(\"wtf\");\n          //break;\n        }\n      } else if (d_x === -1) {\n        /* we came from right */\n        //console.log(\"we came from right and hit a non-existing cell at \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          //console.log(\"continue at bottom\");\n          if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n            //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n          } else if (!(cval & Node3)) {\n            /* there has to be an entry into the regular grid again! */\n            //console.log(\"exiting top\");\n            path.push([p, q + cell.lefttop]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n            closed = true;\n            break;\n          } else {\n            //console.log(\"exiting bottom\");\n            path.push([p, q + cell.leftbottom]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else {\n          //console.log(\"continue at top\");\n          if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n            //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n          } else {\n            /* */\n            console.log(\"MarchingSquaresJS-isoBands: wtf\");\n            break;\n          }\n        }\n      } else if (d_x === 1) {\n        /* we came from left */\n        //console.log(\"we came from left and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n        if (d_o === 0) {\n          /* exit bottom */\n          if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else {\n            path.push([p + 1, q + cell.rightbottom]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          }\n        } else {\n          /* exit top */\n          if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else if (!(cval & Node1)) {\n            path.push([p + 1, q + cell.rightbottom]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            break;\n          } else {\n            path.push([p + 1, q + cell.righttop]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 1;\n            break;\n          }\n        }\n      } else {\n        /* we came from the same cell */\n        console.log(\"MarchingSquaresJS-isoBands: we came from nowhere!\");\n        break;\n      }\n    } else {\n      /* try to find an entry into the regular grid again! */\n      cell = grid.cells[q][p];\n      cval = cell.cval_real;\n      //console.log(\"which is defined\");\n\n      if (d_x === -1) {\n        if (d_o === 0) {\n          /* try to go downwards */\n          if (\n            typeof grid.cells[q - 1] !== \"undefined\" &&\n            typeof grid.cells[q - 1][p] !== \"undefined\"\n          ) {\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else if (cval & Node3) {\n            /* proceed searching in x-direction */\n            //console.log(\"proceeding in x-direction!\");\n            path.push([p, q]);\n          } else {\n            /* we must have found an entry into the regular grid */\n            path.push([p + cell.bottomright, q]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 1;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          }\n        } else if (cval & Node0) {\n          /* proceed searchin in x-direction */\n          console.log(\"MarchingSquaresJS-isoBands: proceeding in x-direction!\");\n        } else {\n          /* we must have found an entry into the regular grid */\n          console.log(\n            \"MarchingSquaresJS-isoBands: found entry from top at \" + p + \",\" + q\n          );\n          break;\n        }\n      } else if (d_x === 1) {\n        if (d_o === 0) {\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        } else {\n          /* try to go upwards */\n          if (\n            typeof grid.cells[q + 1] !== \"undefined\" &&\n            typeof grid.cells[q + 1][p] !== \"undefined\"\n          ) {\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n          } else if (cval & Node1) {\n            path.push([p + 1, q + 1]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else {\n            /* found an entry point into regular grid! */\n            path.push([p + cell.topleft, q + 1]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 0;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          }\n        }\n      } else if (d_y === -1) {\n        if (d_o === 1) {\n          /* try to go right */\n          if (typeof grid.cells[q][p + 1] !== \"undefined\") {\n            d_x = 1;\n            d_y = 0;\n            d_o = 1;\n          } else if (cval & Node2) {\n            path.push([p + 1, q]);\n            d_x = 0;\n            d_y = -1;\n            d_o = 1;\n          } else {\n            /* found entry into regular grid! */\n            path.push([p + 1, q + cell.righttop]);\n            d_x = -1;\n            d_y = 0;\n            d_o = 1;\n            closed = true;\n            //console.log(\"found entry from top at \" + p + \",\" + q);\n            break;\n          }\n        } else {\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        }\n      } else if (d_y === 1) {\n        if (d_o === 0) {\n          //console.log(\"we came from bottom left and proceed to the left\");\n          /* try to go left */\n          if (typeof grid.cells[q][p - 1] !== \"undefined\") {\n            d_x = -1;\n            d_y = 0;\n            d_o = 0;\n          } else if (cval & Node0) {\n            path.push([p, q + 1]);\n            d_x = 0;\n            d_y = 1;\n            d_o = 0;\n          } else {\n            /* found an entry point into regular grid! */\n            path.push([p, q + cell.leftbottom]);\n            d_x = 1;\n            d_y = 0;\n            d_o = 0;\n            closed = true;\n            //console.log(\"found entry from bottom at \" + p + \",\" + q);\n            break;\n          }\n        } else {\n          //console.log(\"we came from bottom right and proceed to the right\");\n          console.log(\"MarchingSquaresJS-isoBands: wtf\");\n          break;\n        }\n      } else {\n        console.log(\"MarchingSquaresJS-isoBands: where did we came from???\");\n        break;\n      }\n    }\n\n    p += d_x;\n    q += d_y;\n    //console.log(\"going on to  \" + p + \",\" + q + \" via \" + d_x + \" \" + d_y + \" \" + d_o);\n\n    if (p === i && q === j) {\n      /* bail out, once we've closed a circle path */\n      break;\n    }\n  }\n\n  //console.log(\"exit with \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n  return { path: path, i: p, j: q, x: d_x, y: d_y, o: d_o };\n}\n\nfunction deleteEdge(cell, edgeIdx) {\n  delete cell.edges[edgeIdx];\n  for (var k = edgeIdx + 1; k < cell.edges.length; k++) {\n    cell.edges[k - 1] = cell.edges[k];\n  }\n  cell.edges.pop();\n}\n\nfunction getStartXY(cell) {\n  if (cell.edges.length > 0) {\n    var e = cell.edges[cell.edges.length - 1];\n    //console.log(\"starting with edge \" + e);\n    var cval = cell.cval_real;\n    switch (e) {\n      case 0:\n        if (cval & Node1) {\n          /* node 1 within range */\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        } else {\n          /* node 1 below or above threshold */\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        }\n      case 1:\n        if (cval & Node2) {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        } else {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        }\n      case 2:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        }\n      case 3:\n        if (cval & Node3) {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 4:\n        if (cval & Node1) {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        } else {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        }\n      case 5:\n        if (cval & Node2) {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        } else {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        }\n      case 6:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        }\n      case 7:\n        if (cval & Node3) {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 8:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        }\n      case 9:\n        if (cval & Node3) {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 10:\n        if (cval & Node3) {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        } else {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        }\n      case 11:\n        if (cval & Node0) {\n          return { p: [1, cell.righttop], x: -1, y: 0, o: 1 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 12:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        }\n      case 13:\n        if (cval & Node3) {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 14:\n        if (cval & Node3) {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        } else {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        }\n      case 15:\n        if (cval & Node0) {\n          return { p: [1, cell.rightbottom], x: -1, y: 0, o: 0 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 16:\n        if (cval & Node2) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        }\n      case 17:\n        if (cval & Node0) {\n          return { p: [cell.bottomright, 0], x: 0, y: 1, o: 1 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 18:\n        if (cval & Node3) {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        } else {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        }\n      case 19:\n        if (cval & Node0) {\n          return { p: [cell.bottomleft, 0], x: 0, y: 1, o: 0 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 20:\n        if (cval & Node0) {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        } else {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        }\n      case 21:\n        if (cval & Node1) {\n          return { p: [0, cell.leftbottom], x: 1, y: 0, o: 0 };\n        } else {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        }\n      case 22:\n        if (cval & Node0) {\n          return { p: [cell.topleft, 1], x: 0, y: -1, o: 0 };\n        } else {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        }\n      case 23:\n        if (cval & Node1) {\n          return { p: [0, cell.lefttop], x: 1, y: 0, o: 1 };\n        } else {\n          return { p: [cell.topright, 1], x: 0, y: -1, o: 1 };\n        }\n      default:\n        console.log(\"MarchingSquaresJS-isoBands: edge index out of range!\");\n        console.log(cell);\n        break;\n    }\n  }\n\n  return null;\n}\n\nfunction getExitXY(cell, x, y, o) {\n  var e,\n    id_x,\n    d_x,\n    d_y,\n    cval = cell.cval;\n  var d_o;\n\n  switch (x) {\n    case -1:\n      switch (o) {\n        case 0:\n          e = isoBandEdgeRB[cval];\n          d_x = isoBandNextXRB[cval];\n          d_y = isoBandNextYRB[cval];\n          d_o = isoBandNextORB[cval];\n          break;\n        default:\n          e = isoBandEdgeRT[cval];\n          d_x = isoBandNextXRT[cval];\n          d_y = isoBandNextYRT[cval];\n          d_o = isoBandNextORT[cval];\n          break;\n      }\n      break;\n    case 1:\n      switch (o) {\n        case 0:\n          e = isoBandEdgeLB[cval];\n          d_x = isoBandNextXLB[cval];\n          d_y = isoBandNextYLB[cval];\n          d_o = isoBandNextOLB[cval];\n          break;\n        default:\n          e = isoBandEdgeLT[cval];\n          d_x = isoBandNextXLT[cval];\n          d_y = isoBandNextYLT[cval];\n          d_o = isoBandNextOLT[cval];\n          break;\n      }\n      break;\n    default:\n      switch (y) {\n        case -1:\n          switch (o) {\n            case 0:\n              e = isoBandEdgeTL[cval];\n              d_x = isoBandNextXTL[cval];\n              d_y = isoBandNextYTL[cval];\n              d_o = isoBandNextOTL[cval];\n              break;\n            default:\n              e = isoBandEdgeTR[cval];\n              d_x = isoBandNextXTR[cval];\n              d_y = isoBandNextYTR[cval];\n              d_o = isoBandNextOTR[cval];\n              break;\n          }\n          break;\n        case 1:\n          switch (o) {\n            case 0:\n              e = isoBandEdgeBL[cval];\n              d_x = isoBandNextXBL[cval];\n              d_y = isoBandNextYBL[cval];\n              d_o = isoBandNextOBL[cval];\n              break;\n            default:\n              e = isoBandEdgeBR[cval];\n              d_x = isoBandNextXBR[cval];\n              d_y = isoBandNextYBR[cval];\n              d_o = isoBandNextOBR[cval];\n              break;\n          }\n          break;\n      }\n      break;\n  }\n\n  id_x = cell.edges.indexOf(e);\n  if (typeof cell.edges[id_x] !== \"undefined\") {\n    deleteEdge(cell, id_x);\n  } else {\n    //console.log(\"wrong edges...\");\n    //console.log(x + \" \" + y + \" \" + o);\n    //console.log(cell);\n    return null;\n  }\n\n  cval = cell.cval_real;\n\n  switch (e) {\n    case 0:\n      if (cval & Node1) {\n        /* node 1 within range */\n        x = cell.topleft;\n        y = 1;\n      } else {\n        /* node 1 below or above threshold */\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 1:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 2:\n      if (cval & Node2) {\n        x = cell.topleft;\n        y = 1;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 3:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 4:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 5:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.topright;\n        y = 1;\n      }\n      break;\n    case 6:\n      if (cval & Node2) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 7:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = cell.topright;\n        y = 1;\n      }\n      break;\n    case 8:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.righttop;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 9:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 10:\n      if (cval & Node3) {\n        x = 1;\n        y = cell.righttop;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 11:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = 1;\n        y = cell.righttop;\n      }\n      break;\n    case 12:\n      if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 13:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 1;\n        y = cell.rightbottom;\n      }\n      break;\n    case 14:\n      if (cval & Node3) {\n        x = 1;\n        y = cell.rightbottom;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 15:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = 1;\n        y = cell.rightbottom;\n      }\n      break;\n    case 16:\n      if (cval & Node2) {\n        x = 0;\n        y = cell.leftbottom;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 17:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.bottomright;\n        y = 0;\n      }\n      break;\n    case 18:\n      if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 19:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.bottomleft;\n        y = 0;\n      }\n      break;\n    case 20:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.leftbottom;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 21:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 0;\n        y = cell.leftbottom;\n      }\n      break;\n    case 22:\n      if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n      } else {\n        x = cell.topleft;\n        y = 1;\n      }\n      break;\n    case 23:\n      if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n      } else {\n        x = 0;\n        y = cell.lefttop;\n      }\n      break;\n    default:\n      console.log(\"MarchingSquaresJS-isoBands: edge index out of range!\");\n      console.log(cell);\n      return null;\n  }\n\n  if (\n    typeof x === \"undefined\" ||\n    typeof y === \"undefined\" ||\n    typeof d_x === \"undefined\" ||\n    typeof d_y === \"undefined\" ||\n    typeof d_o === \"undefined\"\n  ) {\n    console.log(\"MarchingSquaresJS-isoBands: undefined value!\");\n    console.log(cell);\n    console.log(x + \" \" + y + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n  }\n  return { p: [x, y], x: d_x, y: d_y, o: d_o };\n}\n\nfunction BandGrid2Areas(grid) {\n  var areas = [];\n  var area_idx = 0;\n\n  grid.cells.forEach(function (g, j) {\n    g.forEach(function (gg, i) {\n      if (typeof gg !== \"undefined\") {\n        var a = polygon_table[gg.cval](gg);\n        if (typeof a === \"object\" && isArray(a)) {\n          if (typeof a[0] === \"object\" && isArray(a[0])) {\n            if (typeof a[0][0] === \"object\" && isArray(a[0][0])) {\n              a.forEach(function (aa) {\n                aa.forEach(function (aaa) {\n                  aaa[0] += i;\n                  aaa[1] += j;\n                });\n                areas[area_idx++] = aa;\n              });\n            } else {\n              a.forEach(function (aa) {\n                aa[0] += i;\n                aa[1] += j;\n              });\n              areas[area_idx++] = a;\n            }\n          } else {\n            console.log(\n              \"MarchingSquaresJS-isoBands: bandcell polygon with malformed coordinates\"\n            );\n          }\n        } else {\n          console.log(\n            \"MarchingSquaresJS-isoBands: bandcell polygon with null coordinates\"\n          );\n        }\n      }\n    });\n  });\n\n  return areas;\n}\n\n/**\n * Takes a square or rectangular grid {@link FeatureCollection} of {@link Point} features with z-values and an array of\n * value breaks and generates filled contour isobands.\n *\n * @name isobands\n * @param {FeatureCollection<Point>} pointGrid input points - must be square or rectangular\n * @param {Array<number>} breaks where to draw contours\n * @param {Object} [options={}] options on output\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {Object} [options.commonProperties={}] GeoJSON properties passed to ALL isobands\n * @param {Array<Object>} [options.breaksProperties=[]] GeoJSON properties passed, in order, to the correspondent isoband (order defined by breaks)\n * @returns {FeatureCollection<MultiPolygon>} a FeatureCollection of {@link MultiPolygon} features representing isobands\n */\nfunction isobands(pointGrid, breaks, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var zProperty = options.zProperty || \"elevation\";\n  var commonProperties = options.commonProperties || {};\n  var breaksProperties = options.breaksProperties || [];\n\n  // Validation\n  collectionOf(pointGrid, \"Point\", \"Input must contain Points\");\n  if (!breaks) throw new Error(\"breaks is required\");\n  if (!Array.isArray(breaks)) throw new Error(\"breaks is not an Array\");\n  if (!isObject(commonProperties))\n    throw new Error(\"commonProperties is not an Object\");\n  if (!Array.isArray(breaksProperties))\n    throw new Error(\"breaksProperties is not an Array\");\n\n  // Isoband methods\n  var matrix = gridToMatrix(pointGrid, { zProperty: zProperty, flip: true });\n  var contours = createContourLines(matrix, breaks, zProperty);\n  contours = rescaleContours(contours, matrix, pointGrid);\n\n  var multipolygons = contours.map(function (contour, index) {\n    if (breaksProperties[index] && !isObject(breaksProperties[index])) {\n      throw new Error(\"Each mappedProperty is required to be an Object\");\n    }\n    // collect all properties\n    var contourProperties = objectAssign(\n      {},\n      commonProperties,\n      breaksProperties[index]\n    );\n    contourProperties[zProperty] = contour[zProperty];\n    var multiP = multiPolygon(contour.groupedRings, contourProperties);\n    return multiP;\n  });\n\n  return featureCollection(multipolygons);\n}\n\n/**\n * Creates the contours lines (featuresCollection of polygon features) from the 2D data grid\n *\n * Marchingsquares process the grid data as a 3D representation of a function on a 2D plane, therefore it\n * assumes the points (x-y coordinates) are one 'unit' distance. The result of the IsoBands function needs to be\n * rescaled, with turfjs, to the original area and proportions on the map\n *\n * @private\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Array<number>} breaks Breaks\n * @param {string} [property='elevation'] Property\n * @returns {Array<any>} contours\n */\nfunction createContourLines(matrix, breaks, property) {\n  var contours = [];\n  for (var i = 1; i < breaks.length; i++) {\n    var lowerBand = +breaks[i - 1]; // make sure the breaks value is a number\n    var upperBand = +breaks[i];\n\n    var isobandsCoords = isoBands(matrix, lowerBand, upperBand - lowerBand);\n    // as per GeoJson rules for creating a Polygon, make sure the first element\n    // in the array of LinearRings represents the exterior ring (i.e. biggest area),\n    // and any subsequent elements represent interior rings (i.e. smaller area);\n    // this avoids rendering issues of the MultiPolygons on the map\n    var nestedRings = orderByArea(isobandsCoords);\n    var groupedRings = groupNestedRings(nestedRings);\n    var obj = {};\n    obj[\"groupedRings\"] = groupedRings;\n    obj[property] = lowerBand + \"-\" + upperBand;\n    contours.push(obj);\n  }\n  return contours;\n}\n\n/**\n * Transform isobands of 2D grid to polygons for the map\n *\n * @private\n * @param {Array<any>} contours Contours\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Object} points Points by Latitude\n * @returns {Array<any>} contours\n */\nfunction rescaleContours(contours, matrix, points) {\n  // get dimensions (on the map) of the original grid\n  var gridBbox = bbox(points); // [ minX, minY, maxX, maxY ]\n  var originalWidth = gridBbox[2] - gridBbox[0];\n  var originalHeigth = gridBbox[3] - gridBbox[1];\n\n  // get origin, which is the first point of the last row on the rectangular data on the map\n  var x0 = gridBbox[0];\n  var y0 = gridBbox[1];\n  // get number of cells per side\n  var matrixWidth = matrix[0].length - 1;\n  var matrixHeight = matrix.length - 1;\n  // calculate the scaling factor between matrix and rectangular grid on the map\n  var scaleX = originalWidth / matrixWidth;\n  var scaleY = originalHeigth / matrixHeight;\n\n  var resize = function (point) {\n    point[0] = point[0] * scaleX + x0;\n    point[1] = point[1] * scaleY + y0;\n  };\n\n  // resize and shift each point/line of the isobands\n  contours.forEach(function (contour) {\n    contour.groupedRings.forEach(function (lineRingSet) {\n      lineRingSet.forEach(function (lineRing) {\n        lineRing.forEach(resize);\n      });\n    });\n  });\n  return contours;\n}\n\n/*  utility functions */\n\n/**\n * Returns an array of coordinates (of LinearRings) in descending order by area\n *\n * @private\n * @param {Array<LineString>} ringsCoords array of closed LineString\n * @returns {Array} array of the input LineString ordered by area\n */\nfunction orderByArea(ringsCoords) {\n  var ringsWithArea = [];\n  var areas = [];\n  ringsCoords.forEach(function (coords) {\n    // var poly = polygon([points]);\n    var ringArea = area(polygon([coords]));\n    // create an array of areas value\n    areas.push(ringArea);\n    // associate each lineRing with its area\n    ringsWithArea.push({ ring: coords, area: ringArea });\n  });\n  areas.sort(function (a, b) {\n    // bigger --> smaller\n    return b - a;\n  });\n  // create a new array of linearRings coordinates ordered by their area\n  var orderedByArea = [];\n  areas.forEach(function (area) {\n    for (var lr = 0; lr < ringsWithArea.length; lr++) {\n      if (ringsWithArea[lr].area === area) {\n        orderedByArea.push(ringsWithArea[lr].ring);\n        ringsWithArea.splice(lr, 1);\n        break;\n      }\n    }\n  });\n  return orderedByArea;\n}\n\n/**\n * Returns an array of arrays of coordinates, each representing\n * a set of (coordinates of) nested LinearRings,\n * i.e. the first ring contains all the others\n *\n * @private\n * @param {Array} orderedLinearRings array of coordinates (of LinearRings) in descending order by area\n * @returns {Array<Array>} Array of coordinates of nested LinearRings\n */\nfunction groupNestedRings(orderedLinearRings) {\n  // create a list of the (coordinates of) LinearRings\n  var lrList = orderedLinearRings.map(function (lr) {\n    return { lrCoordinates: lr, grouped: false };\n  });\n  var groupedLinearRingsCoords = [];\n  while (!allGrouped(lrList)) {\n    for (var i = 0; i < lrList.length; i++) {\n      if (!lrList[i].grouped) {\n        // create new group starting with the larger not already grouped ring\n        var group = [];\n        group.push(lrList[i].lrCoordinates);\n        lrList[i].grouped = true;\n        var outerMostPoly = polygon([lrList[i].lrCoordinates]);\n        // group all the rings contained by the outermost ring\n        for (var j = i + 1; j < lrList.length; j++) {\n          if (!lrList[j].grouped) {\n            var lrPoly = polygon([lrList[j].lrCoordinates]);\n            if (isInside(lrPoly, outerMostPoly)) {\n              group.push(lrList[j].lrCoordinates);\n              lrList[j].grouped = true;\n            }\n          }\n        }\n        // insert the new group\n        groupedLinearRingsCoords.push(group);\n      }\n    }\n  }\n  return groupedLinearRingsCoords;\n}\n\n/**\n * @private\n * @param {Polygon} testPolygon polygon of interest\n * @param {Polygon} targetPolygon polygon you want to compare with\n * @returns {boolean} true if test-Polygon is inside target-Polygon\n */\nfunction isInside(testPolygon, targetPolygon) {\n  var points = explode(testPolygon);\n  for (var i = 0; i < points.features.length; i++) {\n    if (!booleanPointInPolygon(points.features[i], targetPolygon)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @private\n * @param {Array<Object>} list list of objects which might contain the 'group' attribute\n * @returns {boolean} true if all the objects in the list are marked as grouped\n */\nfunction allGrouped(list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].grouped === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isobands;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,qBAAqB,MAAM,gCAAgC;AAClE,OAAOC,OAAO,MAAM,eAAe;AACnC,SAASC,YAAY,EAAEC,SAAS,QAAQ,iBAAiB;AACzD,SAASC,QAAQ,EAAEC,YAAY,EAAEC,iBAAiB,EAAEC,OAAO,QAAQ,eAAe;AAClF,OAAOC,YAAY,MAAM,eAAe;AACxC,SAASC,WAAW,QAAQ,YAAY;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACnC;EACAA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,IAAI,CAACR,QAAQ,CAACQ,OAAO,CAAC,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EAC7D,IAAIC,SAAS,GAAGF,OAAO,CAACE,SAAS,IAAI,WAAW;EAChD,IAAIC,IAAI,GAAGH,OAAO,CAACG,IAAI;EACvB,IAAIC,KAAK,GAAGJ,OAAO,CAACI,KAAK;;EAEzB;EACAd,YAAY,CAACS,IAAI,EAAE,OAAO,EAAE,2BAA2B,CAAC;EAExD,IAAIM,YAAY,GAAGC,kBAAkB,CAACP,IAAI,EAAEI,IAAI,CAAC;EAEjD,IAAII,MAAM,GAAG,EAAE;EACf;EACA;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,YAAY,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IAC5C,IAAIE,QAAQ,GAAGL,YAAY,CAACG,CAAC,CAAC;IAC9B,IAAIG,GAAG,GAAG,EAAE;IACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,CAACD,MAAM,EAAEG,CAAC,EAAE,EAAE;MACxC,IAAIC,KAAK,GAAGH,QAAQ,CAACE,CAAC,CAAC;MACvB;MACA,IAAIC,KAAK,CAACC,UAAU,CAACZ,SAAS,CAAC,EAAES,GAAG,CAACI,IAAI,CAACF,KAAK,CAACC,UAAU,CAACZ,SAAS,CAAC,CAAC,CAAC,KAClES,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC;MAChB;MACA,IAAIX,KAAK,KAAK,IAAI,EAAES,KAAK,CAACC,UAAU,CAACE,cAAc,GAAG,CAACR,CAAC,EAAEI,CAAC,CAAC;IAC9D;IACAL,MAAM,CAACQ,IAAI,CAACJ,GAAG,CAAC;EAClB;EAEA,OAAOJ,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,kBAAkBA,CAACW,MAAM,EAAEd,IAAI,EAAE;EACxC,IAAIe,gBAAgB,GAAG,CAAC,CAAC;;EAEzB;EACArB,WAAW,CAACoB,MAAM,EAAE,UAAUJ,KAAK,EAAE;IACnC,IAAIM,GAAG,GAAG5B,SAAS,CAACsB,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAI,CAACK,gBAAgB,CAACC,GAAG,CAAC,EAAED,gBAAgB,CAACC,GAAG,CAAC,GAAG,EAAE;IACtDD,gBAAgB,CAACC,GAAG,CAAC,CAACJ,IAAI,CAACF,KAAK,CAAC;EACnC,CAAC,CAAC;;EAEF;EACA,IAAIO,qBAAqB,GAAGC,MAAM,CAACC,IAAI,CAACJ,gBAAgB,CAAC,CAACK,GAAG,CAAC,UAAUJ,GAAG,EAAE;IAC3E,IAAIR,GAAG,GAAGO,gBAAgB,CAACC,GAAG,CAAC;IAC/B,IAAIK,qBAAqB,GAAGb,GAAG,CAACc,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;MACnD,OAAOpC,SAAS,CAACmC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGnC,SAAS,CAACoC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC;IACF,OAAOH,qBAAqB;EAC9B,CAAC,CAAC;;EAEF;EACA,IAAII,WAAW,GAAGR,qBAAqB,CAACK,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAC3D,IAAIxB,IAAI,EAAE,OAAOZ,SAAS,CAACmC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGnC,SAAS,CAACoC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KACpD,OAAOpC,SAAS,CAACoC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGpC,SAAS,CAACmC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,CAAC,CAAC;EAEF,OAAOE,WAAW;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,eAAe,GAAG;EACpBC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAE;AACZ,CAAC;AAED,IAAIC,QAAQ,GAAG,CAAC,CAAC;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAACC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAErC,OAAO,EAAE;EAChD;EACAA,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;EAEhC,IAAIsC,UAAU,GAAGjB,MAAM,CAACC,IAAI,CAACO,eAAe,CAAC;EAE7C,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,UAAU,CAAC7B,MAAM,EAAE8B,CAAC,EAAE,EAAE;IAC1C,IAAIC,GAAG,GAAGF,UAAU,CAACC,CAAC,CAAC;IACvB,IAAIE,GAAG,GAAGzC,OAAO,CAACwC,GAAG,CAAC;IACtBC,GAAG,GACD,OAAOA,GAAG,KAAK,WAAW,IAAIA,GAAG,KAAK,IAAI,GAAGA,GAAG,GAAGZ,eAAe,CAACW,GAAG,CAAC;IAEzEP,QAAQ,CAACO,GAAG,CAAC,GAAGC,GAAG;EACrB;EAEA,IAAIR,QAAQ,CAACF,OAAO,EAClBW,OAAO,CAACC,GAAG,CACT,sDAAsD,GACpDP,IAAI,GACJ,GAAG,IACFA,IAAI,GAAGC,SAAS,CAAC,GAClB,GACJ,CAAC;EAEH,IAAItC,IAAI,GAAG6C,eAAe,CAACT,IAAI,EAAEC,IAAI,EAAEC,SAAS,CAAC;EAEjD,IAAIQ,GAAG;EACP,IAAIZ,QAAQ,CAACD,QAAQ,EAAE;IACrB,IAAIC,QAAQ,CAACF,OAAO,EAClBW,OAAO,CAACC,GAAG,CACT,0EACF,CAAC;IACHE,GAAG,GAAGC,cAAc,CAAC/C,IAAI,CAAC;EAC5B,CAAC,MAAM;IACL,IAAIkC,QAAQ,CAACF,OAAO,EAClBW,OAAO,CAACC,GAAG,CACT,0EACF,CAAC;IACHE,GAAG,GAAGE,kBAAkB,CAAChD,IAAI,CAAC;EAChC;EAEA,IAAI,OAAOkC,QAAQ,CAACH,eAAe,KAAK,UAAU,EAChDG,QAAQ,CAACH,eAAe,CAACe,GAAG,CAAC;EAE/B,OAAOA,GAAG;AACZ;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAIG,KAAK,GAAG,EAAE;EACZC,KAAK,GAAG,EAAE;EACVC,KAAK,GAAG,CAAC;EACTC,KAAK,GAAG,CAAC;;AAEX;AACA;AACA;AACA;;AAEA,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AAEvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AAEvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AAEvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AAEvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AAEvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AAEvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AAEvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AACvB,IAAIC,cAAc,GAAG,EAAE;AAEvBjB,cAAc,CAAC,EAAE,CAAC,GAAGG,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAC5CF,cAAc,CAAC,EAAE,CAAC,GAAGG,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC;AAC3CF,cAAc,CAAC,EAAE,CAAC,GAAGG,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC;AAC3CO,cAAc,CAAC,EAAE,CAAC,GAAGG,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC;AAC3CF,cAAc,CAAC,EAAE,CAAC,GAAGG,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC;AAC3CF,cAAc,CAAC,EAAE,CAAC,GAAGG,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC;AAE3CvB,cAAc,CAAC,EAAE,CAAC,GAAGG,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC;AAC3CF,cAAc,CAAC,EAAE,CAAC,GAAGG,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AAC5CF,cAAc,CAAC,EAAE,CAAC,GAAGY,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,EAAE,CAAC,GAAGH,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC;AAC3CI,cAAc,CAAC,EAAE,CAAC,GAAGH,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC;AAC3CR,cAAc,CAAC,EAAE,CAAC,GAAGY,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC;;AAE3C;AACAI,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CX,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAE3CL,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CI,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAE3CX,cAAc,CAAC,EAAE,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5CC,cAAc,CAAC,EAAE,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5CC,cAAc,CAAC,EAAE,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5CL,cAAc,CAAC,EAAE,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5CC,cAAc,CAAC,EAAE,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5CC,cAAc,CAAC,EAAE,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAE5Ca,cAAc,CAAC,EAAE,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5CC,cAAc,CAAC,EAAE,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5CC,cAAc,CAAC,EAAE,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5CpB,cAAc,CAAC,EAAE,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7CC,cAAc,CAAC,EAAE,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5CC,cAAc,CAAC,EAAE,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;;AAE5C;AACAgB,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CX,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAE3CX,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3CC,cAAc,CAAC,CAAC,CAAC,GAAGA,cAAc,C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AG,CAAC,GAAG,CAAC,CAAC;AACxBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBI,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBpB,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAEvBI,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBI,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBO,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBpB,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAEvBI,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBI,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AACvBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxBC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC;AAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}