{"ast":null,"code":"// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function () {\n  return new Adder();\n}\nfunction Adder() {\n  this.reset();\n}\nAdder.prototype = {\n  constructor: Adder,\n  reset: function () {\n    this.s =\n    // rounded value\n    this.t = 0; // exact error\n  },\n  add: function (y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function () {\n    return this.s;\n  }\n};\nvar temp = new Adder();\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n    bv = x - a,\n    av = x - bv;\n  adder.t = a - av + (b - bv);\n}","map":{"version":3,"names":["Adder","reset","prototype","constructor","s","t","add","y","temp","valueOf","adder","a","b","x","bv","av"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/node_modules/d3-geo/src/adder.js"],"sourcesContent":["// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,YAAW;EACxB,OAAO,IAAIA,KAAK,CAAD,CAAC;AAClB;AAEA,SAASA,KAAKA,CAAA,EAAG;EACf,IAAI,CAACC,KAAK,CAAC,CAAC;AACd;AAEAD,KAAK,CAACE,SAAS,GAAG;EAChBC,WAAW,EAAEH,KAAK;EAClBC,KAAK,EAAE,SAAAA,CAAA,EAAW;IAChB,IAAI,CAACG,CAAC;IAAG;IACT,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,CAAC;EACd,CAAC;EACDC,GAAG,EAAE,SAAAA,CAASC,CAAC,EAAE;IACfD,GAAG,CAACE,IAAI,EAAED,CAAC,EAAE,IAAI,CAACF,CAAC,CAAC;IACpBC,GAAG,CAAC,IAAI,EAAEE,IAAI,CAACJ,CAAC,EAAE,IAAI,CAACA,CAAC,CAAC;IACzB,IAAI,IAAI,CAACA,CAAC,EAAE,IAAI,CAACC,CAAC,IAAIG,IAAI,CAACH,CAAC,CAAC,KACxB,IAAI,CAACD,CAAC,GAAGI,IAAI,CAACH,CAAC;EACtB,CAAC;EACDI,OAAO,EAAE,SAAAA,CAAA,EAAW;IAClB,OAAO,IAAI,CAACL,CAAC;EACf;AACF,CAAC;AAED,IAAII,IAAI,GAAG,IAAIR,KAAK,CAAD,CAAC;AAEpB,SAASM,GAAGA,CAACI,KAAK,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACxB,IAAIC,CAAC,GAAGH,KAAK,CAACN,CAAC,GAAGO,CAAC,GAAGC,CAAC;IACnBE,EAAE,GAAGD,CAAC,GAAGF,CAAC;IACVI,EAAE,GAAGF,CAAC,GAAGC,EAAE;EACfJ,KAAK,CAACL,CAAC,GAAIM,CAAC,GAAGI,EAAE,IAAKH,CAAC,GAAGE,EAAE,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}