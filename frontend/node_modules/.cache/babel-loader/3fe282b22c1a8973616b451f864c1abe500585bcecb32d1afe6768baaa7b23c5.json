{"ast":null,"code":"var _jsxFileName = \"/Users/brandonpae/Desktop/secra-code/frontend/src/components/home/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import NavBar from '../NavBar';\n\nimport styles from './home.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RegisterPage(props) {\n  _s();\n  const logoPath = '/images/secra_logo.png';\n  const {\n    token,\n    setToken\n  } = useState(props.token, props.setToken); // may need to check this syntax for the setToken\n  const navigate = useNavigate();\n  const [status, setStatus] = useState('');\n\n  // CAN INCLUDE EMAIL LATER; for now, just username and password\n  const [loginForm, setloginForm] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  /** MAY NEED THIS CODE LATER for CSRF\n   * \n   *     // Create a payload with the username and password\n  const payload = {\n    username: username,\n    password: password,\n  };\n  \n  const csrfToken = getCookie('csrftoken'); // get CSRF token (to access resources in server endpoint)\n   // Set the CSRF token in the headers\n  const headers = {\n      'Content-Type': 'application/json',\n      'X-CSRF-TOKEN': csrfToken,\n  };\n   // Make a POST request using Axios\n  axios.post(baseURL + '/users/login', payload, { headers })\n   */\n\n  function logMeIn(event) {\n    if (loginForm.confirmPassword !== loginForm.password) {\n      setStatus('Passwords do not match.');\n      return;\n    }\n    axios({\n      method: \"POST\",\n      url: \"/register\",\n      // endpoint in backend to login user and return access token\n      // remember, users module is just base url (e.g. localhost:5000/login but other modules are not\n      // e.g. localhost:5000/gpt/test)\n      data: {\n        username: loginForm.username,\n        password: loginForm.password\n      }\n    }).then(response => {\n      if (response.data[\"success\"]) {\n        // success is True\n        props.setToken(response.data.access_token);\n        props.setUsername(loginForm.username); // may want to first check if token is null\n\n        navigate('/'); // if successful login, redirect to the home page\n      } else {\n        setloginForm({\n          // update the login form (erase username and password)\n          username: \"\",\n          password: \"\"\n        });\n        setStatus(response.data[\"msg\"]);\n      }\n    }).catch(error => {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n    event.preventDefault(); // prevent default form submission behavior (because we want to connect to BE endpoint)\n  }\n  function handleChange(event) {\n    const {\n      value,\n      name\n    } = event.target;\n    setloginForm(prevNote => ({\n      ...prevNote,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loginPageTop,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Secra\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.topLogo,\n        src: process.env.PUBLIC_URL + logoPath,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.registerContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: styles.loginHeader,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: logMeIn,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: loginForm.username,\n            onChange: handleChange,\n            placeholder: \"Username\",\n            className: styles.box,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: loginForm.password,\n            onChange: handleChange,\n            placeholder: \"Password\",\n            className: styles.box,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: loginForm.confirmPassword,\n            onChange: handleChange,\n            placeholder: \"Confirm Password\",\n            className: styles.box,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: styles.submitButton,\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logMeIn,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(RegisterPage, \"teSM02PUgGyFTCVnryK7AyuN8wg=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","axios","useState","useEffect","useNavigate","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterPage","props","_s","logoPath","token","setToken","navigate","status","setStatus","loginForm","setloginForm","username","password","confirmPassword","logMeIn","event","method","url","data","then","response","access_token","setUsername","catch","error","console","log","headers","preventDefault","handleChange","value","name","target","prevNote","children","className","loginPageTop","fileName","_jsxFileName","lineNumber","columnNumber","topLogo","src","process","env","PUBLIC_URL","alt","registerContainer","id","loginHeader","onSubmit","type","onChange","placeholder","box","required","submitButton","style","color","onClick","_c","$RefreshReg$"],"sources":["/Users/brandonpae/Desktop/secra-code/frontend/src/components/home/RegisterPage.js"],"sourcesContent":["import React from 'react';\n\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import NavBar from '../NavBar';\n\nimport styles from './home.module.css';\n\nfunction RegisterPage(props) {\n    const logoPath = '/images/secra_logo.png';\n    const {token, setToken} = useState(props.token, props.setToken); // may need to check this syntax for the setToken\n    const navigate = useNavigate();\n    const [status, setStatus] = useState('');\n\n    // CAN INCLUDE EMAIL LATER; for now, just username and password\n    const [loginForm, setloginForm] = useState({\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    })\n\n    /** MAY NEED THIS CODE LATER for CSRF\n     * \n     *     // Create a payload with the username and password\n    const payload = {\n      username: username,\n      password: password,\n    };\n    \n    const csrfToken = getCookie('csrftoken'); // get CSRF token (to access resources in server endpoint)\n\n    // Set the CSRF token in the headers\n    const headers = {\n        'Content-Type': 'application/json',\n        'X-CSRF-TOKEN': csrfToken,\n    };\n\n    // Make a POST request using Axios\n    axios.post(baseURL + '/users/login', payload, { headers })\n     */\n\n    function logMeIn(event) {\n\n        if (loginForm.confirmPassword !== loginForm.password) {\n            setStatus('Passwords do not match.');\n            return;\n        }\n        \n        axios({\n          method: \"POST\",\n          url:\"/register\", // endpoint in backend to login user and return access token\n          // remember, users module is just base url (e.g. localhost:5000/login but other modules are not\n          // e.g. localhost:5000/gpt/test)\n          data:{\n            username: loginForm.username,\n            password: loginForm.password\n           }\n        })\n        .then((response) => {\n            if (response.data[\"success\"]) { // success is True\n                props.setToken(response.data.access_token)\n                props.setUsername(loginForm.username) // may want to first check if token is null\n\n                navigate('/') // if successful login, redirect to the home page\n            }\n            else {\n                setloginForm(({ // update the login form (erase username and password)\n                    username: \"\",\n                    password: \"\"}))\n                \n                setStatus(response.data[\"msg\"]);\n            }\n        }).catch((error) => {\n          if (error.response) {\n            console.log(error.response)\n            console.log(error.response.status)\n            console.log(error.response.headers)\n            }\n        })\n  \n        event.preventDefault() // prevent default form submission behavior (because we want to connect to BE endpoint)\n    }\n\n    function handleChange(event) { \n        const {value, name} = event.target\n        setloginForm(prevNote => ({\n            ...prevNote, [name]: value})\n    )}\n\n    return (\n        <>\n            <div className={styles.loginPageTop}> \n                <h2>Secra</h2>\n                <img className={styles.topLogo} src={process.env.PUBLIC_URL + logoPath} alt=\"logo\" />\n            </div>\n\n            <div className={styles.registerContainer}>\n                <h3 id={styles.loginHeader}>Register</h3>\n\n                {/** The login form is here below */}\n\n                <form onSubmit={logMeIn}>\n                    <label>\n                        Username:\n                        <input type=\"text\" value={loginForm.username} onChange={handleChange} placeholder=\"Username\" className={styles.box} required/>\n                    </label>\n\n                    <br />\n\n                    <label>\n                        Password:\n                        <input type=\"password\" value={loginForm.password} onChange={handleChange} placeholder=\"Password\" className={styles.box} required />\n                    </label>\n\n                    <br />\n\n                    <label>\n                        Confirm Password:\n                        <input type=\"password\" value={loginForm.confirmPassword} onChange={handleChange} placeholder=\"Confirm Password\" className={styles.box} required />\n                    </label>\n\n                    <button id={styles.submitButton} type=\"submit\">Register</button>\n                </form>\n\n                <p style={{color: 'red'}}>{status}</p> {/** For the error status message */}\n\n                <button onClick={logMeIn}>Submit</button> {/** May not need this */}\n            </div>\n        </>\n    );\n}\n\nexport default RegisterPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}