{"ast":null,"code":"var _jsxFileName = \"/Users/brandonpae/Desktop/secra-code/frontend/src/components/chat/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from '../NavBar';\nimport styles from './chat.module.css';\nimport axios from 'axios'; // Import Axios\n\nimport LoadingText from './LoadingText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL = 'auth'; // change as needed\n\nfunction ChatPage(props) {\n  _s();\n  const logoPath = '/images/secra_logo.png';\n  const [messages, setMessages] = useState(Array(0)); // empty array to start\n  const navigate = useNavigate();\n  const username = props.username;\n\n  // use an array of dictionaries\n  // for each dict:\n  // prop 1: message itself\n  // prop 2: loc (left vs. right for assistant vs. user)\n\n  function onTextSubmit(new_message) {\n    setMessages(messages => [...messages, new_message] // this message is a dict (has text, sender as 2 fields)\n    );\n  }\n  ;\n  function submitQuery(event) {\n    event.preventDefault(); // prevent default form submission behavior (because we want to connect to BE endpoint)\n\n    // const name = document.getElementById('name').value;\n    const query = document.getElementById('query').value; // get form field values\n    const username = document.getElementById('username').textContent; // get username\n\n    console.log(username);\n    const csrftoken = getCookie('csrftoken'); // get CSRF token (to access resources in server endpoint)\n\n    setResponse(\"Generating response...\", '#000000');\n\n    // Send the request to server at \"submit\" endpoint\n    fetch('http://127.0.0.1:8000/chat/submit', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify({\n        query: query,\n        username: username\n      })\n      // credentials: 'include'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok'); // server error\n      }\n      return response.json();\n    }).then(data => {\n      // data is the JSON object returned by endpoint \"chat/submit\"\n\n      gpt_response = data.response;\n\n      // response is a JSON string, convert to JSON object\n      gpt_response = JSON.parse(gpt_response);\n      console.log(gpt_response);\n\n      // EVENT PARAMS\n      timezone = gpt_response['timezone'];\n      summary = gpt_response['summary'];\n      loc = gpt_response['location']; // location is a keyword in JS\n      recurrence = gpt_response['recurrence'];\n\n      // SUGGESTED TIMES\n      const times = gpt_response['times']; // array of JSON objects\n      const num_times = times.length;\n      if (num_times == 0) {\n        throw new Error(\"No suggested times found\");\n      }\n\n      // iterate over the times and format them for display\n\n      start = \"\";\n      end = \"\";\n      date = \"\";\n      let time = \"\";\n\n      // edit this with React later\n      for (let i = 0; i < num_times; i++) {\n        time = times[i];\n        start = time['start'];\n        end = time['end'];\n        date = time['date'];\n        let display_tz = \"\";\n        if (timezone == \"US/Eastern\" || timezone == \"America/New_York\" || timezone == \"ET\") {\n          // handle only ET for now\n          display_tz = \"ET\";\n        }\n        let formatted_time = start + \" to \" + end + \" \" + display_tz;\n        console.log(\"Option \" + (i + 1) + \":\\nTime: \" + formatted_time + \"\\nDate: \" + date);\n      }\n\n      // display response (change later)\n      document.getElementById('response').innerText = 'Hi ' + name + ', here are my suggestions:\\n\\n' + gpt_response;\n    }).catch(error => {\n      console.error('There has been a problem with your fetch operation:', error);\n    });\n    axios({\n      method: \"POST\",\n      url: \"/login\",\n      // endpoint in backend to login user and return access token\n      // remember, users module is just base url (e.g. localhost:5000/login but other modules are not\n      // e.g. localhost:5000/gpt/test)\n      data: {\n        username: loginForm.username,\n        password: loginForm.password\n      }\n    }).then(response => {\n      console.log(response);\n      console.log(response.data[\"success\"]);\n      if (response.data[\"success\"]) {\n        // success is True\n\n        console.log(\"HELP ME LORD JESUS\");\n        props.setToken(response.data.access_token);\n        console.log(\"success 1\");\n        console.log(loginForm.username);\n        props.setUsername(loginForm.username); // may want to first check if token is null\n\n        console.log(\"success 2\");\n        console.log(\"Success: User logged in\");\n        navigate('/'); // if successful login, redirect to the home page\n      } else {\n        setloginForm({\n          // update the login form (erase username and password)\n          username: \"\",\n          password: \"\"\n        });\n        setStatus(response.data[\"msg\"]);\n      }\n    }).catch(error => {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'blue'\n          },\n          id: \"username\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 36\n        }, this), \"'s Assistant\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"queryForm\",\n        onSubmit: submitQuery,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"query\",\n          id: \"query\",\n          placeholder: \"Schedule a meeting...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"submitButton\",\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Assistant Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"response\",\n        children: /*#__PURE__*/_jsxDEV(LoadingText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"calendarForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"choice\",\n          id: \"choice\",\n          placeholder: \"Choice\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add to my Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          width: '800px',\n          height: '600px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: \"https://calendar.google.com/calendar/embed?src=tester1.secra%40gmail.com&ctz=America%2FNew_York\",\n          title: \"User's Google Calendar\",\n          style: {\n            border: 0,\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            // backgroundColor: 'rgba(173, 216, 230, 0.5)', // Light blue color with opacity\n            pointerEvents: 'none' // To allow interaction with the iframe\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatPage, \"l84c969dN0n70xYyjryzbVeeeIg=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","NavBar","styles","axios","LoadingText","jsxDEV","_jsxDEV","Fragment","_Fragment","URL","ChatPage","props","_s","logoPath","messages","setMessages","Array","navigate","username","onTextSubmit","new_message","submitQuery","event","preventDefault","query","document","getElementById","value","textContent","console","log","csrftoken","getCookie","setResponse","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","gpt_response","parse","timezone","summary","loc","recurrence","times","num_times","length","start","end","date","time","i","display_tz","formatted_time","innerText","name","catch","error","url","loginForm","password","setToken","access_token","setUsername","setloginForm","setStatus","status","children","class","container","id","header","style","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","required","type","align","position","width","height","src","title","border","top","left","pointerEvents","_c","$RefreshReg$"],"sources":["/Users/brandonpae/Desktop/secra-code/frontend/src/components/chat/ChatPage.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\n\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from '../NavBar';\n\nimport styles from './chat.module.css';\nimport axios from 'axios'; // Import Axios\n\nimport LoadingText from './LoadingText';\n\nconst URL = 'auth'; // change as needed\n\nfunction ChatPage(props) {\n\n    const logoPath = '/images/secra_logo.png';\n    const [messages, setMessages] = useState(Array(0)); // empty array to start\n    const navigate = useNavigate();\n    const username = props.username;\n\n    // use an array of dictionaries\n    // for each dict:\n    // prop 1: message itself\n    // prop 2: loc (left vs. right for assistant vs. user)\n\n    function onTextSubmit(new_message) {\n        setMessages(messages => (\n            [...messages, new_message] // this message is a dict (has text, sender as 2 fields)\n        ));\n    };\n\n    function submitQuery(event) {\n        event.preventDefault() // prevent default form submission behavior (because we want to connect to BE endpoint)\n        \n        // const name = document.getElementById('name').value;\n        const query = document.getElementById('query').value; // get form field values\n        const username = document.getElementById('username').textContent; // get username\n\n        console.log(username);\n        \n        const csrftoken = getCookie('csrftoken'); // get CSRF token (to access resources in server endpoint)\n\n        setResponse(\"Generating response...\", '#000000')\n\n        // Send the request to server at \"submit\" endpoint\n        fetch('http://127.0.0.1:8000/chat/submit', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrftoken\n            },\n            body: JSON.stringify({query: query, username: username}),\n            // credentials: 'include'\n        })\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Network response was not ok'); // server error\n            }\n            return response.json();\n        })\n        .then(data => {\n            // data is the JSON object returned by endpoint \"chat/submit\"\n\n            gpt_response = data.response;\n\n            // response is a JSON string, convert to JSON object\n            gpt_response = JSON.parse(gpt_response)\n\n            console.log(gpt_response)\n\n            // EVENT PARAMS\n            timezone = gpt_response['timezone']\n            summary = gpt_response['summary'];\n            loc = gpt_response['location']; // location is a keyword in JS\n            recurrence = gpt_response['recurrence'];\n\n            // SUGGESTED TIMES\n            const times = gpt_response['times']; // array of JSON objects\n            const num_times = times.length;\n\n            if (num_times == 0) {\n                throw new Error(\"No suggested times found\");\n            }\n\n            // iterate over the times and format them for display\n            \n            start = \"\";\n            end = \"\";\n            date = \"\";\n            let time = \"\";\n\n            // edit this with React later\n            for (let i = 0; i < num_times; i++) {\n                time = times[i]\n\n                start = time['start'];\n                end = time['end'];\n                date = time['date'];\n\n                let display_tz = \"\";\n                \n                if (timezone == \"US/Eastern\" || timezone == \"America/New_York\" || timezone == \"ET\") { // handle only ET for now\n                    display_tz = \"ET\";\n                }\n\n                let formatted_time = start + \" to \" + end + \" \" + display_tz;\n\n                console.log(\"Option \" + (i + 1) + \":\\nTime: \" + formatted_time + \"\\nDate: \" + date);\n                \n            }\n            \n            // display response (change later)\n            document.getElementById('response').innerText = 'Hi ' + name + ', here are my suggestions:\\n\\n' + gpt_response;\n            \n        })\n        .catch(error => {\n            console.error('There has been a problem with your fetch operation:', error);\n        });\n        axios({\n          method: \"POST\",\n          url:\"/login\", // endpoint in backend to login user and return access token\n          // remember, users module is just base url (e.g. localhost:5000/login but other modules are not\n          // e.g. localhost:5000/gpt/test)\n          data:{\n            username: loginForm.username,\n            password: loginForm.password\n           }\n        })\n        .then((response) => {\n\n            console.log(response);\n            console.log(response.data[\"success\"])\n\n            if (response.data[\"success\"]) { // success is True\n\n                console.log(\"HELP ME LORD JESUS\")\n\n                props.setToken(response.data.access_token)\n\n                console.log(\"success 1\")\n                console.log(loginForm.username)\n\n                props.setUsername(loginForm.username) // may want to first check if token is null\n\n                console.log(\"success 2\")\n                \n                console.log(\"Success: User logged in\")\n\n                navigate('/') // if successful login, redirect to the home page\n            }\n            else {\n                setloginForm(({ // update the login form (erase username and password)\n                    username: \"\",\n                    password: \"\"}))\n                \n                setStatus(response.data[\"msg\"]);\n            }\n        }).catch((error) => {\n          if (error.response) {\n            console.log(error.response)\n            console.log(error.response.status)\n            console.log(error.response.headers)\n            }\n        })\n  \n    }\n\n    return (\n        <>  \n\n        <div class={styles.container}>\n            <h1 id={styles.header}><span style={{color: 'blue'}} id=\"username\">{username}</span>'s Assistant</h1>\n            \n            <br />\n            \n            <h3>Your Message</h3>\n\n            <br />\n\n            <form id=\"queryForm\" onSubmit={submitQuery}>\n                <textarea name=\"query\" id=\"query\" placeholder=\"Schedule a meeting...\" required></textarea>\n                <input id=\"submitButton\" type=\"submit\" value=\"Submit\" />\n            </form> \n        \n            <h3>Assistant Response</h3>\n\n            <p id=\"response\">\n                <LoadingText />\n            </p>\n        </div>\n\n        <div class=\"container\">\n            <h3>Your Calendar</h3>\n\n            <form id=\"calendarForm\">\n                <textarea type=\"text\" name=\"choice\" id=\"choice\" placeholder=\"Choice\" required></textarea>\n                <input type=\"submit\" value=\"Add to my Calendar\" />\n            </form>\n        </div>\n        \n        {/*-- From tester1.secra calendar */}\n        <p align=\"center\">\n\n        <div style={{ position: 'relative', width: '800px', height: '600px' }}>\n\n        <iframe \n            src=\"https://calendar.google.com/calendar/embed?src=tester1.secra%40gmail.com&ctz=America%2FNew_York\" \n            title=\"User's Google Calendar\" \n            style={{ border: 0, width: '100%', height: '100%' }} >\n        </iframe>\n\n        <div style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            // backgroundColor: 'rgba(173, 216, 230, 0.5)', // Light blue color with opacity\n            pointerEvents: 'none' // To allow interaction with the iframe\n        }}></div>\n\n        </div>\n\n\n        </p>\n        </>\n    );\n}\n\nexport default ChatPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}