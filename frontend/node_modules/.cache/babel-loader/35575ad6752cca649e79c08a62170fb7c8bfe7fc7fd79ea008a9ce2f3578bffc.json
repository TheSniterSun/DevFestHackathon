{"ast":null,"code":"var _jsxFileName = \"/Users/brandonpae/Desktop/secra-code/frontend/src/components/chat/AssistantResponse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Event from './Event';\nimport styles from './chat.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AssistantResponse(props) {\n  _s();\n  const response = props.response; // text response (\"generating\" or the actual returned value, which includes \"\")\n\n  let eventResponse = \"\"; // this is either \"\", \"Adding to your calendar...\", or final message to confirm\n\n  function setEventResponse(value) {\n    eventResponse = value;\n  }\n  const [loadingText, setLoadingText] = useState(\"Generating response.\");\n  const [loadingEventText, setLoadingEventText] = useState(\"Adding to your calendar.\");\n  let eventNum = 0;\n\n  // for the gpt response\n  useEffect(() => {\n    let intervalId;\n    if (response === \"generating\") {\n      intervalId = setInterval(() => {\n        setLoadingText(prev => {\n          const dotCount = (prev.match(/\\./g) || []).length;\n          if (dotCount < 3) {\n            return prev + \".\";\n          } else {\n            return \"Generating response\";\n          }\n        });\n      }, 600);\n    }\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [response]);\n\n  // for calendar response\n  useEffect(() => {\n    let intervalId;\n    if (eventResponse === \"adding\") {\n      intervalId = setInterval(() => {\n        setLoadingEventText(prev => {\n          const dotCount = (prev.match(/\\./g) || []).length;\n          if (dotCount < 3) {\n            return prev + \".\";\n          } else {\n            return \"Adding to your calendar\";\n          }\n        });\n      }, 600);\n    }\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [eventResponse]);\n  const isJson = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n  const handleEventClick = index => {\n    setEventResponse(\"adding\");\n    eventNum = index;\n  };\n  const renderEvents = data => {\n    // this creates \n    if (data && data.times) {\n      // if times exists\n      return data.times.map((timeObj, index) =>\n      /*#__PURE__*/\n      // render a new event object with specified params\n      _jsxDEV(Event, {\n        username: props.username,\n        timeInfo: timeObj,\n        summary: data.summary,\n        location: data.location,\n        timezone: data.timezone,\n        recurrence: data.recurrence,\n        onEventClick: () => handleEventClick(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this));\n    }\n    return null;\n  };\n  const renderResponse = () => {\n    if (response === '') {\n      return null; // empty response\n    } else if (response === 'generating') {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: loadingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 20\n      }, this);\n    } else if (isJson(response)) {\n      const parsedResponse = JSON.parse(response);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here are some suggestions based on your availability:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.eventsContainer,\n          children: renderEvents(parsedResponse)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } else {\n      // this should NOT occur\n      throw new Error(\"response is not valid\");\n    }\n  };\n\n  // for adding the calendar event specifically\n  const renderEventResponse = () => {\n    if (eventResponse === '') {\n      return null; // empty response\n    } else if (eventResponse === \"Adding to your calendar.\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: loadingEventText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 20\n      }, this);\n    } else {\n      // basically for the real response\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Thank you for choosing event \", eventNum, \"! It has been added to your calendar. To continue scheduling more events, please submit a new message above or refresh the page.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"response\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Assistant Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), renderResponse(), \" \", renderEventResponse(), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n}\n_s(AssistantResponse, \"vPj4L/AGfnuMrTK7QJTSB6ops/0=\");\n_c = AssistantResponse;\nexport default AssistantResponse;\nvar _c;\n$RefreshReg$(_c, \"AssistantResponse\");","map":{"version":3,"names":["React","useState","useEffect","Event","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","AssistantResponse","props","_s","response","eventResponse","setEventResponse","value","loadingText","setLoadingText","loadingEventText","setLoadingEventText","eventNum","intervalId","setInterval","prev","dotCount","match","length","clearInterval","isJson","str","JSON","parse","e","handleEventClick","index","renderEvents","data","times","map","timeObj","username","timeInfo","summary","location","timezone","recurrence","onEventClick","fileName","_jsxFileName","lineNumber","columnNumber","renderResponse","children","parsedResponse","className","eventsContainer","Error","renderEventResponse","id","_c","$RefreshReg$"],"sources":["/Users/brandonpae/Desktop/secra-code/frontend/src/components/chat/AssistantResponse.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Event from './Event';\nimport styles from './chat.module.css';\n\nfunction AssistantResponse(props) {\n    const response = props.response; // text response (\"generating\" or the actual returned value, which includes \"\")\n    \n    let eventResponse = \"\"; // this is either \"\", \"Adding to your calendar...\", or final message to confirm\n\n    function setEventResponse(value) {\n        eventResponse = value;\n    }\n\n    const [loadingText, setLoadingText] = useState(\"Generating response.\");\n\n    const [loadingEventText, setLoadingEventText] = useState(\"Adding to your calendar.\");\n\n    let eventNum = 0;\n\n    // for the gpt response\n    useEffect(() => {\n        let intervalId;\n\n        if (response === \"generating\") {\n            intervalId = setInterval(() => {\n                setLoadingText(prev => { \n                    const dotCount = (prev.match(/\\./g) || []).length;\n                    if (dotCount < 3) {\n                        return prev + \".\";\n                    } else {\n                        return \"Generating response\";\n                    }\n                });\n            }, 600);\n        }\n\n        return () => {\n            if (intervalId) {\n                clearInterval(intervalId);\n            }\n        };\n    }, [response]);\n\n    // for calendar response\n    useEffect(() => {\n        let intervalId;\n\n        if (eventResponse === \"adding\") {\n            intervalId = setInterval(() => {\n                setLoadingEventText(prev => { \n                    const dotCount = (prev.match(/\\./g) || []).length;\n                    if (dotCount < 3) {\n                        return prev + \".\";\n                    } else {\n                        return \"Adding to your calendar\";\n                    }\n                });\n            }, 600);\n        }\n\n        return () => {\n            if (intervalId) {\n                clearInterval(intervalId);\n            }\n        };\n    }, [eventResponse]);\n\n    const isJson = (str) => {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n\n    const handleEventClick = (index) => {\n        setEventResponse(\"adding\");\n        eventNum = index;\n    };\n\n    const renderEvents = (data) => { // this creates \n        if (data && data.times) { // if times exists\n            return data.times.map((timeObj, index) => ( // render a new event object with specified params\n                <Event \n                key={index} \n                username={props.username} \n                timeInfo={timeObj} \n                summary={data.summary} \n                location={data.location} \n                timezone={data.timezone} \n                recurrence={data.recurrence}\n                onEventClick={() => handleEventClick(index)}/>\n            ));\n        }\n        return null;\n    };\n\n    const renderResponse = () => {\n        if (response === '') {\n            return null; // empty response\n        } else if (response === 'generating') {\n            return <p>{loadingText}</p>;\n        } else if (isJson(response)) {\n            const parsedResponse = JSON.parse(response);\n            return (\n                <>  \n                    <p>Here are some suggestions based on your availability:</p>\n                    \n                    <br />\n\n                    <div className={styles.eventsContainer}>\n                        {renderEvents(parsedResponse)}\n                    </div>\n                </>\n            );\n        } else { // this should NOT occur\n            throw new Error(\"response is not valid\");\n        }\n    };\n\n    // for adding the calendar event specifically\n    const renderEventResponse = () => {\n        if (eventResponse === '') {\n            return null; // empty response\n        } else if (eventResponse === \"Adding to your calendar.\") {\n            return <p>{loadingEventText}</p>;\n        } else { // basically for the real response\n            return (<p>\n                Thank you for choosing event {eventNum}! It has been added to your calendar.\n                To continue scheduling more events, please submit a new message above or refresh the page.\n            </p>);\n        } \n    };\n\n    return (\n        <div id=\"response\">\n            <h3>Assistant Response</h3>\n            {renderResponse()} {/* This includes the event suggestions */}\n\n            {renderEventResponse()} {/* This is just feedback (when they add an event) */}\n        </div>\n    );\n}\n\nexport default AssistantResponse;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}