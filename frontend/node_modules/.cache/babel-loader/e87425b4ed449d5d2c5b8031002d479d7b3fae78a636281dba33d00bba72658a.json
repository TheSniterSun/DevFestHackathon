{"ast":null,"code":"import { orientationIndex } from \"./util.js\";\n/**\n * Node\n */\nvar Node = /** @class */function () {\n  function Node(coordinates) {\n    this.id = Node.buildId(coordinates);\n    this.coordinates = coordinates; //< {Number[]}\n    this.innerEdges = []; //< {Edge[]}\n    // We wil store to (out) edges in an CCW order as geos::planargraph::DirectedEdgeStar does\n    this.outerEdges = []; //< {Edge[]}\n    this.outerEdgesSorted = false; //< {Boolean} flag that stores if the outer Edges had been sorted\n  }\n  Node.buildId = function (coordinates) {\n    return coordinates.join(\",\");\n  };\n  Node.prototype.removeInnerEdge = function (edge) {\n    this.innerEdges = this.innerEdges.filter(function (e) {\n      return e.from.id !== edge.from.id;\n    });\n  };\n  Node.prototype.removeOuterEdge = function (edge) {\n    this.outerEdges = this.outerEdges.filter(function (e) {\n      return e.to.id !== edge.to.id;\n    });\n  };\n  /**\n   * Outer edges are stored CCW order.\n   *\n   * @memberof Node\n   * @param {Edge} edge - Edge to add as an outerEdge.\n   */\n  Node.prototype.addOuterEdge = function (edge) {\n    this.outerEdges.push(edge);\n    this.outerEdgesSorted = false;\n  };\n  /**\n   * Sorts outer edges in CCW way.\n   *\n   * @memberof Node\n   * @private\n   */\n  Node.prototype.sortOuterEdges = function () {\n    var _this = this;\n    if (!this.outerEdgesSorted) {\n      //this.outerEdges.sort((a, b) => a.compareTo(b));\n      // Using this comparator in order to be deterministic\n      this.outerEdges.sort(function (a, b) {\n        var aNode = a.to,\n          bNode = b.to;\n        if (aNode.coordinates[0] - _this.coordinates[0] >= 0 && bNode.coordinates[0] - _this.coordinates[0] < 0) return 1;\n        if (aNode.coordinates[0] - _this.coordinates[0] < 0 && bNode.coordinates[0] - _this.coordinates[0] >= 0) return -1;\n        if (aNode.coordinates[0] - _this.coordinates[0] === 0 && bNode.coordinates[0] - _this.coordinates[0] === 0) {\n          if (aNode.coordinates[1] - _this.coordinates[1] >= 0 || bNode.coordinates[1] - _this.coordinates[1] >= 0) return aNode.coordinates[1] - bNode.coordinates[1];\n          return bNode.coordinates[1] - aNode.coordinates[1];\n        }\n        var det = orientationIndex(_this.coordinates, aNode.coordinates, bNode.coordinates);\n        if (det < 0) return 1;\n        if (det > 0) return -1;\n        var d1 = Math.pow(aNode.coordinates[0] - _this.coordinates[0], 2) + Math.pow(aNode.coordinates[1] - _this.coordinates[1], 2),\n          d2 = Math.pow(bNode.coordinates[0] - _this.coordinates[0], 2) + Math.pow(bNode.coordinates[1] - _this.coordinates[1], 2);\n        return d1 - d2;\n      });\n      this.outerEdgesSorted = true;\n    }\n  };\n  /**\n   * Retrieves outer edges.\n   *\n   * They are sorted if they aren't in the CCW order.\n   *\n   * @memberof Node\n   * @returns {Edge[]} - List of outer edges sorted in a CCW order.\n   */\n  Node.prototype.getOuterEdges = function () {\n    this.sortOuterEdges();\n    return this.outerEdges;\n  };\n  Node.prototype.getOuterEdge = function (i) {\n    this.sortOuterEdges();\n    return this.outerEdges[i];\n  };\n  Node.prototype.addInnerEdge = function (edge) {\n    this.innerEdges.push(edge);\n  };\n  return Node;\n}();\nexport default Node;","map":{"version":3,"names":["orientationIndex","Node","coordinates","id","buildId","innerEdges","outerEdges","outerEdgesSorted","join","prototype","removeInnerEdge","edge","filter","e","from","removeOuterEdge","to","addOuterEdge","push","sortOuterEdges","_this","sort","a","b","aNode","bNode","det","d1","Math","pow","d2","getOuterEdges","getOuterEdge","i","addInnerEdge"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/node_modules/@turf/polygonize/dist/es/lib/Node.js"],"sourcesContent":["import { orientationIndex } from \"./util.js\";\n/**\n * Node\n */\nvar Node = /** @class */ (function () {\n    function Node(coordinates) {\n        this.id = Node.buildId(coordinates);\n        this.coordinates = coordinates; //< {Number[]}\n        this.innerEdges = []; //< {Edge[]}\n        // We wil store to (out) edges in an CCW order as geos::planargraph::DirectedEdgeStar does\n        this.outerEdges = []; //< {Edge[]}\n        this.outerEdgesSorted = false; //< {Boolean} flag that stores if the outer Edges had been sorted\n    }\n    Node.buildId = function (coordinates) {\n        return coordinates.join(\",\");\n    };\n    Node.prototype.removeInnerEdge = function (edge) {\n        this.innerEdges = this.innerEdges.filter(function (e) { return e.from.id !== edge.from.id; });\n    };\n    Node.prototype.removeOuterEdge = function (edge) {\n        this.outerEdges = this.outerEdges.filter(function (e) { return e.to.id !== edge.to.id; });\n    };\n    /**\n     * Outer edges are stored CCW order.\n     *\n     * @memberof Node\n     * @param {Edge} edge - Edge to add as an outerEdge.\n     */\n    Node.prototype.addOuterEdge = function (edge) {\n        this.outerEdges.push(edge);\n        this.outerEdgesSorted = false;\n    };\n    /**\n     * Sorts outer edges in CCW way.\n     *\n     * @memberof Node\n     * @private\n     */\n    Node.prototype.sortOuterEdges = function () {\n        var _this = this;\n        if (!this.outerEdgesSorted) {\n            //this.outerEdges.sort((a, b) => a.compareTo(b));\n            // Using this comparator in order to be deterministic\n            this.outerEdges.sort(function (a, b) {\n                var aNode = a.to, bNode = b.to;\n                if (aNode.coordinates[0] - _this.coordinates[0] >= 0 &&\n                    bNode.coordinates[0] - _this.coordinates[0] < 0)\n                    return 1;\n                if (aNode.coordinates[0] - _this.coordinates[0] < 0 &&\n                    bNode.coordinates[0] - _this.coordinates[0] >= 0)\n                    return -1;\n                if (aNode.coordinates[0] - _this.coordinates[0] === 0 &&\n                    bNode.coordinates[0] - _this.coordinates[0] === 0) {\n                    if (aNode.coordinates[1] - _this.coordinates[1] >= 0 ||\n                        bNode.coordinates[1] - _this.coordinates[1] >= 0)\n                        return aNode.coordinates[1] - bNode.coordinates[1];\n                    return bNode.coordinates[1] - aNode.coordinates[1];\n                }\n                var det = orientationIndex(_this.coordinates, aNode.coordinates, bNode.coordinates);\n                if (det < 0)\n                    return 1;\n                if (det > 0)\n                    return -1;\n                var d1 = Math.pow(aNode.coordinates[0] - _this.coordinates[0], 2) +\n                    Math.pow(aNode.coordinates[1] - _this.coordinates[1], 2), d2 = Math.pow(bNode.coordinates[0] - _this.coordinates[0], 2) +\n                    Math.pow(bNode.coordinates[1] - _this.coordinates[1], 2);\n                return d1 - d2;\n            });\n            this.outerEdgesSorted = true;\n        }\n    };\n    /**\n     * Retrieves outer edges.\n     *\n     * They are sorted if they aren't in the CCW order.\n     *\n     * @memberof Node\n     * @returns {Edge[]} - List of outer edges sorted in a CCW order.\n     */\n    Node.prototype.getOuterEdges = function () {\n        this.sortOuterEdges();\n        return this.outerEdges;\n    };\n    Node.prototype.getOuterEdge = function (i) {\n        this.sortOuterEdges();\n        return this.outerEdges[i];\n    };\n    Node.prototype.addInnerEdge = function (edge) {\n        this.innerEdges.push(edge);\n    };\n    return Node;\n}());\nexport default Node;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}