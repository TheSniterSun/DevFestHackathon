{"ast":null,"code":"import { getCoord, getGeom } from '@turf/invariant';\n\n/**\n * Takes a triangular plane as a {@link Polygon}\n * and a {@link Point} within that triangle and returns the z-value\n * at that point. The Polygon should have properties `a`, `b`, and `c`\n * that define the values at its three corners. Alternatively, the z-values\n * of each triangle point can be provided by their respective 3rd coordinate\n * if their values are not provided as properties.\n *\n * @name planepoint\n * @param {Coord} point the Point for which a z-value will be calculated\n * @param {Feature<Polygon>} triangle a Polygon feature with three vertices\n * @returns {number} the z-value for `interpolatedPoint`\n * @example\n * var point = turf.point([-75.3221, 39.529]);\n * // \"a\", \"b\", and \"c\" values represent the values of the coordinates in order.\n * var triangle = turf.polygon([[\n *   [-75.1221, 39.57],\n *   [-75.58, 39.18],\n *   [-75.97, 39.86],\n *   [-75.1221, 39.57]\n * ]], {\n *   \"a\": 11,\n *   \"b\": 122,\n *   \"c\": 44\n * });\n *\n * var zValue = turf.planepoint(point, triangle);\n * point.properties.zValue = zValue;\n *\n * //addToMap\n * var addToMap = [triangle, point];\n */\nfunction planepoint(point, triangle) {\n  // Normalize input\n  var coord = getCoord(point);\n  var geom = getGeom(triangle);\n  var coords = geom.coordinates;\n  var outer = coords[0];\n  if (outer.length < 4) throw new Error(\"OuterRing of a Polygon must have 4 or more Positions.\");\n  var properties = triangle.properties || {};\n  var a = properties.a;\n  var b = properties.b;\n  var c = properties.c;\n\n  // Planepoint\n  var x = coord[0];\n  var y = coord[1];\n  var x1 = outer[0][0];\n  var y1 = outer[0][1];\n  var z1 = a !== undefined ? a : outer[0][2];\n  var x2 = outer[1][0];\n  var y2 = outer[1][1];\n  var z2 = b !== undefined ? b : outer[1][2];\n  var x3 = outer[2][0];\n  var y3 = outer[2][1];\n  var z3 = c !== undefined ? c : outer[2][2];\n  var z = (z3 * (x - x1) * (y - y2) + z1 * (x - x2) * (y - y3) + z2 * (x - x3) * (y - y1) - z2 * (x - x1) * (y - y3) - z3 * (x - x2) * (y - y1) - z1 * (x - x3) * (y - y2)) / ((x - x1) * (y - y2) + (x - x2) * (y - y3) + (x - x3) * (y - y1) - (x - x1) * (y - y3) - (x - x2) * (y - y1) - (x - x3) * (y - y2));\n  return z;\n}\nexport default planepoint;","map":{"version":3,"names":["getCoord","getGeom","planepoint","point","triangle","coord","geom","coords","coordinates","outer","length","Error","properties","a","b","c","x","y","x1","y1","z1","undefined","x2","y2","z2","x3","y3","z3","z"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/node_modules/@turf/planepoint/dist/es/index.js"],"sourcesContent":["import { getCoord, getGeom } from '@turf/invariant';\n\n/**\n * Takes a triangular plane as a {@link Polygon}\n * and a {@link Point} within that triangle and returns the z-value\n * at that point. The Polygon should have properties `a`, `b`, and `c`\n * that define the values at its three corners. Alternatively, the z-values\n * of each triangle point can be provided by their respective 3rd coordinate\n * if their values are not provided as properties.\n *\n * @name planepoint\n * @param {Coord} point the Point for which a z-value will be calculated\n * @param {Feature<Polygon>} triangle a Polygon feature with three vertices\n * @returns {number} the z-value for `interpolatedPoint`\n * @example\n * var point = turf.point([-75.3221, 39.529]);\n * // \"a\", \"b\", and \"c\" values represent the values of the coordinates in order.\n * var triangle = turf.polygon([[\n *   [-75.1221, 39.57],\n *   [-75.58, 39.18],\n *   [-75.97, 39.86],\n *   [-75.1221, 39.57]\n * ]], {\n *   \"a\": 11,\n *   \"b\": 122,\n *   \"c\": 44\n * });\n *\n * var zValue = turf.planepoint(point, triangle);\n * point.properties.zValue = zValue;\n *\n * //addToMap\n * var addToMap = [triangle, point];\n */\nfunction planepoint(point, triangle) {\n  // Normalize input\n  var coord = getCoord(point);\n  var geom = getGeom(triangle);\n  var coords = geom.coordinates;\n  var outer = coords[0];\n  if (outer.length < 4)\n    throw new Error(\"OuterRing of a Polygon must have 4 or more Positions.\");\n  var properties = triangle.properties || {};\n  var a = properties.a;\n  var b = properties.b;\n  var c = properties.c;\n\n  // Planepoint\n  var x = coord[0];\n  var y = coord[1];\n  var x1 = outer[0][0];\n  var y1 = outer[0][1];\n  var z1 = a !== undefined ? a : outer[0][2];\n  var x2 = outer[1][0];\n  var y2 = outer[1][1];\n  var z2 = b !== undefined ? b : outer[1][2];\n  var x3 = outer[2][0];\n  var y3 = outer[2][1];\n  var z3 = c !== undefined ? c : outer[2][2];\n  var z =\n    (z3 * (x - x1) * (y - y2) +\n      z1 * (x - x2) * (y - y3) +\n      z2 * (x - x3) * (y - y1) -\n      z2 * (x - x1) * (y - y3) -\n      z3 * (x - x2) * (y - y1) -\n      z1 * (x - x3) * (y - y2)) /\n    ((x - x1) * (y - y2) +\n      (x - x2) * (y - y3) +\n      (x - x3) * (y - y1) -\n      (x - x1) * (y - y3) -\n      (x - x2) * (y - y1) -\n      (x - x3) * (y - y2));\n\n  return z;\n}\n\nexport default planepoint;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}