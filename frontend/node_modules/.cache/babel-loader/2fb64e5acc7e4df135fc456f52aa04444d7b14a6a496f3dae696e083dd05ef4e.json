{"ast":null,"code":"import { feature, featureCollection } from \"@turf/helpers\";\nimport { featureEach } from \"@turf/meta\";\n/**\n * Combines a {@link FeatureCollection} of {@link Point}, {@link LineString}, or {@link Polygon} features\n * into {@link MultiPoint}, {@link MultiLineString}, or {@link MultiPolygon} features.\n *\n * @name combine\n * @param {FeatureCollection<Point|LineString|Polygon>} fc a FeatureCollection of any type\n * @returns {FeatureCollection<MultiPoint|MultiLineString|MultiPolygon>} a FeatureCollection of corresponding type to input\n * @example\n * var fc = turf.featureCollection([\n *   turf.point([19.026432, 47.49134]),\n *   turf.point([19.074497, 47.509548])\n * ]);\n *\n * var combined = turf.combine(fc);\n *\n * //addToMap\n * var addToMap = [combined]\n */\nfunction combine(fc) {\n  var groups = {\n    MultiPoint: {\n      coordinates: [],\n      properties: []\n    },\n    MultiLineString: {\n      coordinates: [],\n      properties: []\n    },\n    MultiPolygon: {\n      coordinates: [],\n      properties: []\n    }\n  };\n  featureEach(fc, function (feature) {\n    var _a, _b, _c;\n    var _d;\n    switch ((_d = feature.geometry) === null || _d === void 0 ? void 0 : _d.type) {\n      case \"Point\":\n        groups.MultiPoint.coordinates.push(feature.geometry.coordinates);\n        groups.MultiPoint.properties.push(feature.properties);\n        break;\n      case \"MultiPoint\":\n        (_a = groups.MultiPoint.coordinates).push.apply(_a, feature.geometry.coordinates);\n        groups.MultiPoint.properties.push(feature.properties);\n        break;\n      case \"LineString\":\n        groups.MultiLineString.coordinates.push(feature.geometry.coordinates);\n        groups.MultiLineString.properties.push(feature.properties);\n        break;\n      case \"MultiLineString\":\n        (_b = groups.MultiLineString.coordinates).push.apply(_b, feature.geometry.coordinates);\n        groups.MultiLineString.properties.push(feature.properties);\n        break;\n      case \"Polygon\":\n        groups.MultiPolygon.coordinates.push(feature.geometry.coordinates);\n        groups.MultiPolygon.properties.push(feature.properties);\n        break;\n      case \"MultiPolygon\":\n        (_c = groups.MultiPolygon.coordinates).push.apply(_c, feature.geometry.coordinates);\n        groups.MultiPolygon.properties.push(feature.properties);\n        break;\n      default:\n        break;\n    }\n  });\n  return featureCollection(Object.keys(groups).filter(function (key) {\n    return groups[key].coordinates.length;\n  }).sort().map(function (key) {\n    var geometry = {\n      type: key,\n      coordinates: groups[key].coordinates\n    };\n    var properties = {\n      collectedProperties: groups[key].properties\n    };\n    return feature(geometry, properties);\n  }));\n}\nexport default combine;","map":{"version":3,"names":["feature","featureCollection","featureEach","combine","fc","groups","MultiPoint","coordinates","properties","MultiLineString","MultiPolygon","_a","_b","_c","_d","geometry","type","push","apply","Object","keys","filter","key","length","sort","map","collectedProperties"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/node_modules/@turf/combine/dist/es/index.js"],"sourcesContent":["import { feature, featureCollection, } from \"@turf/helpers\";\nimport { featureEach } from \"@turf/meta\";\n/**\n * Combines a {@link FeatureCollection} of {@link Point}, {@link LineString}, or {@link Polygon} features\n * into {@link MultiPoint}, {@link MultiLineString}, or {@link MultiPolygon} features.\n *\n * @name combine\n * @param {FeatureCollection<Point|LineString|Polygon>} fc a FeatureCollection of any type\n * @returns {FeatureCollection<MultiPoint|MultiLineString|MultiPolygon>} a FeatureCollection of corresponding type to input\n * @example\n * var fc = turf.featureCollection([\n *   turf.point([19.026432, 47.49134]),\n *   turf.point([19.074497, 47.509548])\n * ]);\n *\n * var combined = turf.combine(fc);\n *\n * //addToMap\n * var addToMap = [combined]\n */\nfunction combine(fc) {\n    var groups = {\n        MultiPoint: {\n            coordinates: [],\n            properties: [],\n        },\n        MultiLineString: {\n            coordinates: [],\n            properties: [],\n        },\n        MultiPolygon: {\n            coordinates: [],\n            properties: [],\n        },\n    };\n    featureEach(fc, function (feature) {\n        var _a, _b, _c;\n        var _d;\n        switch ((_d = feature.geometry) === null || _d === void 0 ? void 0 : _d.type) {\n            case \"Point\":\n                groups.MultiPoint.coordinates.push(feature.geometry.coordinates);\n                groups.MultiPoint.properties.push(feature.properties);\n                break;\n            case \"MultiPoint\":\n                (_a = groups.MultiPoint.coordinates).push.apply(_a, feature.geometry.coordinates);\n                groups.MultiPoint.properties.push(feature.properties);\n                break;\n            case \"LineString\":\n                groups.MultiLineString.coordinates.push(feature.geometry.coordinates);\n                groups.MultiLineString.properties.push(feature.properties);\n                break;\n            case \"MultiLineString\":\n                (_b = groups.MultiLineString.coordinates).push.apply(_b, feature.geometry.coordinates);\n                groups.MultiLineString.properties.push(feature.properties);\n                break;\n            case \"Polygon\":\n                groups.MultiPolygon.coordinates.push(feature.geometry.coordinates);\n                groups.MultiPolygon.properties.push(feature.properties);\n                break;\n            case \"MultiPolygon\":\n                (_c = groups.MultiPolygon.coordinates).push.apply(_c, feature.geometry.coordinates);\n                groups.MultiPolygon.properties.push(feature.properties);\n                break;\n            default:\n                break;\n        }\n    });\n    return featureCollection(Object.keys(groups)\n        .filter(function (key) {\n        return groups[key].coordinates.length;\n    })\n        .sort()\n        .map(function (key) {\n        var geometry = { type: key, coordinates: groups[key].coordinates };\n        var properties = { collectedProperties: groups[key].properties };\n        return feature(geometry, properties);\n    }));\n}\nexport default combine;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}