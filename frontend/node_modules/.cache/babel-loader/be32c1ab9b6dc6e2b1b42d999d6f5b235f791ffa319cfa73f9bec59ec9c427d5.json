{"ast":null,"code":"import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\nimport clone from '@turf/clone';\n\n/**\n * Takes input features and flips all of their coordinates from `[x, y]` to `[y, x]`.\n *\n * @name flip\n * @param {GeoJSON} geojson input features\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} a feature or set of features of the same type as `input` with flipped coordinates\n * @example\n * var serbia = turf.point([20.566406, 43.421008]);\n *\n * var saudiArabia = turf.flip(serbia);\n *\n * //addToMap\n * var addToMap = [serbia, saudiArabia];\n */\nfunction flip(geojson, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var mutate = options.mutate;\n  if (!geojson) throw new Error(\"geojson is required\");\n  // ensure that we don't modify features in-place and changes to the\n  // output do not change the previous feature, including changes to nested\n  // properties.\n  if (mutate === false || mutate === undefined) geojson = clone(geojson);\n  coordEach(geojson, function (coord) {\n    var x = coord[0];\n    var y = coord[1];\n    coord[0] = y;\n    coord[1] = x;\n  });\n  return geojson;\n}\nexport default flip;","map":{"version":3,"names":["coordEach","isObject","clone","flip","geojson","options","Error","mutate","undefined","coord","x","y"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/node_modules/@turf/flip/dist/es/index.js"],"sourcesContent":["import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\nimport clone from '@turf/clone';\n\n/**\n * Takes input features and flips all of their coordinates from `[x, y]` to `[y, x]`.\n *\n * @name flip\n * @param {GeoJSON} geojson input features\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} a feature or set of features of the same type as `input` with flipped coordinates\n * @example\n * var serbia = turf.point([20.566406, 43.421008]);\n *\n * var saudiArabia = turf.flip(serbia);\n *\n * //addToMap\n * var addToMap = [serbia, saudiArabia];\n */\nfunction flip(geojson, options) {\n  // Optional parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var mutate = options.mutate;\n\n  if (!geojson) throw new Error(\"geojson is required\");\n  // ensure that we don't modify features in-place and changes to the\n  // output do not change the previous feature, including changes to nested\n  // properties.\n  if (mutate === false || mutate === undefined) geojson = clone(geojson);\n\n  coordEach(geojson, function (coord) {\n    var x = coord[0];\n    var y = coord[1];\n    coord[0] = y;\n    coord[1] = x;\n  });\n  return geojson;\n}\n\nexport default flip;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,QAAQ,QAAQ,eAAe;AACxC,OAAOC,KAAK,MAAM,aAAa;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,IAAIA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAC9B;EACAA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,IAAI,CAACJ,QAAQ,CAACI,OAAO,CAAC,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EAC7D,IAAIC,MAAM,GAAGF,OAAO,CAACE,MAAM;EAE3B,IAAI,CAACH,OAAO,EAAE,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;EACpD;EACA;EACA;EACA,IAAIC,MAAM,KAAK,KAAK,IAAIA,MAAM,KAAKC,SAAS,EAAEJ,OAAO,GAAGF,KAAK,CAACE,OAAO,CAAC;EAEtEJ,SAAS,CAACI,OAAO,EAAE,UAAUK,KAAK,EAAE;IAClC,IAAIC,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC;IAChB,IAAIE,CAAC,GAAGF,KAAK,CAAC,CAAC,CAAC;IAChBA,KAAK,CAAC,CAAC,CAAC,GAAGE,CAAC;IACZF,KAAK,CAAC,CAAC,CAAC,GAAGC,CAAC;EACd,CAAC,CAAC;EACF,OAAON,OAAO;AAChB;AAEA,eAAeD,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}