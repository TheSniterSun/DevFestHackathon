{"ast":null,"code":"import { coordEach } from \"@turf/meta\";\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n  var result = [Infinity, Infinity, -Infinity, -Infinity];\n  coordEach(geojson, function (coord) {\n    if (result[0] > coord[0]) {\n      result[0] = coord[0];\n    }\n    if (result[1] > coord[1]) {\n      result[1] = coord[1];\n    }\n    if (result[2] < coord[0]) {\n      result[2] = coord[0];\n    }\n    if (result[3] < coord[1]) {\n      result[3] = coord[1];\n    }\n  });\n  return result;\n}\nbbox[\"default\"] = bbox;\nexport default bbox;","map":{"version":3,"names":["coordEach","bbox","geojson","result","Infinity","coord"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/node_modules/@turf/bbox/dist/es/index.js"],"sourcesContent":["import { coordEach } from \"@turf/meta\";\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexport default bbox;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,IAAIA,CAACC,OAAO,EAAE;EACnB,IAAIC,MAAM,GAAG,CAACC,QAAQ,EAAEA,QAAQ,EAAE,CAACA,QAAQ,EAAE,CAACA,QAAQ,CAAC;EACvDJ,SAAS,CAACE,OAAO,EAAE,UAAUG,KAAK,EAAE;IAChC,IAAIF,MAAM,CAAC,CAAC,CAAC,GAAGE,KAAK,CAAC,CAAC,CAAC,EAAE;MACtBF,MAAM,CAAC,CAAC,CAAC,GAAGE,KAAK,CAAC,CAAC,CAAC;IACxB;IACA,IAAIF,MAAM,CAAC,CAAC,CAAC,GAAGE,KAAK,CAAC,CAAC,CAAC,EAAE;MACtBF,MAAM,CAAC,CAAC,CAAC,GAAGE,KAAK,CAAC,CAAC,CAAC;IACxB;IACA,IAAIF,MAAM,CAAC,CAAC,CAAC,GAAGE,KAAK,CAAC,CAAC,CAAC,EAAE;MACtBF,MAAM,CAAC,CAAC,CAAC,GAAGE,KAAK,CAAC,CAAC,CAAC;IACxB;IACA,IAAIF,MAAM,CAAC,CAAC,CAAC,GAAGE,KAAK,CAAC,CAAC,CAAC,EAAE;MACtBF,MAAM,CAAC,CAAC,CAAC,GAAGE,KAAK,CAAC,CAAC,CAAC;IACxB;EACJ,CAAC,CAAC;EACF,OAAOF,MAAM;AACjB;AACAF,IAAI,CAAC,SAAS,CAAC,GAAGA,IAAI;AACtB,eAAeA,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}