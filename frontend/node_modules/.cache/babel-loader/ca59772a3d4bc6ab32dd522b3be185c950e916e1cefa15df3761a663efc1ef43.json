{"ast":null,"code":"//index.js\nvar deepEqual = require('deep-equal');\nvar Equality = function (opt) {\n  this.precision = opt && opt.precision ? opt.precision : 17;\n  this.direction = opt && opt.direction ? opt.direction : false;\n  this.pseudoNode = opt && opt.pseudoNode ? opt.pseudoNode : false;\n  this.objectComparator = opt && opt.objectComparator ? opt.objectComparator : objectComparator;\n};\nEquality.prototype.compare = function (g1, g2) {\n  if (g1.type !== g2.type || !sameLength(g1, g2)) return false;\n  switch (g1.type) {\n    case 'Point':\n      return this.compareCoord(g1.coordinates, g2.coordinates);\n      break;\n    case 'LineString':\n      return this.compareLine(g1.coordinates, g2.coordinates, 0, false);\n      break;\n    case 'Polygon':\n      return this.comparePolygon(g1, g2);\n      break;\n    case 'Feature':\n      return this.compareFeature(g1, g2);\n    default:\n      if (g1.type.indexOf('Multi') === 0) {\n        var context = this;\n        var g1s = explode(g1);\n        var g2s = explode(g2);\n        return g1s.every(function (g1part) {\n          return this.some(function (g2part) {\n            return context.compare(g1part, g2part);\n          });\n        }, g2s);\n      }\n  }\n  return false;\n};\nfunction explode(g) {\n  return g.coordinates.map(function (part) {\n    return {\n      type: g.type.replace('Multi', ''),\n      coordinates: part\n    };\n  });\n}\n//compare length of coordinates/array\nfunction sameLength(g1, g2) {\n  return g1.hasOwnProperty('coordinates') ? g1.coordinates.length === g2.coordinates.length : g1.length === g2.length;\n}\n\n// compare the two coordinates [x,y]\nEquality.prototype.compareCoord = function (c1, c2) {\n  if (c1.length !== c2.length) {\n    return false;\n  }\n  for (var i = 0; i < c1.length; i++) {\n    if (c1[i].toFixed(this.precision) !== c2[i].toFixed(this.precision)) {\n      return false;\n    }\n  }\n  return true;\n};\nEquality.prototype.compareLine = function (path1, path2, ind, isPoly) {\n  if (!sameLength(path1, path2)) return false;\n  var p1 = this.pseudoNode ? path1 : this.removePseudo(path1);\n  var p2 = this.pseudoNode ? path2 : this.removePseudo(path2);\n  if (isPoly && !this.compareCoord(p1[0], p2[0])) {\n    // fix start index of both to same point\n    p2 = this.fixStartIndex(p2, p1);\n    if (!p2) return;\n  }\n  // for linestring ind =0 and for polygon ind =1\n  var sameDirection = this.compareCoord(p1[ind], p2[ind]);\n  if (this.direction || sameDirection) {\n    return this.comparePath(p1, p2);\n  } else {\n    if (this.compareCoord(p1[ind], p2[p2.length - (1 + ind)])) {\n      return this.comparePath(p1.slice().reverse(), p2);\n    }\n    return false;\n  }\n};\nEquality.prototype.fixStartIndex = function (sourcePath, targetPath) {\n  //make sourcePath first point same as of targetPath\n  var correctPath,\n    ind = -1;\n  for (var i = 0; i < sourcePath.length; i++) {\n    if (this.compareCoord(sourcePath[i], targetPath[0])) {\n      ind = i;\n      break;\n    }\n  }\n  if (ind >= 0) {\n    correctPath = [].concat(sourcePath.slice(ind, sourcePath.length), sourcePath.slice(1, ind + 1));\n  }\n  return correctPath;\n};\nEquality.prototype.comparePath = function (p1, p2) {\n  var cont = this;\n  return p1.every(function (c, i) {\n    return cont.compareCoord(c, this[i]);\n  }, p2);\n};\nEquality.prototype.comparePolygon = function (g1, g2) {\n  if (this.compareLine(g1.coordinates[0], g2.coordinates[0], 1, true)) {\n    var holes1 = g1.coordinates.slice(1, g1.coordinates.length);\n    var holes2 = g2.coordinates.slice(1, g2.coordinates.length);\n    var cont = this;\n    return holes1.every(function (h1) {\n      return this.some(function (h2) {\n        return cont.compareLine(h1, h2, 1, true);\n      });\n    }, holes2);\n  } else {\n    return false;\n  }\n};\nEquality.prototype.compareFeature = function (g1, g2) {\n  if (g1.id !== g2.id || !this.objectComparator(g1.properties, g2.properties) || !this.compareBBox(g1, g2)) {\n    return false;\n  }\n  return this.compare(g1.geometry, g2.geometry);\n};\nEquality.prototype.compareBBox = function (g1, g2) {\n  if (!g1.bbox && !g2.bbox || g1.bbox && g2.bbox && this.compareCoord(g1.bbox, g2.bbox)) {\n    return true;\n  }\n  return false;\n};\nEquality.prototype.removePseudo = function (path) {\n  //TODO to be implement\n  return path;\n};\nfunction objectComparator(obj1, obj2) {\n  return deepEqual(obj1, obj2, {\n    strict: true\n  });\n}\nmodule.exports = Equality;","map":{"version":3,"names":["deepEqual","require","Equality","opt","precision","direction","pseudoNode","objectComparator","prototype","compare","g1","g2","type","sameLength","compareCoord","coordinates","compareLine","comparePolygon","compareFeature","indexOf","context","g1s","explode","g2s","every","g1part","some","g2part","g","map","part","replace","hasOwnProperty","length","c1","c2","i","toFixed","path1","path2","ind","isPoly","p1","removePseudo","p2","fixStartIndex","sameDirection","comparePath","slice","reverse","sourcePath","targetPath","correctPath","concat","cont","c","holes1","holes2","h1","h2","id","properties","compareBBox","geometry","bbox","path","obj1","obj2","strict","module","exports"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/node_modules/geojson-equality/index.js"],"sourcesContent":["//index.js\nvar deepEqual = require('deep-equal');\n\nvar Equality = function(opt) {\n  this.precision = opt && opt.precision ? opt.precision : 17;\n  this.direction = opt && opt.direction ? opt.direction : false;\n  this.pseudoNode = opt && opt.pseudoNode ? opt.pseudoNode : false;\n  this.objectComparator = opt && opt.objectComparator ? opt.objectComparator : objectComparator;\n};\n\nEquality.prototype.compare = function(g1,g2) {\n  if (g1.type !== g2.type || !sameLength(g1,g2)) return false;\n\n  switch(g1.type) {\n  case 'Point':\n    return this.compareCoord(g1.coordinates, g2.coordinates);\n    break;\n  case 'LineString':\n    return this.compareLine(g1.coordinates, g2.coordinates,0,false);\n    break;\n  case 'Polygon':\n    return this.comparePolygon(g1,g2);\n    break;\n  case 'Feature':\n    return this.compareFeature(g1, g2);\n  default:\n    if (g1.type.indexOf('Multi') === 0) {\n      var context = this;\n      var g1s = explode(g1);\n      var g2s = explode(g2);\n      return g1s.every(function(g1part) {\n        return this.some(function(g2part) {\n          return context.compare(g1part,g2part);\n        });\n      },g2s);\n    }\n  }\n  return false;\n};\n\nfunction explode(g) {\n  return g.coordinates.map(function(part) {\n    return {\n      type: g.type.replace('Multi', ''),\n      coordinates: part}\n  });\n}\n//compare length of coordinates/array\nfunction sameLength(g1,g2) {\n   return g1.hasOwnProperty('coordinates') ?\n    g1.coordinates.length === g2.coordinates.length\n    : g1.length === g2.length;\n}\n\n// compare the two coordinates [x,y]\nEquality.prototype.compareCoord = function(c1,c2) {\n  if (c1.length !== c2.length) {\n    return false;\n  }\n\n  for (var i=0; i < c1.length; i++) {\n    if (c1[i].toFixed(this.precision) !== c2[i].toFixed(this.precision)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nEquality.prototype.compareLine = function(path1,path2,ind,isPoly) {\n  if (!sameLength(path1,path2)) return false;\n  var p1 = this.pseudoNode ? path1 : this.removePseudo(path1);\n  var p2 = this.pseudoNode ? path2 : this.removePseudo(path2);\n  if (isPoly && !this.compareCoord(p1[0],p2[0])) {\n    // fix start index of both to same point\n    p2 = this.fixStartIndex(p2,p1);\n    if(!p2) return;\n  }\n  // for linestring ind =0 and for polygon ind =1\n  var sameDirection = this.compareCoord(p1[ind],p2[ind]);\n  if (this.direction || sameDirection\n  ) {\n    return this.comparePath(p1, p2);\n  } else {\n    if (this.compareCoord(p1[ind],p2[p2.length - (1+ind)])\n    ) {\n      return this.comparePath(p1.slice().reverse(), p2);\n    }\n    return false;\n  }\n};\nEquality.prototype.fixStartIndex = function(sourcePath,targetPath) {\n  //make sourcePath first point same as of targetPath\n  var correctPath,ind = -1;\n  for (var i=0; i< sourcePath.length; i++) {\n    if(this.compareCoord(sourcePath[i],targetPath[0])) {\n      ind = i;\n      break;\n    }\n  }\n  if (ind >= 0) {\n    correctPath = [].concat(\n      sourcePath.slice(ind,sourcePath.length),\n      sourcePath.slice(1,ind+1));\n  }\n  return correctPath;\n};\nEquality.prototype.comparePath = function (p1,p2) {\n  var cont = this;\n  return p1.every(function(c,i) {\n    return cont.compareCoord(c,this[i]);\n  },p2);\n};\n\nEquality.prototype.comparePolygon = function(g1,g2) {\n  if (this.compareLine(g1.coordinates[0],g2.coordinates[0],1,true)) {\n    var holes1 = g1.coordinates.slice(1,g1.coordinates.length);\n    var holes2 = g2.coordinates.slice(1,g2.coordinates.length);\n    var cont = this;\n    return holes1.every(function(h1) {\n      return this.some(function(h2) {\n        return cont.compareLine(h1,h2,1,true);\n      });\n    },holes2);\n  } else {\n    return false;\n  }\n};\n\nEquality.prototype.compareFeature = function(g1,g2) {\n  if (\n    g1.id !== g2.id ||\n    !this.objectComparator(g1.properties, g2.properties) ||\n    !this.compareBBox(g1,g2)\n  ) {\n    return false;\n  }\n  return this.compare(g1.geometry, g2.geometry);\n};\n\nEquality.prototype.compareBBox = function(g1,g2) {\n  if (\n    (!g1.bbox && !g2.bbox) || \n    (\n      g1.bbox && g2.bbox &&\n      this.compareCoord(g1.bbox, g2.bbox)\n    )\n  )  {\n    return true;\n  }\n  return false;\n};\nEquality.prototype.removePseudo = function(path) {\n  //TODO to be implement\n  return path;\n};\n\nfunction objectComparator(obj1, obj2) {\n  return deepEqual(obj1, obj2, {strict: true});\n}\n\nmodule.exports = Equality;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}