{"ast":null,"code":"var _jsxFileName = \"/Users/brandonpae/Desktop/DevFestHackathon/frontend/src/components/home/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import NavBar from '../NavBar';\n\nimport styles from './home.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage(props) {\n  _s();\n  // const logoPath = '/images/secra_logo.png';\n  // const [token, setToken] = useState(props.token);\n  const navigate = useNavigate();\n  const [status, setStatus] = useState('');\n\n  // CAN INCLUDE EMAIL LATER; for now, just username and password\n  const [loginForm, setloginForm] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  /** MAY NEED THIS CODE LATER for CSRF\n   * \n   *     // Create a payload with the username and password\n  const payload = {\n    username: username,\n    password: password,\n  };\n  \n  const csrfToken = getCookie('csrftoken'); // get CSRF token (to access resources in server endpoint)\n   // Set the CSRF token in the headers\n  const headers = {\n      'Content-Type': 'application/json',\n      'X-CSRF-TOKEN': csrfToken,\n  };\n   // Make a POST request using Axios\n  axios.post(baseURL + '/users/login', payload, { headers })\n   */\n\n  function logMeIn(event) {\n    event.preventDefault(); // prevent default form submission behavior (because we want to connect to BE endpoint)\n\n    axios({\n      method: \"POST\",\n      url: \"/login\",\n      // endpoint in backend to login user and return access token\n      // remember, users module is just base url (e.g. localhost:5000/login but other modules are not\n      // e.g. localhost:5000/gpt/test)\n      data: {\n        username: loginForm.username,\n        password: loginForm.password\n      }\n    }).then(response => {\n      console.log(response);\n      console.log(response.data[\"success\"]);\n      if (response.data[\"success\"]) {\n        // success is True\n\n        console.log(\"HELP ME LORD JESUS\");\n        props.setToken(response.data.access_token);\n        console.log(\"success 1\");\n        console.log(loginForm.username);\n        props.setUsername(loginForm.username); // may want to first check if token is null\n\n        console.log(\"success 2\");\n        console.log(\"Success: User logged in\");\n        navigate('/'); // if successful login, redirect to the home page\n      } else {\n        setloginForm({\n          // update the login form (erase username and password)\n          username: \"\",\n          password: \"\"\n        });\n        setStatus(response.data[\"msg\"]);\n      }\n    }).catch(error => {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n  }\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setloginForm(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loginContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: styles.loginHeader,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: logMeIn,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: loginForm.username,\n            onChange: handleChange,\n            name: \"username\",\n            placeholder: \"Username\",\n            className: styles.box,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: loginForm.password,\n            onChange: handleChange,\n            name: \"password\",\n            placeholder: \"Password\",\n            className: styles.box,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: styles.submitButton,\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(LoginPage, \"fv7mC6uTmbtsdO8NYJyP7LyiZDg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","axios","useState","useEffect","useNavigate","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","props","_s","navigate","status","setStatus","loginForm","setloginForm","username","password","logMeIn","event","preventDefault","method","url","data","then","response","console","log","setToken","access_token","setUsername","catch","error","headers","handleChange","name","value","target","prevState","children","className","loginContainer","id","loginHeader","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","box","required","submitButton","style","color","_c","$RefreshReg$"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/src/components/home/LoginPage.js"],"sourcesContent":["import React from 'react';\n\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// import NavBar from '../NavBar';\n\nimport styles from './home.module.css';\n\nfunction LoginPage(props) {\n    // const logoPath = '/images/secra_logo.png';\n    // const [token, setToken] = useState(props.token);\n    const navigate = useNavigate();\n    const [status, setStatus] = useState('');\n\n    // CAN INCLUDE EMAIL LATER; for now, just username and password\n    const [loginForm, setloginForm] = useState({\n        username: \"\",\n        password: \"\"\n    })\n\n    /** MAY NEED THIS CODE LATER for CSRF\n     * \n     *     // Create a payload with the username and password\n    const payload = {\n      username: username,\n      password: password,\n    };\n    \n    const csrfToken = getCookie('csrftoken'); // get CSRF token (to access resources in server endpoint)\n\n    // Set the CSRF token in the headers\n    const headers = {\n        'Content-Type': 'application/json',\n        'X-CSRF-TOKEN': csrfToken,\n    };\n\n    // Make a POST request using Axios\n    axios.post(baseURL + '/users/login', payload, { headers })\n     */\n\n    function logMeIn(event) {\n\n        event.preventDefault() // prevent default form submission behavior (because we want to connect to BE endpoint)\n        \n        axios({\n          method: \"POST\",\n          url:\"/login\", // endpoint in backend to login user and return access token\n          // remember, users module is just base url (e.g. localhost:5000/login but other modules are not\n          // e.g. localhost:5000/gpt/test)\n          data:{\n            username: loginForm.username,\n            password: loginForm.password\n           }\n        })\n        .then((response) => {\n\n            console.log(response);\n            console.log(response.data[\"success\"])\n\n            if (response.data[\"success\"]) { // success is True\n\n                console.log(\"HELP ME LORD JESUS\")\n\n                props.setToken(response.data.access_token)\n\n                console.log(\"success 1\")\n                console.log(loginForm.username)\n\n                props.setUsername(loginForm.username) // may want to first check if token is null\n\n                console.log(\"success 2\")\n                \n                console.log(\"Success: User logged in\")\n\n                navigate('/') // if successful login, redirect to the home page\n            }\n            else {\n                setloginForm(({ // update the login form (erase username and password)\n                    username: \"\",\n                    password: \"\"}))\n                \n                setStatus(response.data[\"msg\"]);\n            }\n        }).catch((error) => {\n          if (error.response) {\n            console.log(error.response)\n            console.log(error.response.status)\n            console.log(error.response.headers)\n            }\n        })\n  \n    }\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setloginForm(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    }\n\n    return (\n        <>\n            <div className={styles.loginContainer}>\n                <h3 id={styles.loginHeader}>Login</h3>\n\n                {/** The login form is here below */}\n\n                <form onSubmit={logMeIn}>\n                    <label>\n                        Username:\n                        <input type=\"text\" value={loginForm.username} onChange={handleChange} name=\"username\" placeholder=\"Username\" className={styles.box} required/>\n                    </label>\n\n                    <br />\n\n                    <label>\n                        Password:\n                        <input type=\"password\" value={loginForm.password} onChange={handleChange} name=\"password\" placeholder=\"Password\" className={styles.box} required />\n                    </label>\n\n                    <br />\n                        <button id={styles.submitButton} type=\"submit\">Login</button>\n                </form>\n\n                <br />\n\n                <p style={{color: 'red'}}>{status}</p> {/** For the error status message */}\n\n            </div>\n        </>\n    );\n}\n\nexport default LoginPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}