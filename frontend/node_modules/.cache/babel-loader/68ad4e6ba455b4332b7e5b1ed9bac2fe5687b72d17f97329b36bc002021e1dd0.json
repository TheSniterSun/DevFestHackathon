{"ast":null,"code":"var _jsxFileName = \"/Users/brandonpae/Desktop/DevFestHackathon/frontend/src/components/chat/TextBubble.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\n// import \"./events.css\";\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\nimport axios from 'axios'; // Import Axios\n\nimport styles from './chat.module.css';\n\n// import Button from 'react-bootstrap/Button';\n\n// this is only for rendering a text bubble\n// we should know 2 things: \n// 1. Text: Text itself\n// 2. Pos: Left or right\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TextBubble({\n  text,\n  sender\n}) {\n  _s();\n  const response = props.response;\n\n  // const logoPath = '/images/secra_logo.png';\n  // const [text, setText] = useState('');\n  const baseURL = \"http://localhost:8000\"; // for local dev this is the backend server\n  // const { getCookie } = useContext(AuthContext);\n\n  const [loadingText, setLoadingText] = useState(\"Generating response.\");\n  useEffect(() => {\n    let intervalId;\n    if (response === \"generating\") {\n      intervalId = setInterval(() => {\n        setLoadingText(prev => {\n          const dotCount = (prev.match(/\\./g) || []).length;\n          if (dotCount < 3) {\n            return prev + \".\";\n          } else {\n            return \"Generating response\";\n          }\n        });\n      }, 600);\n    }\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [response]);\n  function renderMessage() {\n    if (sender === 'user') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.bubble} ${styles.user}`,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this);\n    } else {\n      // assistant\n      if (text === \"generating\") {}\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.bubble} ${styles.assistant}`,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this);\n    }\n  }\n\n  // ONCE USER SUBMITS TEXT MESSAGE, IT SHOULD SHOW UP AS A TEXT BUBBLE ON SCREEN\n  // ALSO NEED TO SUBMIT TO DJANGO ENDPOINT\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderMessage()\n  }, void 0, false);\n}\n_s(TextBubble, \"JZz+qnimQVMSCd5wz8IMq1Al+4w=\");\n_c = TextBubble;\nexport default TextBubble;\nvar _c;\n$RefreshReg$(_c, \"TextBubble\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","TextBubble","text","sender","_s","response","props","baseURL","loadingText","setLoadingText","intervalId","setInterval","prev","dotCount","match","length","clearInterval","renderMessage","className","bubble","user","children","fileName","_jsxFileName","lineNumber","columnNumber","assistant","_c","$RefreshReg$"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/src/components/chat/TextBubble.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n// import \"./events.css\";\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\nimport axios from 'axios'; // Import Axios\n\nimport styles from './chat.module.css';\n\n// import Button from 'react-bootstrap/Button';\n\n// this is only for rendering a text bubble\n// we should know 2 things: \n// 1. Text: Text itself\n// 2. Pos: Left or right\n\nfunction TextBubble({text, sender}) {\n\n    const response = props.response;\n    \n    // const logoPath = '/images/secra_logo.png';\n    // const [text, setText] = useState('');\n    const baseURL = \"http://localhost:8000\"; // for local dev this is the backend server\n    // const { getCookie } = useContext(AuthContext);\n\n    const [loadingText, setLoadingText] = useState(\"Generating response.\");\n\n    useEffect(() => {\n        let intervalId;\n\n        if (response === \"generating\") {\n            intervalId = setInterval(() => {\n                setLoadingText(prev => { \n                    const dotCount = (prev.match(/\\./g) || []).length;\n                    if (dotCount < 3) {\n                        return prev + \".\";\n                    } else {\n                        return \"Generating response\";\n                    }\n                });\n            }, 600);\n        }\n\n        return () => {\n            if (intervalId) {\n                clearInterval(intervalId);\n            }\n        };\n    }, [response]);\n\n    function renderMessage() {\n        if (sender === 'user') {\n           return <div className={`${styles.bubble} ${styles.user}`}>{text}</div>;\n        }\n        else { // assistant\n            if (text === \"generating\") {\n\n            }\n           return <div className={`${styles.bubble} ${styles.assistant}`}>{text}</div>;\n        }\n    }\n\n    \n    \n    // ONCE USER SUBMITS TEXT MESSAGE, IT SHOULD SHOW UP AS A TEXT BUBBLE ON SCREEN\n    // ALSO NEED TO SUBMIT TO DJANGO ENDPOINT\n\n    return (\n        <> \n            {/* now, with using CSS module, need to change how we set className */ }\n\n            {renderMessage()}\n        </>\n    );\n}\n\nexport default TextBubble;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC;AACA,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;;AAEA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,UAAUA,CAAC;EAACC,IAAI;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAEhC,MAAMC,QAAQ,GAAGC,KAAK,CAACD,QAAQ;;EAE/B;EACA;EACA,MAAME,OAAO,GAAG,uBAAuB,CAAC,CAAC;EACzC;;EAEA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,sBAAsB,CAAC;EAEtEC,SAAS,CAAC,MAAM;IACZ,IAAIiB,UAAU;IAEd,IAAIL,QAAQ,KAAK,YAAY,EAAE;MAC3BK,UAAU,GAAGC,WAAW,CAAC,MAAM;QAC3BF,cAAc,CAACG,IAAI,IAAI;UACnB,MAAMC,QAAQ,GAAG,CAACD,IAAI,CAACE,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAEC,MAAM;UACjD,IAAIF,QAAQ,GAAG,CAAC,EAAE;YACd,OAAOD,IAAI,GAAG,GAAG;UACrB,CAAC,MAAM;YACH,OAAO,qBAAqB;UAChC;QACJ,CAAC,CAAC;MACN,CAAC,EAAE,GAAG,CAAC;IACX;IAEA,OAAO,MAAM;MACT,IAAIF,UAAU,EAAE;QACZM,aAAa,CAACN,UAAU,CAAC;MAC7B;IACJ,CAAC;EACL,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,SAASY,aAAaA,CAAA,EAAG;IACrB,IAAId,MAAM,KAAK,MAAM,EAAE;MACpB,oBAAOL,OAAA;QAAKoB,SAAS,EAAG,GAAEtB,MAAM,CAACuB,MAAO,IAAGvB,MAAM,CAACwB,IAAK,EAAE;QAAAC,QAAA,EAAEnB;MAAI;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACzE,CAAC,MACI;MAAE;MACH,IAAIvB,IAAI,KAAK,YAAY,EAAE,CAE3B;MACD,oBAAOJ,OAAA;QAAKoB,SAAS,EAAG,GAAEtB,MAAM,CAACuB,MAAO,IAAGvB,MAAM,CAAC8B,SAAU,EAAE;QAAAL,QAAA,EAAEnB;MAAI;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAC9E;EACJ;;EAIA;EACA;;EAEA,oBACI3B,OAAA,CAAAE,SAAA;IAAAqB,QAAA,EAGKJ,aAAa,CAAC;EAAC,gBAClB,CAAC;AAEX;AAACb,EAAA,CA1DQH,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AA4DnB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}