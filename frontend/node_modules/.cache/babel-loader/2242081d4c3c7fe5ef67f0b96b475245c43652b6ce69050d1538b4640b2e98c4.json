{"ast":null,"code":"var _jsxFileName = \"/Users/brandonpae/Desktop/secra-code/frontend/src/components/chat/AssistantResponse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Event from './Event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AssistantResponse(props) {\n  _s();\n  const response = props.response; // text response (\"generating\" or the actual returned value, which includes \"\")\n\n  const [loadingText, setLoadingText] = useState(\"Generating response.\");\n  useEffect(() => {\n    let intervalId;\n    if (response === \"generating\") {\n      intervalId = setInterval(() => {\n        setLoadingText(prev => {\n          const dotCount = (prev.match(/\\./g) || []).length;\n          if (dotCount < 3) {\n            return prev + \".\";\n          } else {\n            return \"Generating response\";\n          }\n        });\n      }, 600);\n    }\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [response]);\n  const isJson = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n  const renderEvents = data => {\n    // this creates \n    if (data && data.times) {\n      // if times exists\n      return data.times.map((timeObj, index) =>\n      /*#__PURE__*/\n      // render a new event object with specified params\n      _jsxDEV(Event, {\n        timeInfo: timeObj,\n        summary: data.summary,\n        location: data.location,\n        timezone: data.timezone\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this));\n    }\n    return null;\n  };\n  const renderResponse = () => {\n    if (response === '') {\n      return null; // empty response\n    } else if (response === 'generating') {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: loadingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    } else if (isJson(response)) {\n      const parsedResponse = JSON.parse(response);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here are some suggestions based on your availability:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), renderEvents(parsedResponse)]\n      }, void 0, true);\n    } else {\n      // this should NOT occur\n      throw new Error(\"response is not valid\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"response\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Assistant Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), renderResponse()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(AssistantResponse, \"JZz+qnimQVMSCd5wz8IMq1Al+4w=\");\n_c = AssistantResponse;\nexport default AssistantResponse;\nvar _c;\n$RefreshReg$(_c, \"AssistantResponse\");","map":{"version":3,"names":["React","useState","useEffect","Event","jsxDEV","_jsxDEV","Fragment","_Fragment","AssistantResponse","props","_s","response","loadingText","setLoadingText","intervalId","setInterval","prev","dotCount","match","length","clearInterval","isJson","str","JSON","parse","e","renderEvents","data","times","map","timeObj","index","timeInfo","summary","location","timezone","fileName","_jsxFileName","lineNumber","columnNumber","renderResponse","children","parsedResponse","Error","id","_c","$RefreshReg$"],"sources":["/Users/brandonpae/Desktop/secra-code/frontend/src/components/chat/AssistantResponse.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Event from './Event';\n\nfunction AssistantResponse(props) {\n    const response = props.response; // text response (\"generating\" or the actual returned value, which includes \"\")\n   \n    const [loadingText, setLoadingText] = useState(\"Generating response.\");\n\n    useEffect(() => {\n        let intervalId;\n\n        if (response === \"generating\") {\n            intervalId = setInterval(() => {\n                setLoadingText(prev => { \n                    const dotCount = (prev.match(/\\./g) || []).length;\n                    if (dotCount < 3) {\n                        return prev + \".\";\n                    } else {\n                        return \"Generating response\";\n                    }\n                });\n            }, 600);\n        }\n\n        return () => {\n            if (intervalId) {\n                clearInterval(intervalId);\n            }\n        };\n    }, [response]);\n\n    const isJson = (str) => {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n\n    const renderEvents = (data) => { // this creates \n        if (data && data.times) { // if times exists\n            return data.times.map((timeObj, index) => ( // render a new event object with specified params\n                <Event key={index} timeInfo={timeObj} summary={data.summary} location={data.location} timezone={data.timezone} />\n            ));\n        }\n        return null;\n    };\n\n    const renderResponse = () => {\n        if (response === '') {\n            return null; // empty response\n        } else if (response === 'generating') {\n            return <p>{loadingText}</p>;\n        } else if (isJson(response)) {\n            const parsedResponse = JSON.parse(response);\n            return <>\n            <p>Here are some suggestions based on your availability:</p>\n            {renderEvents(parsedResponse)}\n            </>\n        } else { // this should NOT occur\n            throw new Error(\"response is not valid\");\n        }\n    };\n\n    return (\n        <div id=\"response\">\n            <h3>Assistant Response</h3>\n            {renderResponse()}\n        </div>\n    );\n}\n\nexport default AssistantResponse;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}