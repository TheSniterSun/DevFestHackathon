{"ast":null,"code":"var _jsxFileName = \"/Users/brandonpae/Desktop/secra-code/frontend/src/components/chat/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from '../NavBar';\nimport TextBubble from './TextBubble';\nimport styles from './chat.module.css';\nimport axios from 'axios'; // Import Axios\n\nimport TextEntry from './TextEntry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL = 'auth'; // change as needed\n\nfunction ChatPage(props) {\n  _s();\n  return 4;\n  const logoPath = '/images/secra_logo.png';\n  const [messages, setMessages] = useState(Array(0)); // empty array to start\n  const navigate = useNavigate();\n\n  // use an array of dictionaries\n  // for each dict:\n  // prop 1: message itself\n  // prop 2: loc (left vs. right for assistant vs. user)\n\n  function onTextSubmit(new_message) {\n    setMessages(messages => [...messages, new_message] // this message is a dict (has text, sender as 2 fields)\n    );\n  }\n  ;\n\n  // Generate JSX code for Display each item, Add array index as the key\n  // for pos, it should be \"left\" for assistant and \"right\" for user\n  const renderMessages = messages.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TextBubble, {\n      text: item['text'],\n      sender: item['sender']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"header\",\n        children: \"Your Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), renderMessages, /*#__PURE__*/_jsxDEV(TextEntry, {\n        onTextSubmit: onTextSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ChatPage, \"l84c969dN0n70xYyjryzbVeeeIg=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","NavBar","TextBubble","styles","axios","TextEntry","jsxDEV","_jsxDEV","Fragment","_Fragment","URL","ChatPage","props","_s","logoPath","messages","setMessages","Array","navigate","onTextSubmit","new_message","renderMessages","map","item","index","children","text","sender","fileName","_jsxFileName","lineNumber","columnNumber","className","id","_c","$RefreshReg$"],"sources":["/Users/brandonpae/Desktop/secra-code/frontend/src/components/chat/ChatPage.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\n\n\n\nimport { useNavigate } from 'react-router-dom';\nimport NavBar from '../NavBar';\nimport TextBubble from './TextBubble';\n\nimport styles from './chat.module.css';\nimport axios from 'axios'; // Import Axios\n\n\nimport TextEntry from './TextEntry';\nconst URL = 'auth'; // change as needed\n\nfunction ChatPage(props) {\n\n    return 4\n\n    const logoPath = '/images/secra_logo.png';\n    const [messages, setMessages] = useState(Array(0)); // empty array to start\n    const navigate = useNavigate();\n\n    // use an array of dictionaries\n    // for each dict:\n    // prop 1: message itself\n    // prop 2: loc (left vs. right for assistant vs. user)\n\n    function onTextSubmit(new_message) {\n        setMessages(messages => (\n            [...messages, new_message] // this message is a dict (has text, sender as 2 fields)\n        ));\n    };\n\n    // Generate JSX code for Display each item, Add array index as the key\n    // for pos, it should be \"left\" for assistant and \"right\" for user\n    const renderMessages = messages.map((item, index) => \n        <div key={index}>\n            <TextBubble text={item['text']} sender={item['sender']}/>\n        </div>\n    );\n\n    return (\n        <>  \n            <div className=\"container\">\n                <h1 id=\"header\">Your Chatbot</h1>\n                \n                {renderMessages}\n\n                <TextEntry onTextSubmit={onTextSubmit}/>\n            </div>\n        </>\n    );\n}\n\nexport default ChatPage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,OAAO;AAIlC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,UAAU,MAAM,cAAc;AAErC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;;AAG3B,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACpC,MAAMC,GAAG,GAAG,MAAM,CAAC,CAAC;;AAEpB,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAErB,OAAO,CAAC;EAER,MAAMC,QAAQ,GAAG,wBAAwB;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAACoB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpD,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;;EAE9B;EACA;EACA;EACA;;EAEA,SAASmB,YAAYA,CAACC,WAAW,EAAE;IAC/BJ,WAAW,CAACD,QAAQ,IAChB,CAAC,GAAGA,QAAQ,EAAEK,WAAW,CAAC,CAAC;IAC9B,CAAC;EACN;EAAC;;EAED;EACA;EACA,MAAMC,cAAc,GAAGN,QAAQ,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC5CjB,OAAA;IAAAkB,QAAA,eACIlB,OAAA,CAACL,UAAU;MAACwB,IAAI,EAAEH,IAAI,CAAC,MAAM,CAAE;MAACI,MAAM,EAAEJ,IAAI,CAAC,QAAQ;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,GADnDP,KAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CACT,CAAC;EAED,oBACIxB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACIlB,OAAA;MAAKyB,SAAS,EAAC,WAAW;MAAAP,QAAA,gBACtBlB,OAAA;QAAI0B,EAAE,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEhCV,cAAc,eAEfd,OAAA,CAACF,SAAS;QAACc,YAAY,EAAEA;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC,gBACR,CAAC;AAEX;AAAClB,EAAA,CAtCQF,QAAQ;EAAA,QAMIX,WAAW;AAAA;AAAAkC,EAAA,GANvBvB,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}