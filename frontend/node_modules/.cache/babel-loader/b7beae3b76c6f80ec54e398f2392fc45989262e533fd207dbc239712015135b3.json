{"ast":null,"code":"import { featureCollection } from '@turf/helpers';\n\n// http://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\n\n/**\n * Takes a {@link FeatureCollection} and returns a FeatureCollection with given number of {@link Feature|features} at random.\n *\n * @name sample\n * @param {FeatureCollection} featurecollection set of input features\n * @param {number} num number of features to select\n * @returns {FeatureCollection} a FeatureCollection with `n` features\n * @example\n * var points = turf.randomPoint(100, {bbox: [-80, 30, -60, 60]});\n *\n * var sample = turf.sample(points, 5);\n *\n * //addToMap\n * var addToMap = [points, sample]\n * turf.featureEach(sample, function (currentFeature) {\n *   currentFeature.properties['marker-size'] = 'large';\n *   currentFeature.properties['marker-color'] = '#000';\n * });\n */\nfunction sample(featurecollection, num) {\n  if (!featurecollection) throw new Error(\"featurecollection is required\");\n  if (num === null || num === undefined) throw new Error(\"num is required\");\n  if (typeof num !== \"number\") throw new Error(\"num must be a number\");\n  var outFC = featureCollection(getRandomSubarray(featurecollection.features, num));\n  return outFC;\n}\nfunction getRandomSubarray(arr, size) {\n  var shuffled = arr.slice(0),\n    i = arr.length,\n    min = i - size,\n    temp,\n    index;\n  while (i-- > min) {\n    index = Math.floor((i + 1) * Math.random());\n    temp = shuffled[index];\n    shuffled[index] = shuffled[i];\n    shuffled[i] = temp;\n  }\n  return shuffled.slice(min);\n}\nexport default sample;","map":{"version":3,"names":["featureCollection","sample","featurecollection","num","Error","undefined","outFC","getRandomSubarray","features","arr","size","shuffled","slice","i","length","min","temp","index","Math","floor","random"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/node_modules/@turf/sample/dist/es/index.js"],"sourcesContent":["import { featureCollection } from '@turf/helpers';\n\n// http://stackoverflow.com/questions/11935175/sampling-a-random-subset-from-an-array\n\n/**\n * Takes a {@link FeatureCollection} and returns a FeatureCollection with given number of {@link Feature|features} at random.\n *\n * @name sample\n * @param {FeatureCollection} featurecollection set of input features\n * @param {number} num number of features to select\n * @returns {FeatureCollection} a FeatureCollection with `n` features\n * @example\n * var points = turf.randomPoint(100, {bbox: [-80, 30, -60, 60]});\n *\n * var sample = turf.sample(points, 5);\n *\n * //addToMap\n * var addToMap = [points, sample]\n * turf.featureEach(sample, function (currentFeature) {\n *   currentFeature.properties['marker-size'] = 'large';\n *   currentFeature.properties['marker-color'] = '#000';\n * });\n */\nfunction sample(featurecollection, num) {\n  if (!featurecollection) throw new Error(\"featurecollection is required\");\n  if (num === null || num === undefined) throw new Error(\"num is required\");\n  if (typeof num !== \"number\") throw new Error(\"num must be a number\");\n\n  var outFC = featureCollection(\n    getRandomSubarray(featurecollection.features, num)\n  );\n  return outFC;\n}\n\nfunction getRandomSubarray(arr, size) {\n  var shuffled = arr.slice(0),\n    i = arr.length,\n    min = i - size,\n    temp,\n    index;\n  while (i-- > min) {\n    index = Math.floor((i + 1) * Math.random());\n    temp = shuffled[index];\n    shuffled[index] = shuffled[i];\n    shuffled[i] = temp;\n  }\n  return shuffled.slice(min);\n}\n\nexport default sample;\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,eAAe;;AAEjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAMA,CAACC,iBAAiB,EAAEC,GAAG,EAAE;EACtC,IAAI,CAACD,iBAAiB,EAAE,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;EACxE,IAAID,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKE,SAAS,EAAE,MAAM,IAAID,KAAK,CAAC,iBAAiB,CAAC;EACzE,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EAEpE,IAAIE,KAAK,GAAGN,iBAAiB,CAC3BO,iBAAiB,CAACL,iBAAiB,CAACM,QAAQ,EAAEL,GAAG,CACnD,CAAC;EACD,OAAOG,KAAK;AACd;AAEA,SAASC,iBAAiBA,CAACE,GAAG,EAAEC,IAAI,EAAE;EACpC,IAAIC,QAAQ,GAAGF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC;IACzBC,CAAC,GAAGJ,GAAG,CAACK,MAAM;IACdC,GAAG,GAAGF,CAAC,GAAGH,IAAI;IACdM,IAAI;IACJC,KAAK;EACP,OAAOJ,CAAC,EAAE,GAAGE,GAAG,EAAE;IAChBE,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACN,CAAC,GAAG,CAAC,IAAIK,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;IAC3CJ,IAAI,GAAGL,QAAQ,CAACM,KAAK,CAAC;IACtBN,QAAQ,CAACM,KAAK,CAAC,GAAGN,QAAQ,CAACE,CAAC,CAAC;IAC7BF,QAAQ,CAACE,CAAC,CAAC,GAAGG,IAAI;EACpB;EACA,OAAOL,QAAQ,CAACC,KAAK,CAACG,GAAG,CAAC;AAC5B;AAEA,eAAed,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}