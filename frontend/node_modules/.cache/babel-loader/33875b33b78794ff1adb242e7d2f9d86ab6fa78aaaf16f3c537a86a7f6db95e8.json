{"ast":null,"code":"var _jsxFileName = \"/Users/brandonpae/Desktop/DevFestHackathon/frontend/src/components/chat/AssistantResponse.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Event from './Event';\nimport styles from './chat.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AssistantResponse(props) {\n  _s();\n  const response = props.response; // text response (\"generating\" or the actual returned value, which includes \"\")\n\n  // NOTE: IF ANY STATE HERE CHANGES, THEN THE CHILD INSTANCES ALSO RE-RENDERS\n  // WHICH CAUSES THE INFINITE LOOPS\n\n  const [eventResponse, setEventResponse] = useState(''); // either \"\", \"waiting\", \"added\"\n\n  const [loadingText, setLoadingText] = useState(\"Generating response.\");\n  const [loadingEventText, setLoadingEventText] = useState(\"Adding to your calendar.\");\n  const [eventNum, setEventNum] = useState(0);\n  const isJson = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n  const renderEvents = data => {\n    // this creates \n    if (data && data.solutions) {\n      // if times exists\n      return data.solutions.map((timeObj, index) =>\n      /*#__PURE__*/\n      // render a new event object with specified params\n      _jsxDEV(Event, {\n        username: props.username,\n        timeInfo: timeObj\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this));\n    }\n    return null;\n  };\n  const renderResponse = () => {\n    if (response === '') {\n      return null; // empty response\n    } else if (isJson(response)) {\n      const parsedResponse = JSON.parse(response);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here are some suggestions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.eventsContainer,\n          children: renderEvents(parsedResponse)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } else {\n      // this should NOT occur\n      throw new Error(\"response is not valid\");\n    }\n  };\n\n  // I KNOW THE FUCKING ERROR\n  // eventResponse is never changed to another value! HEHEHEHEHEHEHEHEHE\n  // it's not really needed because it adds the event so quickly so\n\n  // for adding the calendar event specifically\n  const renderEventResponse = () => {\n    if (eventResponse === '') {\n      return null; // empty response\n    } else if (eventResponse === \"waiting\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: loadingEventText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true);\n    } else {\n      // for the real response\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Thank you for choosing \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.blueText,\n            children: [\"event \", eventNum]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 44\n          }, this), \"! It has been added to your calendar.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), \"To continue scheduling more events, please submit a new message above or refresh the page.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"response\",\n    children: [renderResponse(), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(AssistantResponse, \"o0863x4MZq2qoNBicQMfWlD0CeI=\");\n_c = AssistantResponse;\nexport default AssistantResponse;\nvar _c;\n$RefreshReg$(_c, \"AssistantResponse\");","map":{"version":3,"names":["React","useState","useEffect","Event","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","AssistantResponse","props","_s","response","eventResponse","setEventResponse","loadingText","setLoadingText","loadingEventText","setLoadingEventText","eventNum","setEventNum","isJson","str","JSON","parse","e","renderEvents","data","solutions","map","timeObj","index","username","timeInfo","fileName","_jsxFileName","lineNumber","columnNumber","renderResponse","parsedResponse","children","className","eventsContainer","Error","renderEventResponse","blueText","id","_c","$RefreshReg$"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/src/components/chat/AssistantResponse.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Event from './Event';\nimport styles from './chat.module.css';\n\nfunction AssistantResponse(props) {\n    const response = props.response; // text response (\"generating\" or the actual returned value, which includes \"\")\n    \n    // NOTE: IF ANY STATE HERE CHANGES, THEN THE CHILD INSTANCES ALSO RE-RENDERS\n    // WHICH CAUSES THE INFINITE LOOPS\n\n    const [eventResponse, setEventResponse] = useState(''); // either \"\", \"waiting\", \"added\"\n\n    const [loadingText, setLoadingText] = useState(\"Generating response.\");\n\n    const [loadingEventText, setLoadingEventText] = useState(\"Adding to your calendar.\");\n\n    const [eventNum, setEventNum] = useState(0);\n\n    const isJson = (str) => {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n\n    const renderEvents = (data) => { // this creates \n        if (data && data.solutions) { // if times exists\n            return data.solutions.map((timeObj, index) => ( // render a new event object with specified params\n                <Event \n                key={index} \n                username={props.username} \n                timeInfo={timeObj} />\n            ));\n        }\n        return null;\n    };\n\n    const renderResponse = () => {\n        if (response === '') {\n            return null; // empty response\n        } else if (isJson(response)) {\n            const parsedResponse = JSON.parse(response);\n            return (\n                <>  \n                    <p>Here are some suggestions:</p>\n                    \n                    <br />\n\n                    <div className={styles.eventsContainer}>\n                        {renderEvents(parsedResponse)}\n                    </div>\n                </>\n            );\n        } else { // this should NOT occur\n            throw new Error(\"response is not valid\");\n        }\n    };\n\n    // I KNOW THE FUCKING ERROR\n    // eventResponse is never changed to another value! HEHEHEHEHEHEHEHEHE\n    // it's not really needed because it adds the event so quickly so\n\n    // for adding the calendar event specifically\n    const renderEventResponse = () => {\n        if (eventResponse === '') {\n            return null; // empty response\n        } \n        else if (eventResponse === \"waiting\") {\n             return (<>\n\n             <br />\n             <p>{loadingEventText}</p>\n\n             </>);\n        }\n        else { // for the real response\n            return (\n            <>\n            <br />\n                <p>\n                    Thank you for choosing <span className={styles.blueText}>event {eventNum}</span>! It has been added to your calendar.\n\n                    <br />\n                    To continue scheduling more events, please submit a new message above or refresh the page.\n                </p>\n            </>);\n        } \n    };\n\n    return (\n        <div id=\"response\">\n            {renderResponse()} {/* This includes the event suggestions */}\n        </div>\n    );\n}\n\nexport default AssistantResponse;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}