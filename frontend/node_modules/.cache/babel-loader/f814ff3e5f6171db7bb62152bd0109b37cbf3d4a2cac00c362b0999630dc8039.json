{"ast":null,"code":"/**\n * BezierSpline\n * https://github.com/leszekr/bezier-spline-js\n *\n * @private\n * @copyright\n * Copyright (c) 2013 Leszek Rybicki\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar Spline = /** @class */function () {\n  function Spline(options) {\n    this.points = options.points || [];\n    this.duration = options.duration || 10000;\n    this.sharpness = options.sharpness || 0.85;\n    this.centers = [];\n    this.controls = [];\n    this.stepLength = options.stepLength || 60;\n    this.length = this.points.length;\n    this.delay = 0;\n    // this is to ensure compatibility with the 2d version\n    for (var i = 0; i < this.length; i++) {\n      this.points[i].z = this.points[i].z || 0;\n    }\n    for (var i = 0; i < this.length - 1; i++) {\n      var p1 = this.points[i];\n      var p2 = this.points[i + 1];\n      this.centers.push({\n        x: (p1.x + p2.x) / 2,\n        y: (p1.y + p2.y) / 2,\n        z: (p1.z + p2.z) / 2\n      });\n    }\n    this.controls.push([this.points[0], this.points[0]]);\n    for (var i = 0; i < this.centers.length - 1; i++) {\n      var dx = this.points[i + 1].x - (this.centers[i].x + this.centers[i + 1].x) / 2;\n      var dy = this.points[i + 1].y - (this.centers[i].y + this.centers[i + 1].y) / 2;\n      var dz = this.points[i + 1].z - (this.centers[i].y + this.centers[i + 1].z) / 2;\n      this.controls.push([{\n        x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i].x + dx),\n        y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i].y + dy),\n        z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i].z + dz)\n      }, {\n        x: (1.0 - this.sharpness) * this.points[i + 1].x + this.sharpness * (this.centers[i + 1].x + dx),\n        y: (1.0 - this.sharpness) * this.points[i + 1].y + this.sharpness * (this.centers[i + 1].y + dy),\n        z: (1.0 - this.sharpness) * this.points[i + 1].z + this.sharpness * (this.centers[i + 1].z + dz)\n      }]);\n    }\n    this.controls.push([this.points[this.length - 1], this.points[this.length - 1]]);\n    this.steps = this.cacheSteps(this.stepLength);\n    return this;\n  }\n  /**\n   * Caches an array of equidistant (more or less) points on the curve.\n   */\n  Spline.prototype.cacheSteps = function (mindist) {\n    var steps = [];\n    var laststep = this.pos(0);\n    steps.push(0);\n    for (var t = 0; t < this.duration; t += 10) {\n      var step = this.pos(t);\n      var dist = Math.sqrt((step.x - laststep.x) * (step.x - laststep.x) + (step.y - laststep.y) * (step.y - laststep.y) + (step.z - laststep.z) * (step.z - laststep.z));\n      if (dist > mindist) {\n        steps.push(t);\n        laststep = step;\n      }\n    }\n    return steps;\n  };\n  /**\n   * returns angle and speed in the given point in the curve\n   */\n  Spline.prototype.vector = function (t) {\n    var p1 = this.pos(t + 10);\n    var p2 = this.pos(t - 10);\n    return {\n      angle: 180 * Math.atan2(p1.y - p2.y, p1.x - p2.x) / 3.14,\n      speed: Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) + (p2.y - p1.y) * (p2.y - p1.y) + (p2.z - p1.z) * (p2.z - p1.z))\n    };\n  };\n  /**\n   * Gets the position of the point, given time.\n   *\n   * WARNING: The speed is not constant. The time it takes between control points is constant.\n   *\n   * For constant speed, use Spline.steps[i];\n   */\n  Spline.prototype.pos = function (time) {\n    var t = time - this.delay;\n    if (t < 0) {\n      t = 0;\n    }\n    if (t > this.duration) {\n      t = this.duration - 1;\n    }\n    // t = t-this.delay;\n    var t2 = t / this.duration;\n    if (t2 >= 1) {\n      return this.points[this.length - 1];\n    }\n    var n = Math.floor((this.points.length - 1) * t2);\n    var t1 = (this.length - 1) * t2 - n;\n    return bezier(t1, this.points[n], this.controls[n][1], this.controls[n + 1][0], this.points[n + 1]);\n  };\n  return Spline;\n}();\nexport default Spline;\nfunction bezier(t, p1, c1, c2, p2) {\n  var b = B(t);\n  var pos = {\n    x: p2.x * b[0] + c2.x * b[1] + c1.x * b[2] + p1.x * b[3],\n    y: p2.y * b[0] + c2.y * b[1] + c1.y * b[2] + p1.y * b[3],\n    z: p2.z * b[0] + c2.z * b[1] + c1.z * b[2] + p1.z * b[3]\n  };\n  return pos;\n}\nfunction B(t) {\n  var t2 = t * t;\n  var t3 = t2 * t;\n  return [t3, 3 * t2 * (1 - t), 3 * t * (1 - t) * (1 - t), (1 - t) * (1 - t) * (1 - t)];\n}","map":{"version":3,"names":["Spline","options","points","duration","sharpness","centers","controls","stepLength","length","delay","i","z","p1","p2","push","x","y","dx","dy","dz","steps","cacheSteps","prototype","mindist","laststep","pos","t","step","dist","Math","sqrt","vector","angle","atan2","speed","time","t2","n","floor","t1","bezier","c1","c2","b","B","t3"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/node_modules/@turf/bezier-spline/dist/es/lib/spline.js"],"sourcesContent":["/**\n * BezierSpline\n * https://github.com/leszekr/bezier-spline-js\n *\n * @private\n * @copyright\n * Copyright (c) 2013 Leszek Rybicki\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar Spline = /** @class */ (function () {\n    function Spline(options) {\n        this.points = options.points || [];\n        this.duration = options.duration || 10000;\n        this.sharpness = options.sharpness || 0.85;\n        this.centers = [];\n        this.controls = [];\n        this.stepLength = options.stepLength || 60;\n        this.length = this.points.length;\n        this.delay = 0;\n        // this is to ensure compatibility with the 2d version\n        for (var i = 0; i < this.length; i++) {\n            this.points[i].z = this.points[i].z || 0;\n        }\n        for (var i = 0; i < this.length - 1; i++) {\n            var p1 = this.points[i];\n            var p2 = this.points[i + 1];\n            this.centers.push({\n                x: (p1.x + p2.x) / 2,\n                y: (p1.y + p2.y) / 2,\n                z: (p1.z + p2.z) / 2,\n            });\n        }\n        this.controls.push([this.points[0], this.points[0]]);\n        for (var i = 0; i < this.centers.length - 1; i++) {\n            var dx = this.points[i + 1].x - (this.centers[i].x + this.centers[i + 1].x) / 2;\n            var dy = this.points[i + 1].y - (this.centers[i].y + this.centers[i + 1].y) / 2;\n            var dz = this.points[i + 1].z - (this.centers[i].y + this.centers[i + 1].z) / 2;\n            this.controls.push([\n                {\n                    x: (1.0 - this.sharpness) * this.points[i + 1].x +\n                        this.sharpness * (this.centers[i].x + dx),\n                    y: (1.0 - this.sharpness) * this.points[i + 1].y +\n                        this.sharpness * (this.centers[i].y + dy),\n                    z: (1.0 - this.sharpness) * this.points[i + 1].z +\n                        this.sharpness * (this.centers[i].z + dz),\n                },\n                {\n                    x: (1.0 - this.sharpness) * this.points[i + 1].x +\n                        this.sharpness * (this.centers[i + 1].x + dx),\n                    y: (1.0 - this.sharpness) * this.points[i + 1].y +\n                        this.sharpness * (this.centers[i + 1].y + dy),\n                    z: (1.0 - this.sharpness) * this.points[i + 1].z +\n                        this.sharpness * (this.centers[i + 1].z + dz),\n                },\n            ]);\n        }\n        this.controls.push([\n            this.points[this.length - 1],\n            this.points[this.length - 1],\n        ]);\n        this.steps = this.cacheSteps(this.stepLength);\n        return this;\n    }\n    /**\n     * Caches an array of equidistant (more or less) points on the curve.\n     */\n    Spline.prototype.cacheSteps = function (mindist) {\n        var steps = [];\n        var laststep = this.pos(0);\n        steps.push(0);\n        for (var t = 0; t < this.duration; t += 10) {\n            var step = this.pos(t);\n            var dist = Math.sqrt((step.x - laststep.x) * (step.x - laststep.x) +\n                (step.y - laststep.y) * (step.y - laststep.y) +\n                (step.z - laststep.z) * (step.z - laststep.z));\n            if (dist > mindist) {\n                steps.push(t);\n                laststep = step;\n            }\n        }\n        return steps;\n    };\n    /**\n     * returns angle and speed in the given point in the curve\n     */\n    Spline.prototype.vector = function (t) {\n        var p1 = this.pos(t + 10);\n        var p2 = this.pos(t - 10);\n        return {\n            angle: (180 * Math.atan2(p1.y - p2.y, p1.x - p2.x)) / 3.14,\n            speed: Math.sqrt((p2.x - p1.x) * (p2.x - p1.x) +\n                (p2.y - p1.y) * (p2.y - p1.y) +\n                (p2.z - p1.z) * (p2.z - p1.z)),\n        };\n    };\n    /**\n     * Gets the position of the point, given time.\n     *\n     * WARNING: The speed is not constant. The time it takes between control points is constant.\n     *\n     * For constant speed, use Spline.steps[i];\n     */\n    Spline.prototype.pos = function (time) {\n        var t = time - this.delay;\n        if (t < 0) {\n            t = 0;\n        }\n        if (t > this.duration) {\n            t = this.duration - 1;\n        }\n        // t = t-this.delay;\n        var t2 = t / this.duration;\n        if (t2 >= 1) {\n            return this.points[this.length - 1];\n        }\n        var n = Math.floor((this.points.length - 1) * t2);\n        var t1 = (this.length - 1) * t2 - n;\n        return bezier(t1, this.points[n], this.controls[n][1], this.controls[n + 1][0], this.points[n + 1]);\n    };\n    return Spline;\n}());\nexport default Spline;\nfunction bezier(t, p1, c1, c2, p2) {\n    var b = B(t);\n    var pos = {\n        x: p2.x * b[0] + c2.x * b[1] + c1.x * b[2] + p1.x * b[3],\n        y: p2.y * b[0] + c2.y * b[1] + c1.y * b[2] + p1.y * b[3],\n        z: p2.z * b[0] + c2.z * b[1] + c1.z * b[2] + p1.z * b[3],\n    };\n    return pos;\n}\nfunction B(t) {\n    var t2 = t * t;\n    var t3 = t2 * t;\n    return [\n        t3,\n        3 * t2 * (1 - t),\n        3 * t * (1 - t) * (1 - t),\n        (1 - t) * (1 - t) * (1 - t),\n    ];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}