{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n  var result = [Infinity, Infinity, -Infinity, -Infinity];\n  meta_1.coordEach(geojson, function (coord) {\n    if (result[0] > coord[0]) {\n      result[0] = coord[0];\n    }\n    if (result[1] > coord[1]) {\n      result[1] = coord[1];\n    }\n    if (result[2] < coord[0]) {\n      result[2] = coord[0];\n    }\n    if (result[3] < coord[1]) {\n      result[3] = coord[1];\n    }\n  });\n  return result;\n}\nbbox[\"default\"] = bbox;\nexports.default = bbox;","map":{"version":3,"names":["Object","defineProperty","exports","value","meta_1","require","bbox","geojson","result","Infinity","coordEach","coord","default"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/node_modules/@turf/bbox/dist/js/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    meta_1.coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexports.default = bbox;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,YAAY,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,IAAIA,CAACC,OAAO,EAAE;EACnB,IAAIC,MAAM,GAAG,CAACC,QAAQ,EAAEA,QAAQ,EAAE,CAACA,QAAQ,EAAE,CAACA,QAAQ,CAAC;EACvDL,MAAM,CAACM,SAAS,CAACH,OAAO,EAAE,UAAUI,KAAK,EAAE;IACvC,IAAIH,MAAM,CAAC,CAAC,CAAC,GAAGG,KAAK,CAAC,CAAC,CAAC,EAAE;MACtBH,MAAM,CAAC,CAAC,CAAC,GAAGG,KAAK,CAAC,CAAC,CAAC;IACxB;IACA,IAAIH,MAAM,CAAC,CAAC,CAAC,GAAGG,KAAK,CAAC,CAAC,CAAC,EAAE;MACtBH,MAAM,CAAC,CAAC,CAAC,GAAGG,KAAK,CAAC,CAAC,CAAC;IACxB;IACA,IAAIH,MAAM,CAAC,CAAC,CAAC,GAAGG,KAAK,CAAC,CAAC,CAAC,EAAE;MACtBH,MAAM,CAAC,CAAC,CAAC,GAAGG,KAAK,CAAC,CAAC,CAAC;IACxB;IACA,IAAIH,MAAM,CAAC,CAAC,CAAC,GAAGG,KAAK,CAAC,CAAC,CAAC,EAAE;MACtBH,MAAM,CAAC,CAAC,CAAC,GAAGG,KAAK,CAAC,CAAC,CAAC;IACxB;EACJ,CAAC,CAAC;EACF,OAAOH,MAAM;AACjB;AACAF,IAAI,CAAC,SAAS,CAAC,GAAGA,IAAI;AACtBJ,OAAO,CAACU,OAAO,GAAGN,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}