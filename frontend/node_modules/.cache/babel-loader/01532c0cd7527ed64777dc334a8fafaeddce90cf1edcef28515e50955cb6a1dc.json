{"ast":null,"code":"import { featureEach, coordEach } from '@turf/meta';\nimport { point, featureCollection } from '@turf/helpers';\n\n/**\n * Takes a feature or set of features and returns all positions as {@link Point|points}.\n *\n * @name explode\n * @param {GeoJSON} geojson input features\n * @returns {FeatureCollection<point>} points representing the exploded input features\n * @throws {Error} if it encounters an unknown geometry type\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var explode = turf.explode(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, explode]\n */\nfunction explode(geojson) {\n  var points = [];\n  if (geojson.type === \"FeatureCollection\") {\n    featureEach(geojson, function (feature) {\n      coordEach(feature, function (coord) {\n        points.push(point(coord, feature.properties));\n      });\n    });\n  } else {\n    coordEach(geojson, function (coord) {\n      points.push(point(coord, geojson.properties));\n    });\n  }\n  return featureCollection(points);\n}\nexport default explode;","map":{"version":3,"names":["featureEach","coordEach","point","featureCollection","explode","geojson","points","type","feature","coord","push","properties"],"sources":["/Users/brandonpae/Desktop/DevFestHackathon/frontend/node_modules/@turf/explode/dist/es/index.js"],"sourcesContent":["import { featureEach, coordEach } from '@turf/meta';\nimport { point, featureCollection } from '@turf/helpers';\n\n/**\n * Takes a feature or set of features and returns all positions as {@link Point|points}.\n *\n * @name explode\n * @param {GeoJSON} geojson input features\n * @returns {FeatureCollection<point>} points representing the exploded input features\n * @throws {Error} if it encounters an unknown geometry type\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var explode = turf.explode(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, explode]\n */\nfunction explode(geojson) {\n  var points = [];\n  if (geojson.type === \"FeatureCollection\") {\n    featureEach(geojson, function (feature) {\n      coordEach(feature, function (coord) {\n        points.push(point(coord, feature.properties));\n      });\n    });\n  } else {\n    coordEach(geojson, function (coord) {\n      points.push(point(coord, geojson.properties));\n    });\n  }\n  return featureCollection(points);\n}\n\nexport default explode;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,YAAY;AACnD,SAASC,KAAK,EAAEC,iBAAiB,QAAQ,eAAe;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAOA,CAACC,OAAO,EAAE;EACxB,IAAIC,MAAM,GAAG,EAAE;EACf,IAAID,OAAO,CAACE,IAAI,KAAK,mBAAmB,EAAE;IACxCP,WAAW,CAACK,OAAO,EAAE,UAAUG,OAAO,EAAE;MACtCP,SAAS,CAACO,OAAO,EAAE,UAAUC,KAAK,EAAE;QAClCH,MAAM,CAACI,IAAI,CAACR,KAAK,CAACO,KAAK,EAAED,OAAO,CAACG,UAAU,CAAC,CAAC;MAC/C,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,MAAM;IACLV,SAAS,CAACI,OAAO,EAAE,UAAUI,KAAK,EAAE;MAClCH,MAAM,CAACI,IAAI,CAACR,KAAK,CAACO,KAAK,EAAEJ,OAAO,CAACM,UAAU,CAAC,CAAC;IAC/C,CAAC,CAAC;EACJ;EACA,OAAOR,iBAAiB,CAACG,MAAM,CAAC;AAClC;AAEA,eAAeF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}