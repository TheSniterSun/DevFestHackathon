{"ast":null,"code":"var _jsxFileName = \"/Users/brandonpae/Desktop/secra-code/frontend/src/components/chat/TextEntry.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\n// import \"./events.css\";\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\nimport axios from 'axios'; // Import Axios\n\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../context/AuthContext';\nimport styles from './events.module.css';\n\n// import Button from 'react-bootstrap/Button';\n\n// this is the component where the user enters text\n// at the bottom of the screen\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TextEntry({\n  onTextSubmit\n}) {\n  _s();\n  // const logoPath = '/images/secra_logo.png';\n  const [text, setText] = useState('');\n  const baseURL = \"http://localhost:8000\"; // for local dev this is the backend server\n\n  const {\n    getCookie\n  } = useContext(AuthContext);\n  const submitIconPath = '/images/submit_icon.png';\n  const navigate = useNavigate();\n  const handleTextChange = event => {\n    // pass in the event that occurs (some change / user interaction)\n    setText(event.target.value);\n  };\n\n  // ONCE USER SUBMITS TEXT MESSAGE, IT SHOULD SHOW UP AS A TEXT BUBBLE ON SCREEN\n  // ALSO NEED TO SUBMIT TO DJANGO ENDPOINT\n  const handleSubmit = event => {\n    event.preventDefault(); // Prevent the default form submission behavior\n\n    // first call a function in the parent component (EventsPage), to render the message\n\n    const text_dict = {\n      text: text,\n      sender: 'user'\n    };\n    onTextSubmit(text_dict);\n\n    // render the text bubble on screen by calling a function\n\n    const csrfToken = getCookie('csrftoken'); // get CSRF token (to access resources in server endpoint)\n\n    // Set the CSRF token in the headers\n    const headers = {\n      'Content-Type': 'application/json',\n      'X-CSRF-TOKEN': csrfToken\n    };\n    const payload = JSON.stringify({\n      query: text\n    });\n\n    // Make a POST request using Axios\n    axios.post(baseURL + '/chat/submit', payload, {\n      headers\n    }).then(response => {\n      // Handle the response data\n      console.log('Response:', response.data);\n      if (response.data[\"success\"]) {// True\n\n        // \n      } else {\n        if (response.data[\"error\"] === \"User is not authenticated\") {\n          navigate('/login');\n        }\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.bottomForm,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: handleTextChange,\n        className: styles.box,\n        placeholder: \"Message to assistant\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: styles.submitButton,\n        type: \"submit\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: submitIconPath,\n          style: {\n            width: \"100%\",\n            height: \"100%\"\n          },\n          alt: \"submit button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 64\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(TextEntry, \"/snMTrvQKaNdHR04g5bRzve+pck=\", false, function () {\n  return [useNavigate];\n});\n_c = TextEntry;\nexport default TextEntry;\nvar _c;\n$RefreshReg$(_c, \"TextEntry\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","useNavigate","AuthContext","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","TextEntry","onTextSubmit","_s","text","setText","baseURL","getCookie","submitIconPath","navigate","handleTextChange","event","target","value","handleSubmit","preventDefault","text_dict","sender","csrfToken","headers","payload","JSON","stringify","query","post","then","response","console","log","data","catch","error","children","className","bottomForm","onSubmit","type","onChange","box","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","id","submitButton","src","style","width","height","alt","_c","$RefreshReg$"],"sources":["/Users/brandonpae/Desktop/secra-code/frontend/src/components/chat/TextEntry.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n// import \"./events.css\";\nimport { useEffect } from 'react';\nimport { useContext } from 'react';\nimport axios from 'axios'; // Import Axios\n\nimport { useNavigate } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/AuthContext';\n\nimport styles from './events.module.css';\n\n// import Button from 'react-bootstrap/Button';\n\n// this is the component where the user enters text\n// at the bottom of the screen\n\nfunction TextEntry({onTextSubmit}) {\n    // const logoPath = '/images/secra_logo.png';\n    const [text, setText] = useState('');\n    const baseURL = \"http://localhost:8000\"; // for local dev this is the backend server\n\n    const { getCookie } = useContext(AuthContext);\n\n    const submitIconPath = '/images/submit_icon.png';\n\n    const navigate = useNavigate();\n\n    const handleTextChange = (event) => { // pass in the event that occurs (some change / user interaction)\n        setText(event.target.value);\n    };\n    \n    // ONCE USER SUBMITS TEXT MESSAGE, IT SHOULD SHOW UP AS A TEXT BUBBLE ON SCREEN\n    // ALSO NEED TO SUBMIT TO DJANGO ENDPOINT\n    const handleSubmit = (event) => {\n        event.preventDefault(); // Prevent the default form submission behavior\n        \n        // first call a function in the parent component (EventsPage), to render the message\n\n        const text_dict = {\n            text: text,\n            sender: 'user'\n        };\n\n        onTextSubmit(text_dict);\n\n        // render the text bubble on screen by calling a function\n        \n        const csrfToken = getCookie('csrftoken'); // get CSRF token (to access resources in server endpoint)\n\n        // Set the CSRF token in the headers\n        const headers = {\n            'Content-Type': 'application/json',\n            'X-CSRF-TOKEN': csrfToken,\n        };\n        \n        const payload = JSON.stringify({query: text});\n\n        // Make a POST request using Axios\n        axios.post(baseURL + '/chat/submit', payload, { headers })\n        .then(response => {\n            // Handle the response data\n            console.log('Response:', response.data);\n\n            if (response.data[\"success\"]) { // True\n                \n                // \n            }\n            else {\n                if (response.data[\"error\"] === \"User is not authenticated\") {\n                    navigate('/login');\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error:', error);\n        });\n\n    };\n\n    return (\n        <> \n            {/* now, with using CSS module, need to change how we set className */ }\n\n            <form className={styles.bottomForm} onSubmit={handleSubmit}>\n                <input type=\"text\" value={text} onChange={handleTextChange} className={styles.box} placeholder=\"Message to assistant\" required/>\n                <button id={styles.submitButton} type=\"submit\"><img src={submitIconPath} style={{width: \"100%\", height: \"100%\"}}alt=\"submit button\"/> </button>\n            </form>\n        </>\n    );\n}\n\nexport default TextEntry;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}